var _____WB$wombat$assign$function_____ = function(name) {return (self._wb_wombat && self._wb_wombat.local_init && self._wb_wombat.local_init(name)) || self[name]; };
if (!self.__WB_pmw) { self.__WB_pmw = function(obj) { this.__WB_source = obj; return this; } }
{
  let window = _____WB$wombat$assign$function_____("window");
  let self = _____WB$wombat$assign$function_____("self");
  let document = _____WB$wombat$assign$function_____("document");
  let location = _____WB$wombat$assign$function_____("location");
  let top = _____WB$wombat$assign$function_____("top");
  let parent = _____WB$wombat$assign$function_____("parent");
  let frames = _____WB$wombat$assign$function_____("frames");
  let opener = _____WB$wombat$assign$function_____("opener");

/*! jQuery v1.8.3 jquery.com | jquery.org/license */
(function(e,t){function _(e){var t=M[e]={};return v.each(e.split(y),function(e,n){t[n]=!0}),t}function H(e,n,r){if(r===t&&e.nodeType===1){var i="data-"+n.replace(P,"-$1").toLowerCase();r=e.getAttribute(i);if(typeof r=="string"){try{r=r==="true"?!0:r==="false"?!1:r==="null"?null:+r+""===r?+r:D.test(r)?v.parseJSON(r):r}catch(s){}v.data(e,n,r)}else r=t}return r}function B(e){var t;for(t in e){if(t==="data"&&v.isEmptyObject(e[t]))continue;if(t!=="toJSON")return!1}return!0}function et(){return!1}function tt(){return!0}function ut(e){return!e||!e.parentNode||e.parentNode.nodeType===11}function at(e,t){do e=e[t];while(e&&e.nodeType!==1);return e}function ft(e,t,n){t=t||0;if(v.isFunction(t))return v.grep(e,function(e,r){var i=!!t.call(e,r,e);return i===n});if(t.nodeType)return v.grep(e,function(e,r){return e===t===n});if(typeof t=="string"){var r=v.grep(e,function(e){return e.nodeType===1});if(it.test(t))return v.filter(t,r,!n);t=v.filter(t,r)}return v.grep(e,function(e,r){return v.inArray(e,t)>=0===n})}function lt(e){var t=ct.split("|"),n=e.createDocumentFragment();if(n.createElement)while(t.length)n.createElement(t.pop());return n}function Lt(e,t){return e.getElementsByTagName(t)[0]||e.appendChild(e.ownerDocument.createElement(t))}function At(e,t){if(t.nodeType!==1||!v.hasData(e))return;var n,r,i,s=v._data(e),o=v._data(t,s),u=s.events;if(u){delete o.handle,o.events={};for(n in u)for(r=0,i=u[n].length;r<i;r++)v.event.add(t,n,u[n][r])}o.data&&(o.data=v.extend({},o.data))}function Ot(e,t){var n;if(t.nodeType!==1)return;t.clearAttributes&&t.clearAttributes(),t.mergeAttributes&&t.mergeAttributes(e),n=t.nodeName.toLowerCase(),n==="object"?(t.parentNode&&(t.outerHTML=e.outerHTML),v.support.html5Clone&&e.innerHTML&&!v.trim(t.innerHTML)&&(t.innerHTML=e.innerHTML)):n==="input"&&Et.test(e.type)?(t.defaultChecked=t.checked=e.checked,t.value!==e.value&&(t.value=e.value)):n==="option"?t.selected=e.defaultSelected:n==="input"||n==="textarea"?t.defaultValue=e.defaultValue:n==="script"&&t.text!==e.text&&(t.text=e.text),t.removeAttribute(v.expando)}function Mt(e){return typeof e.getElementsByTagName!="undefined"?e.getElementsByTagName("*"):typeof e.querySelectorAll!="undefined"?e.querySelectorAll("*"):[]}function _t(e){Et.test(e.type)&&(e.defaultChecked=e.checked)}function Qt(e,t){if(t in e)return t;var n=t.charAt(0).toUpperCase()+t.slice(1),r=t,i=Jt.length;while(i--){t=Jt[i]+n;if(t in e)return t}return r}function Gt(e,t){return e=t||e,v.css(e,"display")==="none"||!v.contains(e.ownerDocument,e)}function Yt(e,t){var n,r,i=[],s=0,o=e.length;for(;s<o;s++){n=e[s];if(!n.style)continue;i[s]=v._data(n,"olddisplay"),t?(!i[s]&&n.style.display==="none"&&(n.style.display=""),n.style.display===""&&Gt(n)&&(i[s]=v._data(n,"olddisplay",nn(n.nodeName)))):(r=Dt(n,"display"),!i[s]&&r!=="none"&&v._data(n,"olddisplay",r))}for(s=0;s<o;s++){n=e[s];if(!n.style)continue;if(!t||n.style.display==="none"||n.style.display==="")n.style.display=t?i[s]||"":"none"}return e}function Zt(e,t,n){var r=Rt.exec(t);return r?Math.max(0,r[1]-(n||0))+(r[2]||"px"):t}function en(e,t,n,r){var i=n===(r?"border":"content")?4:t==="width"?1:0,s=0;for(;i<4;i+=2)n==="margin"&&(s+=v.css(e,n+$t[i],!0)),r?(n==="content"&&(s-=parseFloat(Dt(e,"padding"+$t[i]))||0),n!=="margin"&&(s-=parseFloat(Dt(e,"border"+$t[i]+"Width"))||0)):(s+=parseFloat(Dt(e,"padding"+$t[i]))||0,n!=="padding"&&(s+=parseFloat(Dt(e,"border"+$t[i]+"Width"))||0));return s}function tn(e,t,n){var r=t==="width"?e.offsetWidth:e.offsetHeight,i=!0,s=v.support.boxSizing&&v.css(e,"boxSizing")==="border-box";if(r<=0||r==null){r=Dt(e,t);if(r<0||r==null)r=e.style[t];if(Ut.test(r))return r;i=s&&(v.support.boxSizingReliable||r===e.style[t]),r=parseFloat(r)||0}return r+en(e,t,n||(s?"border":"content"),i)+"px"}function nn(e){if(Wt[e])return Wt[e];var t=v("<"+e+">").appendTo(i.body),n=t.css("display");t.remove();if(n==="none"||n===""){Pt=i.body.appendChild(Pt||v.extend(i.createElement("iframe"),{frameBorder:0,width:0,height:0}));if(!Ht||!Pt.createElement)Ht=(Pt.contentWindow||Pt.contentDocument).document,Ht.write("<!doctype html><html><body>"),Ht.close();t=Ht.body.appendChild(Ht.createElement(e)),n=Dt(t,"display"),i.body.removeChild(Pt)}return Wt[e]=n,n}function fn(e,t,n,r){var i;if(v.isArray(t))v.each(t,function(t,i){n||sn.test(e)?r(e,i):fn(e+"["+(typeof i=="object"?t:"")+"]",i,n,r)});else if(!n&&v.type(t)==="object")for(i in t)fn(e+"["+i+"]",t[i],n,r);else r(e,t)}function Cn(e){return function(t,n){typeof t!="string"&&(n=t,t="*");var r,i,s,o=t.toLowerCase().split(y),u=0,a=o.length;if(v.isFunction(n))for(;u<a;u++)r=o[u],s=/^\+/.test(r),s&&(r=r.substr(1)||"*"),i=e[r]=e[r]||[],i[s?"unshift":"push"](n)}}function kn(e,n,r,i,s,o){s=s||n.dataTypes[0],o=o||{},o[s]=!0;var u,a=e[s],f=0,l=a?a.length:0,c=e===Sn;for(;f<l&&(c||!u);f++)u=a[f](n,r,i),typeof u=="string"&&(!c||o[u]?u=t:(n.dataTypes.unshift(u),u=kn(e,n,r,i,u,o)));return(c||!u)&&!o["*"]&&(u=kn(e,n,r,i,"*",o)),u}function Ln(e,n){var r,i,s=v.ajaxSettings.flatOptions||{};for(r in n)n[r]!==t&&((s[r]?e:i||(i={}))[r]=n[r]);i&&v.extend(!0,e,i)}function An(e,n,r){var i,s,o,u,a=e.contents,f=e.dataTypes,l=e.responseFields;for(s in l)s in r&&(n[l[s]]=r[s]);while(f[0]==="*")f.shift(),i===t&&(i=e.mimeType||n.getResponseHeader("content-type"));if(i)for(s in a)if(a[s]&&a[s].test(i)){f.unshift(s);break}if(f[0]in r)o=f[0];else{for(s in r){if(!f[0]||e.converters[s+" "+f[0]]){o=s;break}u||(u=s)}o=o||u}if(o)return o!==f[0]&&f.unshift(o),r[o]}function On(e,t){var n,r,i,s,o=e.dataTypes.slice(),u=o[0],a={},f=0;e.dataFilter&&(t=e.dataFilter(t,e.dataType));if(o[1])for(n in e.converters)a[n.toLowerCase()]=e.converters[n];for(;i=o[++f];)if(i!=="*"){if(u!=="*"&&u!==i){n=a[u+" "+i]||a["* "+i];if(!n)for(r in a){s=r.split(" ");if(s[1]===i){n=a[u+" "+s[0]]||a["* "+s[0]];if(n){n===!0?n=a[r]:a[r]!==!0&&(i=s[0],o.splice(f--,0,i));break}}}if(n!==!0)if(n&&e["throws"])t=n(t);else try{t=n(t)}catch(l){return{state:"parsererror",error:n?l:"No conversion from "+u+" to "+i}}}u=i}return{state:"success",data:t}}function Fn(){try{return new e.XMLHttpRequest}catch(t){}}function In(){try{return new e.ActiveXObject("Microsoft.XMLHTTP")}catch(t){}}function $n(){return setTimeout(function(){qn=t},0),qn=v.now()}function Jn(e,t){v.each(t,function(t,n){var r=(Vn[t]||[]).concat(Vn["*"]),i=0,s=r.length;for(;i<s;i++)if(r[i].call(e,t,n))return})}function Kn(e,t,n){var r,i=0,s=0,o=Xn.length,u=v.Deferred().always(function(){delete a.elem}),a=function(){var t=qn||$n(),n=Math.max(0,f.startTime+f.duration-t),r=n/f.duration||0,i=1-r,s=0,o=f.tweens.length;for(;s<o;s++)f.tweens[s].run(i);return u.notifyWith(e,[f,i,n]),i<1&&o?n:(u.resolveWith(e,[f]),!1)},f=u.promise({elem:e,props:v.extend({},t),opts:v.extend(!0,{specialEasing:{}},n),originalProperties:t,originalOptions:n,startTime:qn||$n(),duration:n.duration,tweens:[],createTween:function(t,n,r){var i=v.Tween(e,f.opts,t,n,f.opts.specialEasing[t]||f.opts.easing);return f.tweens.push(i),i},stop:function(t){var n=0,r=t?f.tweens.length:0;for(;n<r;n++)f.tweens[n].run(1);return t?u.resolveWith(e,[f,t]):u.rejectWith(e,[f,t]),this}}),l=f.props;Qn(l,f.opts.specialEasing);for(;i<o;i++){r=Xn[i].call(f,e,l,f.opts);if(r)return r}return Jn(f,l),v.isFunction(f.opts.start)&&f.opts.start.call(e,f),v.fx.timer(v.extend(a,{anim:f,queue:f.opts.queue,elem:e})),f.progress(f.opts.progress).done(f.opts.done,f.opts.complete).fail(f.opts.fail).always(f.opts.always)}function Qn(e,t){var n,r,i,s,o;for(n in e){r=v.camelCase(n),i=t[r],s=e[n],v.isArray(s)&&(i=s[1],s=e[n]=s[0]),n!==r&&(e[r]=s,delete e[n]),o=v.cssHooks[r];if(o&&"expand"in o){s=o.expand(s),delete e[r];for(n in s)n in e||(e[n]=s[n],t[n]=i)}else t[r]=i}}function Gn(e,t,n){var r,i,s,o,u,a,f,l,c,h=this,p=e.style,d={},m=[],g=e.nodeType&&Gt(e);n.queue||(l=v._queueHooks(e,"fx"),l.unqueued==null&&(l.unqueued=0,c=l.empty.fire,l.empty.fire=function(){l.unqueued||c()}),l.unqueued++,h.always(function(){h.always(function(){l.unqueued--,v.queue(e,"fx").length||l.empty.fire()})})),e.nodeType===1&&("height"in t||"width"in t)&&(n.overflow=[p.overflow,p.overflowX,p.overflowY],v.css(e,"display")==="inline"&&v.css(e,"float")==="none"&&(!v.support.inlineBlockNeedsLayout||nn(e.nodeName)==="inline"?p.display="inline-block":p.zoom=1)),n.overflow&&(p.overflow="hidden",v.support.shrinkWrapBlocks||h.done(function(){p.overflow=n.overflow[0],p.overflowX=n.overflow[1],p.overflowY=n.overflow[2]}));for(r in t){s=t[r];if(Un.exec(s)){delete t[r],a=a||s==="toggle";if(s===(g?"hide":"show"))continue;m.push(r)}}o=m.length;if(o){u=v._data(e,"fxshow")||v._data(e,"fxshow",{}),"hidden"in u&&(g=u.hidden),a&&(u.hidden=!g),g?v(e).show():h.done(function(){v(e).hide()}),h.done(function(){var t;v.removeData(e,"fxshow",!0);for(t in d)v.style(e,t,d[t])});for(r=0;r<o;r++)i=m[r],f=h.createTween(i,g?u[i]:0),d[i]=u[i]||v.style(e,i),i in u||(u[i]=f.start,g&&(f.end=f.start,f.start=i==="width"||i==="height"?1:0))}}function Yn(e,t,n,r,i){return new Yn.prototype.init(e,t,n,r,i)}function Zn(e,t){var n,r={height:e},i=0;t=t?1:0;for(;i<4;i+=2-t)n=$t[i],r["margin"+n]=r["padding"+n]=e;return t&&(r.opacity=r.width=e),r}function tr(e){return v.isWindow(e)?e:e.nodeType===9?e.defaultView||e.parentWindow:!1}var n,r,i=e.document,s=e.location,o=e.navigator,u=e.jQuery,a=e.$,f=Array.prototype.push,l=Array.prototype.slice,c=Array.prototype.indexOf,h=Object.prototype.toString,p=Object.prototype.hasOwnProperty,d=String.prototype.trim,v=function(e,t){return new v.fn.init(e,t,n)},m=/[\-+]?(?:\d*\.|)\d+(?:[eE][\-+]?\d+|)/.source,g=/\S/,y=/\s+/,b=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,w=/^(?:[^#<]*(<[\w\W]+>)[^>]*$|#([\w\-]*)$)/,E=/^<(\w+)\s*\/?>(?:<\/\1>|)$/,S=/^[\],:{}\s]*$/,x=/(?:^|:|,)(?:\s*\[)+/g,T=/\\(?:["\\\/bfnrt]|u[\da-fA-F]{4})/g,N=/"[^"\\\r\n]*"|true|false|null|-?(?:\d\d*\.|)\d+(?:[eE][\-+]?\d+|)/g,C=/^-ms-/,k=/-([\da-z])/gi,L=function(e,t){return(t+"").toUpperCase()},A=function(){i.addEventListener?(i.removeEventListener("DOMContentLoaded",A,!1),v.ready()):i.readyState==="complete"&&(i.detachEvent("onreadystatechange",A),v.ready())},O={};v.fn=v.prototype={constructor:v,init:function(e,n,r){var s,o,u,a;if(!e)return this;if(e.nodeType)return this.context=this[0]=e,this.length=1,this;if(typeof e=="string"){e.charAt(0)==="<"&&e.charAt(e.length-1)===">"&&e.length>=3?s=[null,e,null]:s=w.exec(e);if(s&&(s[1]||!n)){if(s[1])return n=n instanceof v?n[0]:n,a=n&&n.nodeType?n.ownerDocument||n:i,e=v.parseHTML(s[1],a,!0),E.test(s[1])&&v.isPlainObject(n)&&this.attr.call(e,n,!0),v.merge(this,e);o=i.getElementById(s[2]);if(o&&o.parentNode){if(o.id!==s[2])return r.find(e);this.length=1,this[0]=o}return this.context=i,this.selector=e,this}return!n||n.jquery?(n||r).find(e):this.constructor(n).find(e)}return v.isFunction(e)?r.ready(e):(e.selector!==t&&(this.selector=e.selector,this.context=e.context),v.makeArray(e,this))},selector:"",jquery:"1.8.3",length:0,size:function(){return this.length},toArray:function(){return l.call(this)},get:function(e){return e==null?this.toArray():e<0?this[this.length+e]:this[e]},pushStack:function(e,t,n){var r=v.merge(this.constructor(),e);return r.prevObject=this,r.context=this.context,t==="find"?r.selector=this.selector+(this.selector?" ":"")+n:t&&(r.selector=this.selector+"."+t+"("+n+")"),r},each:function(e,t){return v.each(this,e,t)},ready:function(e){return v.ready.promise().done(e),this},eq:function(e){return e=+e,e===-1?this.slice(e):this.slice(e,e+1)},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},slice:function(){return this.pushStack(l.apply(this,arguments),"slice",l.call(arguments).join(","))},map:function(e){return this.pushStack(v.map(this,function(t,n){return e.call(t,n,t)}))},end:function(){return this.prevObject||this.constructor(null)},push:f,sort:[].sort,splice:[].splice},v.fn.init.prototype=v.fn,v.extend=v.fn.extend=function(){var e,n,r,i,s,o,u=arguments[0]||{},a=1,f=arguments.length,l=!1;typeof u=="boolean"&&(l=u,u=arguments[1]||{},a=2),typeof u!="object"&&!v.isFunction(u)&&(u={}),f===a&&(u=this,--a);for(;a<f;a++)if((e=arguments[a])!=null)for(n in e){r=u[n],i=e[n];if(u===i)continue;l&&i&&(v.isPlainObject(i)||(s=v.isArray(i)))?(s?(s=!1,o=r&&v.isArray(r)?r:[]):o=r&&v.isPlainObject(r)?r:{},u[n]=v.extend(l,o,i)):i!==t&&(u[n]=i)}return u},v.extend({noConflict:function(t){return e.$===v&&(e.$=a),t&&e.jQuery===v&&(e.jQuery=u),v},isReady:!1,readyWait:1,holdReady:function(e){e?v.readyWait++:v.ready(!0)},ready:function(e){if(e===!0?--v.readyWait:v.isReady)return;if(!i.body)return setTimeout(v.ready,1);v.isReady=!0;if(e!==!0&&--v.readyWait>0)return;r.resolveWith(i,[v]),v.fn.trigger&&v(i).trigger("ready").off("ready")},isFunction:function(e){return v.type(e)==="function"},isArray:Array.isArray||function(e){return v.type(e)==="array"},isWindow:function(e){return e!=null&&e==e.window},isNumeric:function(e){return!isNaN(parseFloat(e))&&isFinite(e)},type:function(e){return e==null?String(e):O[h.call(e)]||"object"},isPlainObject:function(e){if(!e||v.type(e)!=="object"||e.nodeType||v.isWindow(e))return!1;try{if(e.constructor&&!p.call(e,"constructor")&&!p.call(e.constructor.prototype,"isPrototypeOf"))return!1}catch(n){return!1}var r;for(r in e);return r===t||p.call(e,r)},isEmptyObject:function(e){var t;for(t in e)return!1;return!0},error:function(e){throw new Error(e)},parseHTML:function(e,t,n){var r;return!e||typeof e!="string"?null:(typeof t=="boolean"&&(n=t,t=0),t=t||i,(r=E.exec(e))?[t.createElement(r[1])]:(r=v.buildFragment([e],t,n?null:[]),v.merge([],(r.cacheable?v.clone(r.fragment):r.fragment).childNodes)))},parseJSON:function(t){if(!t||typeof t!="string")return null;t=v.trim(t);if(e.JSON&&e.JSON.parse)return e.JSON.parse(t);if(S.test(t.replace(T,"@").replace(N,"]").replace(x,"")))return(new Function("return "+t))();v.error("Invalid JSON: "+t)},parseXML:function(n){var r,i;if(!n||typeof n!="string")return null;try{e.DOMParser?(i=new DOMParser,r=i.parseFromString(n,"text/xml")):(r=new ActiveXObject("Microsoft.XMLDOM"),r.async="false",r.loadXML(n))}catch(s){r=t}return(!r||!r.documentElement||r.getElementsByTagName("parsererror").length)&&v.error("Invalid XML: "+n),r},noop:function(){},globalEval:function(t){t&&g.test(t)&&(e.execScript||function(t){e.eval.call(e,t)})(t)},camelCase:function(e){return e.replace(C,"ms-").replace(k,L)},nodeName:function(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()},each:function(e,n,r){var i,s=0,o=e.length,u=o===t||v.isFunction(e);if(r){if(u){for(i in e)if(n.apply(e[i],r)===!1)break}else for(;s<o;)if(n.apply(e[s++],r)===!1)break}else if(u){for(i in e)if(n.call(e[i],i,e[i])===!1)break}else for(;s<o;)if(n.call(e[s],s,e[s++])===!1)break;return e},trim:d&&!d.call("\ufeff\u00a0")?function(e){return e==null?"":d.call(e)}:function(e){return e==null?"":(e+"").replace(b,"")},makeArray:function(e,t){var n,r=t||[];return e!=null&&(n=v.type(e),e.length==null||n==="string"||n==="function"||n==="regexp"||v.isWindow(e)?f.call(r,e):v.merge(r,e)),r},inArray:function(e,t,n){var r;if(t){if(c)return c.call(t,e,n);r=t.length,n=n?n<0?Math.max(0,r+n):n:0;for(;n<r;n++)if(n in t&&t[n]===e)return n}return-1},merge:function(e,n){var r=n.length,i=e.length,s=0;if(typeof r=="number")for(;s<r;s++)e[i++]=n[s];else while(n[s]!==t)e[i++]=n[s++];return e.length=i,e},grep:function(e,t,n){var r,i=[],s=0,o=e.length;n=!!n;for(;s<o;s++)r=!!t(e[s],s),n!==r&&i.push(e[s]);return i},map:function(e,n,r){var i,s,o=[],u=0,a=e.length,f=e instanceof v||a!==t&&typeof a=="number"&&(a>0&&e[0]&&e[a-1]||a===0||v.isArray(e));if(f)for(;u<a;u++)i=n(e[u],u,r),i!=null&&(o[o.length]=i);else for(s in e)i=n(e[s],s,r),i!=null&&(o[o.length]=i);return o.concat.apply([],o)},guid:1,proxy:function(e,n){var r,i,s;return typeof n=="string"&&(r=e[n],n=e,e=r),v.isFunction(e)?(i=l.call(arguments,2),s=function(){return e.apply(n,i.concat(l.call(arguments)))},s.guid=e.guid=e.guid||v.guid++,s):t},access:function(e,n,r,i,s,o,u){var a,f=r==null,l=0,c=e.length;if(r&&typeof r=="object"){for(l in r)v.access(e,n,l,r[l],1,o,i);s=1}else if(i!==t){a=u===t&&v.isFunction(i),f&&(a?(a=n,n=function(e,t,n){return a.call(v(e),n)}):(n.call(e,i),n=null));if(n)for(;l<c;l++)n(e[l],r,a?i.call(e[l],l,n(e[l],r)):i,u);s=1}return s?e:f?n.call(e):c?n(e[0],r):o},now:function(){return(new Date).getTime()}}),v.ready.promise=function(t){if(!r){r=v.Deferred();if(i.readyState==="complete")setTimeout(v.ready,1);else if(i.addEventListener)i.addEventListener("DOMContentLoaded",A,!1),e.addEventListener("load",v.ready,!1);else{i.attachEvent("onreadystatechange",A),e.attachEvent("onload",v.ready);var n=!1;try{n=e.frameElement==null&&i.documentElement}catch(s){}n&&n.doScroll&&function o(){if(!v.isReady){try{n.doScroll("left")}catch(e){return setTimeout(o,50)}v.ready()}}()}}return r.promise(t)},v.each("Boolean Number String Function Array Date RegExp Object".split(" "),function(e,t){O["[object "+t+"]"]=t.toLowerCase()}),n=v(i);var M={};v.Callbacks=function(e){e=typeof e=="string"?M[e]||_(e):v.extend({},e);var n,r,i,s,o,u,a=[],f=!e.once&&[],l=function(t){n=e.memory&&t,r=!0,u=s||0,s=0,o=a.length,i=!0;for(;a&&u<o;u++)if(a[u].apply(t[0],t[1])===!1&&e.stopOnFalse){n=!1;break}i=!1,a&&(f?f.length&&l(f.shift()):n?a=[]:c.disable())},c={add:function(){if(a){var t=a.length;(function r(t){v.each(t,function(t,n){var i=v.type(n);i==="function"?(!e.unique||!c.has(n))&&a.push(n):n&&n.length&&i!=="string"&&r(n)})})(arguments),i?o=a.length:n&&(s=t,l(n))}return this},remove:function(){return a&&v.each(arguments,function(e,t){var n;while((n=v.inArray(t,a,n))>-1)a.splice(n,1),i&&(n<=o&&o--,n<=u&&u--)}),this},has:function(e){return v.inArray(e,a)>-1},empty:function(){return a=[],this},disable:function(){return a=f=n=t,this},disabled:function(){return!a},lock:function(){return f=t,n||c.disable(),this},locked:function(){return!f},fireWith:function(e,t){return t=t||[],t=[e,t.slice?t.slice():t],a&&(!r||f)&&(i?f.push(t):l(t)),this},fire:function(){return c.fireWith(this,arguments),this},fired:function(){return!!r}};return c},v.extend({Deferred:function(e){var t=[["resolve","done",v.Callbacks("once memory"),"resolved"],["reject","fail",v.Callbacks("once memory"),"rejected"],["notify","progress",v.Callbacks("memory")]],n="pending",r={state:function(){return n},always:function(){return i.done(arguments).fail(arguments),this},then:function(){var e=arguments;return v.Deferred(function(n){v.each(t,function(t,r){var s=r[0],o=e[t];i[r[1]](v.isFunction(o)?function(){var e=o.apply(this,arguments);e&&v.isFunction(e.promise)?e.promise().done(n.resolve).fail(n.reject).progress(n.notify):n[s+"With"](this===i?n:this,[e])}:n[s])}),e=null}).promise()},promise:function(e){return e!=null?v.extend(e,r):r}},i={};return r.pipe=r.then,v.each(t,function(e,s){var o=s[2],u=s[3];r[s[1]]=o.add,u&&o.add(function(){n=u},t[e^1][2].disable,t[2][2].lock),i[s[0]]=o.fire,i[s[0]+"With"]=o.fireWith}),r.promise(i),e&&e.call(i,i),i},when:function(e){var t=0,n=l.call(arguments),r=n.length,i=r!==1||e&&v.isFunction(e.promise)?r:0,s=i===1?e:v.Deferred(),o=function(e,t,n){return function(r){t[e]=this,n[e]=arguments.length>1?l.call(arguments):r,n===u?s.notifyWith(t,n):--i||s.resolveWith(t,n)}},u,a,f;if(r>1){u=new Array(r),a=new Array(r),f=new Array(r);for(;t<r;t++)n[t]&&v.isFunction(n[t].promise)?n[t].promise().done(o(t,f,n)).fail(s.reject).progress(o(t,a,u)):--i}return i||s.resolveWith(f,n),s.promise()}}),v.support=function(){var t,n,r,s,o,u,a,f,l,c,h,p=i.createElement("div");p.setAttribute("className","t"),p.innerHTML="  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>",n=p.getElementsByTagName("*"),r=p.getElementsByTagName("a")[0];if(!n||!r||!n.length)return{};s=i.createElement("select"),o=s.appendChild(i.createElement("option")),u=p.getElementsByTagName("input")[0],r.style.cssText="top:1px;float:left;opacity:.5",t={leadingWhitespace:p.firstChild.nodeType===3,tbody:!p.getElementsByTagName("tbody").length,htmlSerialize:!!p.getElementsByTagName("link").length,style:/top/.test(r.getAttribute("style")),hrefNormalized:r.getAttribute("href")==="/a",opacity:/^0.5/.test(r.style.opacity),cssFloat:!!r.style.cssFloat,checkOn:u.value==="on",optSelected:o.selected,getSetAttribute:p.className!=="t",enctype:!!i.createElement("form").enctype,html5Clone:i.createElement("nav").cloneNode(!0).outerHTML!=="<:nav></:nav>",boxModel:i.compatMode==="CSS1Compat",submitBubbles:!0,changeBubbles:!0,focusinBubbles:!1,deleteExpando:!0,noCloneEvent:!0,inlineBlockNeedsLayout:!1,shrinkWrapBlocks:!1,reliableMarginRight:!0,boxSizingReliable:!0,pixelPosition:!1},u.checked=!0,t.noCloneChecked=u.cloneNode(!0).checked,s.disabled=!0,t.optDisabled=!o.disabled;try{delete p.test}catch(d){t.deleteExpando=!1}!p.addEventListener&&p.attachEvent&&p.fireEvent&&(p.attachEvent("onclick",h=function(){t.noCloneEvent=!1}),p.cloneNode(!0).fireEvent("onclick"),p.detachEvent("onclick",h)),u=i.createElement("input"),u.value="t",u.setAttribute("type","radio"),t.radioValue=u.value==="t",u.setAttribute("checked","checked"),u.setAttribute("name","t"),p.appendChild(u),a=i.createDocumentFragment(),a.appendChild(p.lastChild),t.checkClone=a.cloneNode(!0).cloneNode(!0).lastChild.checked,t.appendChecked=u.checked,a.removeChild(u),a.appendChild(p);if(p.attachEvent)for(l in{submit:!0,change:!0,focusin:!0})f="on"+l,c=f in p,c||(p.setAttribute(f,"return;"),c=typeof p[f]=="function"),t[l+"Bubbles"]=c;return v(function(){var n,r,s,o,u="padding:0;margin:0;border:0;display:block;overflow:hidden;",a=i.getElementsByTagName("body")[0];if(!a)return;n=i.createElement("div"),n.style.cssText="visibility:hidden;border:0;width:0;height:0;position:static;top:0;margin-top:1px",a.insertBefore(n,a.firstChild),r=i.createElement("div"),n.appendChild(r),r.innerHTML="<table><tr><td></td><td>t</td></tr></table>",s=r.getElementsByTagName("td"),s[0].style.cssText="padding:0;margin:0;border:0;display:none",c=s[0].offsetHeight===0,s[0].style.display="",s[1].style.display="none",t.reliableHiddenOffsets=c&&s[0].offsetHeight===0,r.innerHTML="",r.style.cssText="box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;padding:1px;border:1px;display:block;width:4px;margin-top:1%;position:absolute;top:1%;",t.boxSizing=r.offsetWidth===4,t.doesNotIncludeMarginInBodyOffset=a.offsetTop!==1,e.getComputedStyle&&(t.pixelPosition=(e.getComputedStyle(r,null)||{}).top!=="1%",t.boxSizingReliable=(e.getComputedStyle(r,null)||{width:"4px"}).width==="4px",o=i.createElement("div"),o.style.cssText=r.style.cssText=u,o.style.marginRight=o.style.width="0",r.style.width="1px",r.appendChild(o),t.reliableMarginRight=!parseFloat((e.getComputedStyle(o,null)||{}).marginRight)),typeof r.style.zoom!="undefined"&&(r.innerHTML="",r.style.cssText=u+"width:1px;padding:1px;display:inline;zoom:1",t.inlineBlockNeedsLayout=r.offsetWidth===3,r.style.display="block",r.style.overflow="visible",r.innerHTML="<div></div>",r.firstChild.style.width="5px",t.shrinkWrapBlocks=r.offsetWidth!==3,n.style.zoom=1),a.removeChild(n),n=r=s=o=null}),a.removeChild(p),n=r=s=o=u=a=p=null,t}();var D=/(?:\{[\s\S]*\}|\[[\s\S]*\])$/,P=/([A-Z])/g;v.extend({cache:{},deletedIds:[],uuid:0,expando:"jQuery"+(v.fn.jquery+Math.random()).replace(/\D/g,""),noData:{embed:!0,object:"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",applet:!0},hasData:function(e){return e=e.nodeType?v.cache[e[v.expando]]:e[v.expando],!!e&&!B(e)},data:function(e,n,r,i){if(!v.acceptData(e))return;var s,o,u=v.expando,a=typeof n=="string",f=e.nodeType,l=f?v.cache:e,c=f?e[u]:e[u]&&u;if((!c||!l[c]||!i&&!l[c].data)&&a&&r===t)return;c||(f?e[u]=c=v.deletedIds.pop()||v.guid++:c=u),l[c]||(l[c]={},f||(l[c].toJSON=v.noop));if(typeof n=="object"||typeof n=="function")i?l[c]=v.extend(l[c],n):l[c].data=v.extend(l[c].data,n);return s=l[c],i||(s.data||(s.data={}),s=s.data),r!==t&&(s[v.camelCase(n)]=r),a?(o=s[n],o==null&&(o=s[v.camelCase(n)])):o=s,o},removeData:function(e,t,n){if(!v.acceptData(e))return;var r,i,s,o=e.nodeType,u=o?v.cache:e,a=o?e[v.expando]:v.expando;if(!u[a])return;if(t){r=n?u[a]:u[a].data;if(r){v.isArray(t)||(t in r?t=[t]:(t=v.camelCase(t),t in r?t=[t]:t=t.split(" ")));for(i=0,s=t.length;i<s;i++)delete r[t[i]];if(!(n?B:v.isEmptyObject)(r))return}}if(!n){delete u[a].data;if(!B(u[a]))return}o?v.cleanData([e],!0):v.support.deleteExpando||u!=u.window?delete u[a]:u[a]=null},_data:function(e,t,n){return v.data(e,t,n,!0)},acceptData:function(e){var t=e.nodeName&&v.noData[e.nodeName.toLowerCase()];return!t||t!==!0&&e.getAttribute("classid")===t}}),v.fn.extend({data:function(e,n){var r,i,s,o,u,a=this[0],f=0,l=null;if(e===t){if(this.length){l=v.data(a);if(a.nodeType===1&&!v._data(a,"parsedAttrs")){s=a.attributes;for(u=s.length;f<u;f++)o=s[f].name,o.indexOf("data-")||(o=v.camelCase(o.substring(5)),H(a,o,l[o]));v._data(a,"parsedAttrs",!0)}}return l}return typeof e=="object"?this.each(function(){v.data(this,e)}):(r=e.split(".",2),r[1]=r[1]?"."+r[1]:"",i=r[1]+"!",v.access(this,function(n){if(n===t)return l=this.triggerHandler("getData"+i,[r[0]]),l===t&&a&&(l=v.data(a,e),l=H(a,e,l)),l===t&&r[1]?this.data(r[0]):l;r[1]=n,this.each(function(){var t=v(this);t.triggerHandler("setData"+i,r),v.data(this,e,n),t.triggerHandler("changeData"+i,r)})},null,n,arguments.length>1,null,!1))},removeData:function(e){return this.each(function(){v.removeData(this,e)})}}),v.extend({queue:function(e,t,n){var r;if(e)return t=(t||"fx")+"queue",r=v._data(e,t),n&&(!r||v.isArray(n)?r=v._data(e,t,v.makeArray(n)):r.push(n)),r||[]},dequeue:function(e,t){t=t||"fx";var n=v.queue(e,t),r=n.length,i=n.shift(),s=v._queueHooks(e,t),o=function(){v.dequeue(e,t)};i==="inprogress"&&(i=n.shift(),r--),i&&(t==="fx"&&n.unshift("inprogress"),delete s.stop,i.call(e,o,s)),!r&&s&&s.empty.fire()},_queueHooks:function(e,t){var n=t+"queueHooks";return v._data(e,n)||v._data(e,n,{empty:v.Callbacks("once memory").add(function(){v.removeData(e,t+"queue",!0),v.removeData(e,n,!0)})})}}),v.fn.extend({queue:function(e,n){var r=2;return typeof e!="string"&&(n=e,e="fx",r--),arguments.length<r?v.queue(this[0],e):n===t?this:this.each(function(){var t=v.queue(this,e,n);v._queueHooks(this,e),e==="fx"&&t[0]!=="inprogress"&&v.dequeue(this,e)})},dequeue:function(e){return this.each(function(){v.dequeue(this,e)})},delay:function(e,t){return e=v.fx?v.fx.speeds[e]||e:e,t=t||"fx",this.queue(t,function(t,n){var r=setTimeout(t,e);n.stop=function(){clearTimeout(r)}})},clearQueue:function(e){return this.queue(e||"fx",[])},promise:function(e,n){var r,i=1,s=v.Deferred(),o=this,u=this.length,a=function(){--i||s.resolveWith(o,[o])};typeof e!="string"&&(n=e,e=t),e=e||"fx";while(u--)r=v._data(o[u],e+"queueHooks"),r&&r.empty&&(i++,r.empty.add(a));return a(),s.promise(n)}});var j,F,I,q=/[\t\r\n]/g,R=/\r/g,U=/^(?:button|input)$/i,z=/^(?:button|input|object|select|textarea)$/i,W=/^a(?:rea|)$/i,X=/^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,V=v.support.getSetAttribute;v.fn.extend({attr:function(e,t){return v.access(this,v.attr,e,t,arguments.length>1)},removeAttr:function(e){return this.each(function(){v.removeAttr(this,e)})},prop:function(e,t){return v.access(this,v.prop,e,t,arguments.length>1)},removeProp:function(e){return e=v.propFix[e]||e,this.each(function(){try{this[e]=t,delete this[e]}catch(n){}})},addClass:function(e){var t,n,r,i,s,o,u;if(v.isFunction(e))return this.each(function(t){v(this).addClass(e.call(this,t,this.className))});if(e&&typeof e=="string"){t=e.split(y);for(n=0,r=this.length;n<r;n++){i=this[n];if(i.nodeType===1)if(!i.className&&t.length===1)i.className=e;else{s=" "+i.className+" ";for(o=0,u=t.length;o<u;o++)s.indexOf(" "+t[o]+" ")<0&&(s+=t[o]+" ");i.className=v.trim(s)}}}return this},removeClass:function(e){var n,r,i,s,o,u,a;if(v.isFunction(e))return this.each(function(t){v(this).removeClass(e.call(this,t,this.className))});if(e&&typeof e=="string"||e===t){n=(e||"").split(y);for(u=0,a=this.length;u<a;u++){i=this[u];if(i.nodeType===1&&i.className){r=(" "+i.className+" ").replace(q," ");for(s=0,o=n.length;s<o;s++)while(r.indexOf(" "+n[s]+" ")>=0)r=r.replace(" "+n[s]+" "," ");i.className=e?v.trim(r):""}}}return this},toggleClass:function(e,t){var n=typeof e,r=typeof t=="boolean";return v.isFunction(e)?this.each(function(n){v(this).toggleClass(e.call(this,n,this.className,t),t)}):this.each(function(){if(n==="string"){var i,s=0,o=v(this),u=t,a=e.split(y);while(i=a[s++])u=r?u:!o.hasClass(i),o[u?"addClass":"removeClass"](i)}else if(n==="undefined"||n==="boolean")this.className&&v._data(this,"__className__",this.className),this.className=this.className||e===!1?"":v._data(this,"__className__")||""})},hasClass:function(e){var t=" "+e+" ",n=0,r=this.length;for(;n<r;n++)if(this[n].nodeType===1&&(" "+this[n].className+" ").replace(q," ").indexOf(t)>=0)return!0;return!1},val:function(e){var n,r,i,s=this[0];if(!arguments.length){if(s)return n=v.valHooks[s.type]||v.valHooks[s.nodeName.toLowerCase()],n&&"get"in n&&(r=n.get(s,"value"))!==t?r:(r=s.value,typeof r=="string"?r.replace(R,""):r==null?"":r);return}return i=v.isFunction(e),this.each(function(r){var s,o=v(this);if(this.nodeType!==1)return;i?s=e.call(this,r,o.val()):s=e,s==null?s="":typeof s=="number"?s+="":v.isArray(s)&&(s=v.map(s,function(e){return e==null?"":e+""})),n=v.valHooks[this.type]||v.valHooks[this.nodeName.toLowerCase()];if(!n||!("set"in n)||n.set(this,s,"value")===t)this.value=s})}}),v.extend({valHooks:{option:{get:function(e){var t=e.attributes.value;return!t||t.specified?e.value:e.text}},select:{get:function(e){var t,n,r=e.options,i=e.selectedIndex,s=e.type==="select-one"||i<0,o=s?null:[],u=s?i+1:r.length,a=i<0?u:s?i:0;for(;a<u;a++){n=r[a];if((n.selected||a===i)&&(v.support.optDisabled?!n.disabled:n.getAttribute("disabled")===null)&&(!n.parentNode.disabled||!v.nodeName(n.parentNode,"optgroup"))){t=v(n).val();if(s)return t;o.push(t)}}return o},set:function(e,t){var n=v.makeArray(t);return v(e).find("option").each(function(){this.selected=v.inArray(v(this).val(),n)>=0}),n.length||(e.selectedIndex=-1),n}}},attrFn:{},attr:function(e,n,r,i){var s,o,u,a=e.nodeType;if(!e||a===3||a===8||a===2)return;if(i&&v.isFunction(v.fn[n]))return v(e)[n](r);if(typeof e.getAttribute=="undefined")return v.prop(e,n,r);u=a!==1||!v.isXMLDoc(e),u&&(n=n.toLowerCase(),o=v.attrHooks[n]||(X.test(n)?F:j));if(r!==t){if(r===null){v.removeAttr(e,n);return}return o&&"set"in o&&u&&(s=o.set(e,r,n))!==t?s:(e.setAttribute(n,r+""),r)}return o&&"get"in o&&u&&(s=o.get(e,n))!==null?s:(s=e.getAttribute(n),s===null?t:s)},removeAttr:function(e,t){var n,r,i,s,o=0;if(t&&e.nodeType===1){r=t.split(y);for(;o<r.length;o++)i=r[o],i&&(n=v.propFix[i]||i,s=X.test(i),s||v.attr(e,i,""),e.removeAttribute(V?i:n),s&&n in e&&(e[n]=!1))}},attrHooks:{type:{set:function(e,t){if(U.test(e.nodeName)&&e.parentNode)v.error("type property can't be changed");else if(!v.support.radioValue&&t==="radio"&&v.nodeName(e,"input")){var n=e.value;return e.setAttribute("type",t),n&&(e.value=n),t}}},value:{get:function(e,t){return j&&v.nodeName(e,"button")?j.get(e,t):t in e?e.value:null},set:function(e,t,n){if(j&&v.nodeName(e,"button"))return j.set(e,t,n);e.value=t}}},propFix:{tabindex:"tabIndex",readonly:"readOnly","for":"htmlFor","class":"className",maxlength:"maxLength",cellspacing:"cellSpacing",cellpadding:"cellPadding",rowspan:"rowSpan",colspan:"colSpan",usemap:"useMap",frameborder:"frameBorder",contenteditable:"contentEditable"},prop:function(e,n,r){var i,s,o,u=e.nodeType;if(!e||u===3||u===8||u===2)return;return o=u!==1||!v.isXMLDoc(e),o&&(n=v.propFix[n]||n,s=v.propHooks[n]),r!==t?s&&"set"in s&&(i=s.set(e,r,n))!==t?i:e[n]=r:s&&"get"in s&&(i=s.get(e,n))!==null?i:e[n]},propHooks:{tabIndex:{get:function(e){var n=e.getAttributeNode("tabindex");return n&&n.specified?parseInt(n.value,10):z.test(e.nodeName)||W.test(e.nodeName)&&e.href?0:t}}}}),F={get:function(e,n){var r,i=v.prop(e,n);return i===!0||typeof i!="boolean"&&(r=e.getAttributeNode(n))&&r.nodeValue!==!1?n.toLowerCase():t},set:function(e,t,n){var r;return t===!1?v.removeAttr(e,n):(r=v.propFix[n]||n,r in e&&(e[r]=!0),e.setAttribute(n,n.toLowerCase())),n}},V||(I={name:!0,id:!0,coords:!0},j=v.valHooks.button={get:function(e,n){var r;return r=e.getAttributeNode(n),r&&(I[n]?r.value!=="":r.specified)?r.value:t},set:function(e,t,n){var r=e.getAttributeNode(n);return r||(r=i.createAttribute(n),e.setAttributeNode(r)),r.value=t+""}},v.each(["width","height"],function(e,t){v.attrHooks[t]=v.extend(v.attrHooks[t],{set:function(e,n){if(n==="")return e.setAttribute(t,"auto"),n}})}),v.attrHooks.contenteditable={get:j.get,set:function(e,t,n){t===""&&(t="false"),j.set(e,t,n)}}),v.support.hrefNormalized||v.each(["href","src","width","height"],function(e,n){v.attrHooks[n]=v.extend(v.attrHooks[n],{get:function(e){var r=e.getAttribute(n,2);return r===null?t:r}})}),v.support.style||(v.attrHooks.style={get:function(e){return e.style.cssText.toLowerCase()||t},set:function(e,t){return e.style.cssText=t+""}}),v.support.optSelected||(v.propHooks.selected=v.extend(v.propHooks.selected,{get:function(e){var t=e.parentNode;return t&&(t.selectedIndex,t.parentNode&&t.parentNode.selectedIndex),null}})),v.support.enctype||(v.propFix.enctype="encoding"),v.support.checkOn||v.each(["radio","checkbox"],function(){v.valHooks[this]={get:function(e){return e.getAttribute("value")===null?"on":e.value}}}),v.each(["radio","checkbox"],function(){v.valHooks[this]=v.extend(v.valHooks[this],{set:function(e,t){if(v.isArray(t))return e.checked=v.inArray(v(e).val(),t)>=0}})});var $=/^(?:textarea|input|select)$/i,J=/^([^\.]*|)(?:\.(.+)|)$/,K=/(?:^|\s)hover(\.\S+|)\b/,Q=/^key/,G=/^(?:mouse|contextmenu)|click/,Y=/^(?:focusinfocus|focusoutblur)$/,Z=function(e){return v.event.special.hover?e:e.replace(K,"mouseenter$1 mouseleave$1")};v.event={add:function(e,n,r,i,s){var o,u,a,f,l,c,h,p,d,m,g;if(e.nodeType===3||e.nodeType===8||!n||!r||!(o=v._data(e)))return;r.handler&&(d=r,r=d.handler,s=d.selector),r.guid||(r.guid=v.guid++),a=o.events,a||(o.events=a={}),u=o.handle,u||(o.handle=u=function(e){return typeof v=="undefined"||!!e&&v.event.triggered===e.type?t:v.event.dispatch.apply(u.elem,arguments)},u.elem=e),n=v.trim(Z(n)).split(" ");for(f=0;f<n.length;f++){l=J.exec(n[f])||[],c=l[1],h=(l[2]||"").split(".").sort(),g=v.event.special[c]||{},c=(s?g.delegateType:g.bindType)||c,g=v.event.special[c]||{},p=v.extend({type:c,origType:l[1],data:i,handler:r,guid:r.guid,selector:s,needsContext:s&&v.expr.match.needsContext.test(s),namespace:h.join(".")},d),m=a[c];if(!m){m=a[c]=[],m.delegateCount=0;if(!g.setup||g.setup.call(e,i,h,u)===!1)e.addEventListener?e.addEventListener(c,u,!1):e.attachEvent&&e.attachEvent("on"+c,u)}g.add&&(g.add.call(e,p),p.handler.guid||(p.handler.guid=r.guid)),s?m.splice(m.delegateCount++,0,p):m.push(p),v.event.global[c]=!0}e=null},global:{},remove:function(e,t,n,r,i){var s,o,u,a,f,l,c,h,p,d,m,g=v.hasData(e)&&v._data(e);if(!g||!(h=g.events))return;t=v.trim(Z(t||"")).split(" ");for(s=0;s<t.length;s++){o=J.exec(t[s])||[],u=a=o[1],f=o[2];if(!u){for(u in h)v.event.remove(e,u+t[s],n,r,!0);continue}p=v.event.special[u]||{},u=(r?p.delegateType:p.bindType)||u,d=h[u]||[],l=d.length,f=f?new RegExp("(^|\\.)"+f.split(".").sort().join("\\.(?:.*\\.|)")+"(\\.|$)"):null;for(c=0;c<d.length;c++)m=d[c],(i||a===m.origType)&&(!n||n.guid===m.guid)&&(!f||f.test(m.namespace))&&(!r||r===m.selector||r==="**"&&m.selector)&&(d.splice(c--,1),m.selector&&d.delegateCount--,p.remove&&p.remove.call(e,m));d.length===0&&l!==d.length&&((!p.teardown||p.teardown.call(e,f,g.handle)===!1)&&v.removeEvent(e,u,g.handle),delete h[u])}v.isEmptyObject(h)&&(delete g.handle,v.removeData(e,"events",!0))},customEvent:{getData:!0,setData:!0,changeData:!0},trigger:function(n,r,s,o){if(!s||s.nodeType!==3&&s.nodeType!==8){var u,a,f,l,c,h,p,d,m,g,y=n.type||n,b=[];if(Y.test(y+v.event.triggered))return;y.indexOf("!")>=0&&(y=y.slice(0,-1),a=!0),y.indexOf(".")>=0&&(b=y.split("."),y=b.shift(),b.sort());if((!s||v.event.customEvent[y])&&!v.event.global[y])return;n=typeof n=="object"?n[v.expando]?n:new v.Event(y,n):new v.Event(y),n.type=y,n.isTrigger=!0,n.exclusive=a,n.namespace=b.join("."),n.namespace_re=n.namespace?new RegExp("(^|\\.)"+b.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,h=y.indexOf(":")<0?"on"+y:"";if(!s){u=v.cache;for(f in u)u[f].events&&u[f].events[y]&&v.event.trigger(n,r,u[f].handle.elem,!0);return}n.result=t,n.target||(n.target=s),r=r!=null?v.makeArray(r):[],r.unshift(n),p=v.event.special[y]||{};if(p.trigger&&p.trigger.apply(s,r)===!1)return;m=[[s,p.bindType||y]];if(!o&&!p.noBubble&&!v.isWindow(s)){g=p.delegateType||y,l=Y.test(g+y)?s:s.parentNode;for(c=s;l;l=l.parentNode)m.push([l,g]),c=l;c===(s.ownerDocument||i)&&m.push([c.defaultView||c.parentWindow||e,g])}for(f=0;f<m.length&&!n.isPropagationStopped();f++)l=m[f][0],n.type=m[f][1],d=(v._data(l,"events")||{})[n.type]&&v._data(l,"handle"),d&&d.apply(l,r),d=h&&l[h],d&&v.acceptData(l)&&d.apply&&d.apply(l,r)===!1&&n.preventDefault();return n.type=y,!o&&!n.isDefaultPrevented()&&(!p._default||p._default.apply(s.ownerDocument,r)===!1)&&(y!=="click"||!v.nodeName(s,"a"))&&v.acceptData(s)&&h&&s[y]&&(y!=="focus"&&y!=="blur"||n.target.offsetWidth!==0)&&!v.isWindow(s)&&(c=s[h],c&&(s[h]=null),v.event.triggered=y,s[y](),v.event.triggered=t,c&&(s[h]=c)),n.result}return},dispatch:function(n){n=v.event.fix(n||e.event);var r,i,s,o,u,a,f,c,h,p,d=(v._data(this,"events")||{})[n.type]||[],m=d.delegateCount,g=l.call(arguments),y=!n.exclusive&&!n.namespace,b=v.event.special[n.type]||{},w=[];g[0]=n,n.delegateTarget=this;if(b.preDispatch&&b.preDispatch.call(this,n)===!1)return;if(m&&(!n.button||n.type!=="click"))for(s=n.target;s!=this;s=s.parentNode||this)if(s.disabled!==!0||n.type!=="click"){u={},f=[];for(r=0;r<m;r++)c=d[r],h=c.selector,u[h]===t&&(u[h]=c.needsContext?v(h,this).index(s)>=0:v.find(h,this,null,[s]).length),u[h]&&f.push(c);f.length&&w.push({elem:s,matches:f})}d.length>m&&w.push({elem:this,matches:d.slice(m)});for(r=0;r<w.length&&!n.isPropagationStopped();r++){a=w[r],n.currentTarget=a.elem;for(i=0;i<a.matches.length&&!n.isImmediatePropagationStopped();i++){c=a.matches[i];if(y||!n.namespace&&!c.namespace||n.namespace_re&&n.namespace_re.test(c.namespace))n.data=c.data,n.handleObj=c,o=((v.event.special[c.origType]||{}).handle||c.handler).apply(a.elem,g),o!==t&&(n.result=o,o===!1&&(n.preventDefault(),n.stopPropagation()))}}return b.postDispatch&&b.postDispatch.call(this,n),n.result},props:"attrChange attrName relatedNode srcElement altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(e,t){return e.which==null&&(e.which=t.charCode!=null?t.charCode:t.keyCode),e}},mouseHooks:{props:"button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(e,n){var r,s,o,u=n.button,a=n.fromElement;return e.pageX==null&&n.clientX!=null&&(r=e.target.ownerDocument||i,s=r.documentElement,o=r.body,e.pageX=n.clientX+(s&&s.scrollLeft||o&&o.scrollLeft||0)-(s&&s.clientLeft||o&&o.clientLeft||0),e.pageY=n.clientY+(s&&s.scrollTop||o&&o.scrollTop||0)-(s&&s.clientTop||o&&o.clientTop||0)),!e.relatedTarget&&a&&(e.relatedTarget=a===e.target?n.toElement:a),!e.which&&u!==t&&(e.which=u&1?1:u&2?3:u&4?2:0),e}},fix:function(e){if(e[v.expando])return e;var t,n,r=e,s=v.event.fixHooks[e.type]||{},o=s.props?this.props.concat(s.props):this.props;e=v.Event(r);for(t=o.length;t;)n=o[--t],e[n]=r[n];return e.target||(e.target=r.srcElement||i),e.target.nodeType===3&&(e.target=e.target.parentNode),e.metaKey=!!e.metaKey,s.filter?s.filter(e,r):e},special:{load:{noBubble:!0},focus:{delegateType:"focusin"},blur:{delegateType:"focusout"},beforeunload:{setup:function(e,t,n){v.isWindow(this)&&(this.onbeforeunload=n)},teardown:function(e,t){this.onbeforeunload===t&&(this.onbeforeunload=null)}}},simulate:function(e,t,n,r){var i=v.extend(new v.Event,n,{type:e,isSimulated:!0,originalEvent:{}});r?v.event.trigger(i,null,t):v.event.dispatch.call(t,i),i.isDefaultPrevented()&&n.preventDefault()}},v.event.handle=v.event.dispatch,v.removeEvent=i.removeEventListener?function(e,t,n){e.removeEventListener&&e.removeEventListener(t,n,!1)}:function(e,t,n){var r="on"+t;e.detachEvent&&(typeof e[r]=="undefined"&&(e[r]=null),e.detachEvent(r,n))},v.Event=function(e,t){if(!(this instanceof v.Event))return new v.Event(e,t);e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||e.returnValue===!1||e.getPreventDefault&&e.getPreventDefault()?tt:et):this.type=e,t&&v.extend(this,t),this.timeStamp=e&&e.timeStamp||v.now(),this[v.expando]=!0},v.Event.prototype={preventDefault:function(){this.isDefaultPrevented=tt;var e=this.originalEvent;if(!e)return;e.preventDefault?e.preventDefault():e.returnValue=!1},stopPropagation:function(){this.isPropagationStopped=tt;var e=this.originalEvent;if(!e)return;e.stopPropagation&&e.stopPropagation(),e.cancelBubble=!0},stopImmediatePropagation:function(){this.isImmediatePropagationStopped=tt,this.stopPropagation()},isDefaultPrevented:et,isPropagationStopped:et,isImmediatePropagationStopped:et},v.each({mouseenter:"mouseover",mouseleave:"mouseout"},function(e,t){v.event.special[e]={delegateType:t,bindType:t,handle:function(e){var n,r=this,i=e.relatedTarget,s=e.handleObj,o=s.selector;if(!i||i!==r&&!v.contains(r,i))e.type=s.origType,n=s.handler.apply(this,arguments),e.type=t;return n}}}),v.support.submitBubbles||(v.event.special.submit={setup:function(){if(v.nodeName(this,"form"))return!1;v.event.add(this,"click._submit keypress._submit",function(e){var n=e.target,r=v.nodeName(n,"input")||v.nodeName(n,"button")?n.form:t;r&&!v._data(r,"_submit_attached")&&(v.event.add(r,"submit._submit",function(e){e._submit_bubble=!0}),v._data(r,"_submit_attached",!0))})},postDispatch:function(e){e._submit_bubble&&(delete e._submit_bubble,this.parentNode&&!e.isTrigger&&v.event.simulate("submit",this.parentNode,e,!0))},teardown:function(){if(v.nodeName(this,"form"))return!1;v.event.remove(this,"._submit")}}),v.support.changeBubbles||(v.event.special.change={setup:function(){if($.test(this.nodeName)){if(this.type==="checkbox"||this.type==="radio")v.event.add(this,"propertychange._change",function(e){e.originalEvent.propertyName==="checked"&&(this._just_changed=!0)}),v.event.add(this,"click._change",function(e){this._just_changed&&!e.isTrigger&&(this._just_changed=!1),v.event.simulate("change",this,e,!0)});return!1}v.event.add(this,"beforeactivate._change",function(e){var t=e.target;$.test(t.nodeName)&&!v._data(t,"_change_attached")&&(v.event.add(t,"change._change",function(e){this.parentNode&&!e.isSimulated&&!e.isTrigger&&v.event.simulate("change",this.parentNode,e,!0)}),v._data(t,"_change_attached",!0))})},handle:function(e){var t=e.target;if(this!==t||e.isSimulated||e.isTrigger||t.type!=="radio"&&t.type!=="checkbox")return e.handleObj.handler.apply(this,arguments)},teardown:function(){return v.event.remove(this,"._change"),!$.test(this.nodeName)}}),v.support.focusinBubbles||v.each({focus:"focusin",blur:"focusout"},function(e,t){var n=0,r=function(e){v.event.simulate(t,e.target,v.event.fix(e),!0)};v.event.special[t]={setup:function(){n++===0&&i.addEventListener(e,r,!0)},teardown:function(){--n===0&&i.removeEventListener(e,r,!0)}}}),v.fn.extend({on:function(e,n,r,i,s){var o,u;if(typeof e=="object"){typeof n!="string"&&(r=r||n,n=t);for(u in e)this.on(u,n,r,e[u],s);return this}r==null&&i==null?(i=n,r=n=t):i==null&&(typeof n=="string"?(i=r,r=t):(i=r,r=n,n=t));if(i===!1)i=et;else if(!i)return this;return s===1&&(o=i,i=function(e){return v().off(e),o.apply(this,arguments)},i.guid=o.guid||(o.guid=v.guid++)),this.each(function(){v.event.add(this,e,i,r,n)})},one:function(e,t,n,r){return this.on(e,t,n,r,1)},off:function(e,n,r){var i,s;if(e&&e.preventDefault&&e.handleObj)return i=e.handleObj,v(e.delegateTarget).off(i.namespace?i.origType+"."+i.namespace:i.origType,i.selector,i.handler),this;if(typeof e=="object"){for(s in e)this.off(s,n,e[s]);return this}if(n===!1||typeof n=="function")r=n,n=t;return r===!1&&(r=et),this.each(function(){v.event.remove(this,e,r,n)})},bind:function(e,t,n){return this.on(e,null,t,n)},unbind:function(e,t){return this.off(e,null,t)},live:function(e,t,n){return v(this.context).on(e,this.selector,t,n),this},die:function(e,t){return v(this.context).off(e,this.selector||"**",t),this},delegate:function(e,t,n,r){return this.on(t,e,n,r)},undelegate:function(e,t,n){return arguments.length===1?this.off(e,"**"):this.off(t,e||"**",n)},trigger:function(e,t){return this.each(function(){v.event.trigger(e,t,this)})},triggerHandler:function(e,t){if(this[0])return v.event.trigger(e,t,this[0],!0)},toggle:function(e){var t=arguments,n=e.guid||v.guid++,r=0,i=function(n){var i=(v._data(this,"lastToggle"+e.guid)||0)%r;return v._data(this,"lastToggle"+e.guid,i+1),n.preventDefault(),t[i].apply(this,arguments)||!1};i.guid=n;while(r<t.length)t[r++].guid=n;return this.click(i)},hover:function(e,t){return this.mouseenter(e).mouseleave(t||e)}}),v.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),function(e,t){v.fn[t]=function(e,n){return n==null&&(n=e,e=null),arguments.length>0?this.on(t,null,e,n):this.trigger(t)},Q.test(t)&&(v.event.fixHooks[t]=v.event.keyHooks),G.test(t)&&(v.event.fixHooks[t]=v.event.mouseHooks)}),function(e,t){function nt(e,t,n,r){n=n||[],t=t||g;var i,s,a,f,l=t.nodeType;if(!e||typeof e!="string")return n;if(l!==1&&l!==9)return[];a=o(t);if(!a&&!r)if(i=R.exec(e))if(f=i[1]){if(l===9){s=t.getElementById(f);if(!s||!s.parentNode)return n;if(s.id===f)return n.push(s),n}else if(t.ownerDocument&&(s=t.ownerDocument.getElementById(f))&&u(t,s)&&s.id===f)return n.push(s),n}else{if(i[2])return S.apply(n,x.call(t.getElementsByTagName(e),0)),n;if((f=i[3])&&Z&&t.getElementsByClassName)return S.apply(n,x.call(t.getElementsByClassName(f),0)),n}return vt(e.replace(j,"$1"),t,n,r,a)}function rt(e){return function(t){var n=t.nodeName.toLowerCase();return n==="input"&&t.type===e}}function it(e){return function(t){var n=t.nodeName.toLowerCase();return(n==="input"||n==="button")&&t.type===e}}function st(e){return N(function(t){return t=+t,N(function(n,r){var i,s=e([],n.length,t),o=s.length;while(o--)n[i=s[o]]&&(n[i]=!(r[i]=n[i]))})})}function ot(e,t,n){if(e===t)return n;var r=e.nextSibling;while(r){if(r===t)return-1;r=r.nextSibling}return 1}function ut(e,t){var n,r,s,o,u,a,f,l=L[d][e+" "];if(l)return t?0:l.slice(0);u=e,a=[],f=i.preFilter;while(u){if(!n||(r=F.exec(u)))r&&(u=u.slice(r[0].length)||u),a.push(s=[]);n=!1;if(r=I.exec(u))s.push(n=new m(r.shift())),u=u.slice(n.length),n.type=r[0].replace(j," ");for(o in i.filter)(r=J[o].exec(u))&&(!f[o]||(r=f[o](r)))&&(s.push(n=new m(r.shift())),u=u.slice(n.length),n.type=o,n.matches=r);if(!n)break}return t?u.length:u?nt.error(e):L(e,a).slice(0)}function at(e,t,r){var i=t.dir,s=r&&t.dir==="parentNode",o=w++;return t.first?function(t,n,r){while(t=t[i])if(s||t.nodeType===1)return e(t,n,r)}:function(t,r,u){if(!u){var a,f=b+" "+o+" ",l=f+n;while(t=t[i])if(s||t.nodeType===1){if((a=t[d])===l)return t.sizset;if(typeof a=="string"&&a.indexOf(f)===0){if(t.sizset)return t}else{t[d]=l;if(e(t,r,u))return t.sizset=!0,t;t.sizset=!1}}}else while(t=t[i])if(s||t.nodeType===1)if(e(t,r,u))return t}}function ft(e){return e.length>1?function(t,n,r){var i=e.length;while(i--)if(!e[i](t,n,r))return!1;return!0}:e[0]}function lt(e,t,n,r,i){var s,o=[],u=0,a=e.length,f=t!=null;for(;u<a;u++)if(s=e[u])if(!n||n(s,r,i))o.push(s),f&&t.push(u);return o}function ct(e,t,n,r,i,s){return r&&!r[d]&&(r=ct(r)),i&&!i[d]&&(i=ct(i,s)),N(function(s,o,u,a){var f,l,c,h=[],p=[],d=o.length,v=s||dt(t||"*",u.nodeType?[u]:u,[]),m=e&&(s||!t)?lt(v,h,e,u,a):v,g=n?i||(s?e:d||r)?[]:o:m;n&&n(m,g,u,a);if(r){f=lt(g,p),r(f,[],u,a),l=f.length;while(l--)if(c=f[l])g[p[l]]=!(m[p[l]]=c)}if(s){if(i||e){if(i){f=[],l=g.length;while(l--)(c=g[l])&&f.push(m[l]=c);i(null,g=[],f,a)}l=g.length;while(l--)(c=g[l])&&(f=i?T.call(s,c):h[l])>-1&&(s[f]=!(o[f]=c))}}else g=lt(g===o?g.splice(d,g.length):g),i?i(null,o,g,a):S.apply(o,g)})}function ht(e){var t,n,r,s=e.length,o=i.relative[e[0].type],u=o||i.relative[" "],a=o?1:0,f=at(function(e){return e===t},u,!0),l=at(function(e){return T.call(t,e)>-1},u,!0),h=[function(e,n,r){return!o&&(r||n!==c)||((t=n).nodeType?f(e,n,r):l(e,n,r))}];for(;a<s;a++)if(n=i.relative[e[a].type])h=[at(ft(h),n)];else{n=i.filter[e[a].type].apply(null,e[a].matches);if(n[d]){r=++a;for(;r<s;r++)if(i.relative[e[r].type])break;return ct(a>1&&ft(h),a>1&&e.slice(0,a-1).join("").replace(j,"$1"),n,a<r&&ht(e.slice(a,r)),r<s&&ht(e=e.slice(r)),r<s&&e.join(""))}h.push(n)}return ft(h)}function pt(e,t){var r=t.length>0,s=e.length>0,o=function(u,a,f,l,h){var p,d,v,m=[],y=0,w="0",x=u&&[],T=h!=null,N=c,C=u||s&&i.find.TAG("*",h&&a.parentNode||a),k=b+=N==null?1:Math.E;T&&(c=a!==g&&a,n=o.el);for(;(p=C[w])!=null;w++){if(s&&p){for(d=0;v=e[d];d++)if(v(p,a,f)){l.push(p);break}T&&(b=k,n=++o.el)}r&&((p=!v&&p)&&y--,u&&x.push(p))}y+=w;if(r&&w!==y){for(d=0;v=t[d];d++)v(x,m,a,f);if(u){if(y>0)while(w--)!x[w]&&!m[w]&&(m[w]=E.call(l));m=lt(m)}S.apply(l,m),T&&!u&&m.length>0&&y+t.length>1&&nt.uniqueSort(l)}return T&&(b=k,c=N),x};return o.el=0,r?N(o):o}function dt(e,t,n){var r=0,i=t.length;for(;r<i;r++)nt(e,t[r],n);return n}function vt(e,t,n,r,s){var o,u,f,l,c,h=ut(e),p=h.length;if(!r&&h.length===1){u=h[0]=h[0].slice(0);if(u.length>2&&(f=u[0]).type==="ID"&&t.nodeType===9&&!s&&i.relative[u[1].type]){t=i.find.ID(f.matches[0].replace($,""),t,s)[0];if(!t)return n;e=e.slice(u.shift().length)}for(o=J.POS.test(e)?-1:u.length-1;o>=0;o--){f=u[o];if(i.relative[l=f.type])break;if(c=i.find[l])if(r=c(f.matches[0].replace($,""),z.test(u[0].type)&&t.parentNode||t,s)){u.splice(o,1),e=r.length&&u.join("");if(!e)return S.apply(n,x.call(r,0)),n;break}}}return a(e,h)(r,t,s,n,z.test(e)),n}function mt(){}var n,r,i,s,o,u,a,f,l,c,h=!0,p="undefined",d=("sizcache"+Math.random()).replace(".",""),m=String,g=e.document,y=g.documentElement,b=0,w=0,E=[].pop,S=[].push,x=[].slice,T=[].indexOf||function(e){var t=0,n=this.length;for(;t<n;t++)if(this[t]===e)return t;return-1},N=function(e,t){return e[d]=t==null||t,e},C=function(){var e={},t=[];return N(function(n,r){return t.push(n)>i.cacheLength&&delete e[t.shift()],e[n+" "]=r},e)},k=C(),L=C(),A=C(),O="[\\x20\\t\\r\\n\\f]",M="(?:\\\\.|[-\\w]|[^\\x00-\\xa0])+",_=M.replace("w","w#"),D="([*^$|!~]?=)",P="\\["+O+"*("+M+")"+O+"*(?:"+D+O+"*(?:(['\"])((?:\\\\.|[^\\\\])*?)\\3|("+_+")|)|)"+O+"*\\]",H=":("+M+")(?:\\((?:(['\"])((?:\\\\.|[^\\\\])*?)\\2|([^()[\\]]*|(?:(?:"+P+")|[^:]|\\\\.)*|.*))\\)|)",B=":(even|odd|eq|gt|lt|nth|first|last)(?:\\("+O+"*((?:-\\d)?\\d*)"+O+"*\\)|)(?=[^-]|$)",j=new RegExp("^"+O+"+|((?:^|[^\\\\])(?:\\\\.)*)"+O+"+$","g"),F=new RegExp("^"+O+"*,"+O+"*"),I=new RegExp("^"+O+"*([\\x20\\t\\r\\n\\f>+~])"+O+"*"),q=new RegExp(H),R=/^(?:#([\w\-]+)|(\w+)|\.([\w\-]+))$/,U=/^:not/,z=/[\x20\t\r\n\f]*[+~]/,W=/:not\($/,X=/h\d/i,V=/input|select|textarea|button/i,$=/\\(?!\\)/g,J={ID:new RegExp("^#("+M+")"),CLASS:new RegExp("^\\.("+M+")"),NAME:new RegExp("^\\[name=['\"]?("+M+")['\"]?\\]"),TAG:new RegExp("^("+M.replace("w","w*")+")"),ATTR:new RegExp("^"+P),PSEUDO:new RegExp("^"+H),POS:new RegExp(B,"i"),CHILD:new RegExp("^:(only|nth|first|last)-child(?:\\("+O+"*(even|odd|(([+-]|)(\\d*)n|)"+O+"*(?:([+-]|)"+O+"*(\\d+)|))"+O+"*\\)|)","i"),needsContext:new RegExp("^"+O+"*[>+~]|"+B,"i")},K=function(e){var t=g.createElement("div");try{return e(t)}catch(n){return!1}finally{t=null}},Q=K(function(e){return e.appendChild(g.createComment("")),!e.getElementsByTagName("*").length}),G=K(function(e){return e.innerHTML="<a href='#'></a>",e.firstChild&&typeof e.firstChild.getAttribute!==p&&e.firstChild.getAttribute("href")==="#"}),Y=K(function(e){e.innerHTML="<select></select>";var t=typeof e.lastChild.getAttribute("multiple");return t!=="boolean"&&t!=="string"}),Z=K(function(e){return e.innerHTML="<div class='hidden e'></div><div class='hidden'></div>",!e.getElementsByClassName||!e.getElementsByClassName("e").length?!1:(e.lastChild.className="e",e.getElementsByClassName("e").length===2)}),et=K(function(e){e.id=d+0,e.innerHTML="<a name='"+d+"'></a><div name='"+d+"'></div>",y.insertBefore(e,y.firstChild);var t=g.getElementsByName&&g.getElementsByName(d).length===2+g.getElementsByName(d+0).length;return r=!g.getElementById(d),y.removeChild(e),t});try{x.call(y.childNodes,0)[0].nodeType}catch(tt){x=function(e){var t,n=[];for(;t=this[e];e++)n.push(t);return n}}nt.matches=function(e,t){return nt(e,null,null,t)},nt.matchesSelector=function(e,t){return nt(t,null,null,[e]).length>0},s=nt.getText=function(e){var t,n="",r=0,i=e.nodeType;if(i){if(i===1||i===9||i===11){if(typeof e.textContent=="string")return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)n+=s(e)}else if(i===3||i===4)return e.nodeValue}else for(;t=e[r];r++)n+=s(t);return n},o=nt.isXML=function(e){var t=e&&(e.ownerDocument||e).documentElement;return t?t.nodeName!=="HTML":!1},u=nt.contains=y.contains?function(e,t){var n=e.nodeType===9?e.documentElement:e,r=t&&t.parentNode;return e===r||!!(r&&r.nodeType===1&&n.contains&&n.contains(r))}:y.compareDocumentPosition?function(e,t){return t&&!!(e.compareDocumentPosition(t)&16)}:function(e,t){while(t=t.parentNode)if(t===e)return!0;return!1},nt.attr=function(e,t){var n,r=o(e);return r||(t=t.toLowerCase()),(n=i.attrHandle[t])?n(e):r||Y?e.getAttribute(t):(n=e.getAttributeNode(t),n?typeof e[t]=="boolean"?e[t]?t:null:n.specified?n.value:null:null)},i=nt.selectors={cacheLength:50,createPseudo:N,match:J,attrHandle:G?{}:{href:function(e){return e.getAttribute("href",2)},type:function(e){return e.getAttribute("type")}},find:{ID:r?function(e,t,n){if(typeof t.getElementById!==p&&!n){var r=t.getElementById(e);return r&&r.parentNode?[r]:[]}}:function(e,n,r){if(typeof n.getElementById!==p&&!r){var i=n.getElementById(e);return i?i.id===e||typeof i.getAttributeNode!==p&&i.getAttributeNode("id").value===e?[i]:t:[]}},TAG:Q?function(e,t){if(typeof t.getElementsByTagName!==p)return t.getElementsByTagName(e)}:function(e,t){var n=t.getElementsByTagName(e);if(e==="*"){var r,i=[],s=0;for(;r=n[s];s++)r.nodeType===1&&i.push(r);return i}return n},NAME:et&&function(e,t){if(typeof t.getElementsByName!==p)return t.getElementsByName(name)},CLASS:Z&&function(e,t,n){if(typeof t.getElementsByClassName!==p&&!n)return t.getElementsByClassName(e)}},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace($,""),e[3]=(e[4]||e[5]||"").replace($,""),e[2]==="~="&&(e[3]=" "+e[3]+" "),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),e[1]==="nth"?(e[2]||nt.error(e[0]),e[3]=+(e[3]?e[4]+(e[5]||1):2*(e[2]==="even"||e[2]==="odd")),e[4]=+(e[6]+e[7]||e[2]==="odd")):e[2]&&nt.error(e[0]),e},PSEUDO:function(e){var t,n;if(J.CHILD.test(e[0]))return null;if(e[3])e[2]=e[3];else if(t=e[4])q.test(t)&&(n=ut(t,!0))&&(n=t.indexOf(")",t.length-n)-t.length)&&(t=t.slice(0,n),e[0]=e[0].slice(0,n)),e[2]=t;return e.slice(0,3)}},filter:{ID:r?function(e){return e=e.replace($,""),function(t){return t.getAttribute("id")===e}}:function(e){return e=e.replace($,""),function(t){var n=typeof t.getAttributeNode!==p&&t.getAttributeNode("id");return n&&n.value===e}},TAG:function(e){return e==="*"?function(){return!0}:(e=e.replace($,"").toLowerCase(),function(t){return t.nodeName&&t.nodeName.toLowerCase()===e})},CLASS:function(e){var t=k[d][e+" "];return t||(t=new RegExp("(^|"+O+")"+e+"("+O+"|$)"))&&k(e,function(e){return t.test(e.className||typeof e.getAttribute!==p&&e.getAttribute("class")||"")})},ATTR:function(e,t,n){return function(r,i){var s=nt.attr(r,e);return s==null?t==="!=":t?(s+="",t==="="?s===n:t==="!="?s!==n:t==="^="?n&&s.indexOf(n)===0:t==="*="?n&&s.indexOf(n)>-1:t==="$="?n&&s.substr(s.length-n.length)===n:t==="~="?(" "+s+" ").indexOf(n)>-1:t==="|="?s===n||s.substr(0,n.length+1)===n+"-":!1):!0}},CHILD:function(e,t,n,r){return e==="nth"?function(e){var t,i,s=e.parentNode;if(n===1&&r===0)return!0;if(s){i=0;for(t=s.firstChild;t;t=t.nextSibling)if(t.nodeType===1){i++;if(e===t)break}}return i-=r,i===n||i%n===0&&i/n>=0}:function(t){var n=t;switch(e){case"only":case"first":while(n=n.previousSibling)if(n.nodeType===1)return!1;if(e==="first")return!0;n=t;case"last":while(n=n.nextSibling)if(n.nodeType===1)return!1;return!0}}},PSEUDO:function(e,t){var n,r=i.pseudos[e]||i.setFilters[e.toLowerCase()]||nt.error("unsupported pseudo: "+e);return r[d]?r(t):r.length>1?(n=[e,e,"",t],i.setFilters.hasOwnProperty(e.toLowerCase())?N(function(e,n){var i,s=r(e,t),o=s.length;while(o--)i=T.call(e,s[o]),e[i]=!(n[i]=s[o])}):function(e){return r(e,0,n)}):r}},pseudos:{not:N(function(e){var t=[],n=[],r=a(e.replace(j,"$1"));return r[d]?N(function(e,t,n,i){var s,o=r(e,null,i,[]),u=e.length;while(u--)if(s=o[u])e[u]=!(t[u]=s)}):function(e,i,s){return t[0]=e,r(t,null,s,n),!n.pop()}}),has:N(function(e){return function(t){return nt(e,t).length>0}}),contains:N(function(e){return function(t){return(t.textContent||t.innerText||s(t)).indexOf(e)>-1}}),enabled:function(e){return e.disabled===!1},disabled:function(e){return e.disabled===!0},checked:function(e){var t=e.nodeName.toLowerCase();return t==="input"&&!!e.checked||t==="option"&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,e.selected===!0},parent:function(e){return!i.pseudos.empty(e)},empty:function(e){var t;e=e.firstChild;while(e){if(e.nodeName>"@"||(t=e.nodeType)===3||t===4)return!1;e=e.nextSibling}return!0},header:function(e){return X.test(e.nodeName)},text:function(e){var t,n;return e.nodeName.toLowerCase()==="input"&&(t=e.type)==="text"&&((n=e.getAttribute("type"))==null||n.toLowerCase()===t)},radio:rt("radio"),checkbox:rt("checkbox"),file:rt("file"),password:rt("password"),image:rt("image"),submit:it("submit"),reset:it("reset"),button:function(e){var t=e.nodeName.toLowerCase();return t==="input"&&e.type==="button"||t==="button"},input:function(e){return V.test(e.nodeName)},focus:function(e){var t=e.ownerDocument;return e===t.activeElement&&(!t.hasFocus||t.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},active:function(e){return e===e.ownerDocument.activeElement},first:st(function(){return[0]}),last:st(function(e,t){return[t-1]}),eq:st(function(e,t,n){return[n<0?n+t:n]}),even:st(function(e,t){for(var n=0;n<t;n+=2)e.push(n);return e}),odd:st(function(e,t){for(var n=1;n<t;n+=2)e.push(n);return e}),lt:st(function(e,t,n){for(var r=n<0?n+t:n;--r>=0;)e.push(r);return e}),gt:st(function(e,t,n){for(var r=n<0?n+t:n;++r<t;)e.push(r);return e})}},f=y.compareDocumentPosition?function(e,t){return e===t?(l=!0,0):(!e.compareDocumentPosition||!t.compareDocumentPosition?e.compareDocumentPosition:e.compareDocumentPosition(t)&4)?-1:1}:function(e,t){if(e===t)return l=!0,0;if(e.sourceIndex&&t.sourceIndex)return e.sourceIndex-t.sourceIndex;var n,r,i=[],s=[],o=e.parentNode,u=t.parentNode,a=o;if(o===u)return ot(e,t);if(!o)return-1;if(!u)return 1;while(a)i.unshift(a),a=a.parentNode;a=u;while(a)s.unshift(a),a=a.parentNode;n=i.length,r=s.length;for(var f=0;f<n&&f<r;f++)if(i[f]!==s[f])return ot(i[f],s[f]);return f===n?ot(e,s[f],-1):ot(i[f],t,1)},[0,0].sort(f),h=!l,nt.uniqueSort=function(e){var t,n=[],r=1,i=0;l=h,e.sort(f);if(l){for(;t=e[r];r++)t===e[r-1]&&(i=n.push(r));while(i--)e.splice(n[i],1)}return e},nt.error=function(e){throw new Error("Syntax error, unrecognized expression: "+e)},a=nt.compile=function(e,t){var n,r=[],i=[],s=A[d][e+" "];if(!s){t||(t=ut(e)),n=t.length;while(n--)s=ht(t[n]),s[d]?r.push(s):i.push(s);s=A(e,pt(i,r))}return s},g.querySelectorAll&&function(){var e,t=vt,n=/'|\\/g,r=/\=[\x20\t\r\n\f]*([^'"\]]*)[\x20\t\r\n\f]*\]/g,i=[":focus"],s=[":active"],u=y.matchesSelector||y.mozMatchesSelector||y.webkitMatchesSelector||y.oMatchesSelector||y.msMatchesSelector;K(function(e){e.innerHTML="<select><option selected=''></option></select>",e.querySelectorAll("[selected]").length||i.push("\\["+O+"*(?:checked|disabled|ismap|multiple|readonly|selected|value)"),e.querySelectorAll(":checked").length||i.push(":checked")}),K(function(e){e.innerHTML="<p test=''></p>",e.querySelectorAll("[test^='']").length&&i.push("[*^$]="+O+"*(?:\"\"|'')"),e.innerHTML="<input type='hidden'/>",e.querySelectorAll(":enabled").length||i.push(":enabled",":disabled")}),i=new RegExp(i.join("|")),vt=function(e,r,s,o,u){if(!o&&!u&&!i.test(e)){var a,f,l=!0,c=d,h=r,p=r.nodeType===9&&e;if(r.nodeType===1&&r.nodeName.toLowerCase()!=="object"){a=ut(e),(l=r.getAttribute("id"))?c=l.replace(n,"\\$&"):r.setAttribute("id",c),c="[id='"+c+"'] ",f=a.length;while(f--)a[f]=c+a[f].join("");h=z.test(e)&&r.parentNode||r,p=a.join(",")}if(p)try{return S.apply(s,x.call(h.querySelectorAll(p),0)),s}catch(v){}finally{l||r.removeAttribute("id")}}return t(e,r,s,o,u)},u&&(K(function(t){e=u.call(t,"div");try{u.call(t,"[test!='']:sizzle"),s.push("!=",H)}catch(n){}}),s=new RegExp(s.join("|")),nt.matchesSelector=function(t,n){n=n.replace(r,"='$1']");if(!o(t)&&!s.test(n)&&!i.test(n))try{var a=u.call(t,n);if(a||e||t.document&&t.document.nodeType!==11)return a}catch(f){}return nt(n,null,null,[t]).length>0})}(),i.pseudos.nth=i.pseudos.eq,i.filters=mt.prototype=i.pseudos,i.setFilters=new mt,nt.attr=v.attr,v.find=nt,v.expr=nt.selectors,v.expr[":"]=v.expr.pseudos,v.unique=nt.uniqueSort,v.text=nt.getText,v.isXMLDoc=nt.isXML,v.contains=nt.contains}(e);var nt=/Until$/,rt=/^(?:parents|prev(?:Until|All))/,it=/^.[^:#\[\.,]*$/,st=v.expr.match.needsContext,ot={children:!0,contents:!0,next:!0,prev:!0};v.fn.extend({find:function(e){var t,n,r,i,s,o,u=this;if(typeof e!="string")return v(e).filter(function(){for(t=0,n=u.length;t<n;t++)if(v.contains(u[t],this))return!0});o=this.pushStack("","find",e);for(t=0,n=this.length;t<n;t++){r=o.length,v.find(e,this[t],o);if(t>0)for(i=r;i<o.length;i++)for(s=0;s<r;s++)if(o[s]===o[i]){o.splice(i--,1);break}}return o},has:function(e){var t,n=v(e,this),r=n.length;return this.filter(function(){for(t=0;t<r;t++)if(v.contains(this,n[t]))return!0})},not:function(e){return this.pushStack(ft(this,e,!1),"not",e)},filter:function(e){return this.pushStack(ft(this,e,!0),"filter",e)},is:function(e){return!!e&&(typeof e=="string"?st.test(e)?v(e,this.context).index(this[0])>=0:v.filter(e,this).length>0:this.filter(e).length>0)},closest:function(e,t){var n,r=0,i=this.length,s=[],o=st.test(e)||typeof e!="string"?v(e,t||this.context):0;for(;r<i;r++){n=this[r];while(n&&n.ownerDocument&&n!==t&&n.nodeType!==11){if(o?o.index(n)>-1:v.find.matchesSelector(n,e)){s.push(n);break}n=n.parentNode}}return s=s.length>1?v.unique(s):s,this.pushStack(s,"closest",e)},index:function(e){return e?typeof e=="string"?v.inArray(this[0],v(e)):v.inArray(e.jquery?e[0]:e,this):this[0]&&this[0].parentNode?this.prevAll().length:-1},add:function(e,t){var n=typeof e=="string"?v(e,t):v.makeArray(e&&e.nodeType?[e]:e),r=v.merge(this.get(),n);return this.pushStack(ut(n[0])||ut(r[0])?r:v.unique(r))},addBack:function(e){return this.add(e==null?this.prevObject:this.prevObject.filter(e))}}),v.fn.andSelf=v.fn.addBack,v.each({parent:function(e){var t=e.parentNode;return t&&t.nodeType!==11?t:null},parents:function(e){return v.dir(e,"parentNode")},parentsUntil:function(e,t,n){return v.dir(e,"parentNode",n)},next:function(e){return at(e,"nextSibling")},prev:function(e){return at(e,"previousSibling")},nextAll:function(e){return v.dir(e,"nextSibling")},prevAll:function(e){return v.dir(e,"previousSibling")},nextUntil:function(e,t,n){return v.dir(e,"nextSibling",n)},prevUntil:function(e,t,n){return v.dir(e,"previousSibling",n)},siblings:function(e){return v.sibling((e.parentNode||{}).firstChild,e)},children:function(e){return v.sibling(e.firstChild)},contents:function(e){return v.nodeName(e,"iframe")?e.contentDocument||e.contentWindow.document:v.merge([],e.childNodes)}},function(e,t){v.fn[e]=function(n,r){var i=v.map(this,t,n);return nt.test(e)||(r=n),r&&typeof r=="string"&&(i=v.filter(r,i)),i=this.length>1&&!ot[e]?v.unique(i):i,this.length>1&&rt.test(e)&&(i=i.reverse()),this.pushStack(i,e,l.call(arguments).join(","))}}),v.extend({filter:function(e,t,n){return n&&(e=":not("+e+")"),t.length===1?v.find.matchesSelector(t[0],e)?[t[0]]:[]:v.find.matches(e,t)},dir:function(e,n,r){var i=[],s=e[n];while(s&&s.nodeType!==9&&(r===t||s.nodeType!==1||!v(s).is(r)))s.nodeType===1&&i.push(s),s=s[n];return i},sibling:function(e,t){var n=[];for(;e;e=e.nextSibling)e.nodeType===1&&e!==t&&n.push(e);return n}});var ct="abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",ht=/ jQuery\d+="(?:null|\d+)"/g,pt=/^\s+/,dt=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,vt=/<([\w:]+)/,mt=/<tbody/i,gt=/<|&#?\w+;/,yt=/<(?:script|style|link)/i,bt=/<(?:script|object|embed|option|style)/i,wt=new RegExp("<(?:"+ct+")[\\s/>]","i"),Et=/^(?:checkbox|radio)$/,St=/checked\s*(?:[^=]|=\s*.checked.)/i,xt=/\/(java|ecma)script/i,Tt=/^\s*<!(?:\[CDATA\[|\-\-)|[\]\-]{2}>\s*$/g,Nt={option:[1,"<select multiple='multiple'>","</select>"],legend:[1,"<fieldset>","</fieldset>"],thead:[1,"<table>","</table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],col:[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"],area:[1,"<map>","</map>"],_default:[0,"",""]},Ct=lt(i),kt=Ct.appendChild(i.createElement("div"));Nt.optgroup=Nt.option,Nt.tbody=Nt.tfoot=Nt.colgroup=Nt.caption=Nt.thead,Nt.th=Nt.td,v.support.htmlSerialize||(Nt._default=[1,"X<div>","</div>"]),v.fn.extend({text:function(e){return v.access(this,function(e){return e===t?v.text(this):this.empty().append((this[0]&&this[0].ownerDocument||i).createTextNode(e))},null,e,arguments.length)},wrapAll:function(e){if(v.isFunction(e))return this.each(function(t){v(this).wrapAll(e.call(this,t))});if(this[0]){var t=v(e,this[0].ownerDocument).eq(0).clone(!0);this[0].parentNode&&t.insertBefore(this[0]),t.map(function(){var e=this;while(e.firstChild&&e.firstChild.nodeType===1)e=e.firstChild;return e}).append(this)}return this},wrapInner:function(e){return v.isFunction(e)?this.each(function(t){v(this).wrapInner(e.call(this,t))}):this.each(function(){var t=v(this),n=t.contents();n.length?n.wrapAll(e):t.append(e)})},wrap:function(e){var t=v.isFunction(e);return this.each(function(n){v(this).wrapAll(t?e.call(this,n):e)})},unwrap:function(){return this.parent().each(function(){v.nodeName(this,"body")||v(this).replaceWith(this.childNodes)}).end()},append:function(){return this.domManip(arguments,!0,function(e){(this.nodeType===1||this.nodeType===11)&&this.appendChild(e)})},prepend:function(){return this.domManip(arguments,!0,function(e){(this.nodeType===1||this.nodeType===11)&&this.insertBefore(e,this.firstChild)})},before:function(){if(!ut(this[0]))return this.domManip(arguments,!1,function(e){this.parentNode.insertBefore(e,this)});if(arguments.length){var e=v.clean(arguments);return this.pushStack(v.merge(e,this),"before",this.selector)}},after:function(){if(!ut(this[0]))return this.domManip(arguments,!1,function(e){this.parentNode.insertBefore(e,this.nextSibling)});if(arguments.length){var e=v.clean(arguments);return this.pushStack(v.merge(this,e),"after",this.selector)}},remove:function(e,t){var n,r=0;for(;(n=this[r])!=null;r++)if(!e||v.filter(e,[n]).length)!t&&n.nodeType===1&&(v.cleanData(n.getElementsByTagName("*")),v.cleanData([n])),n.parentNode&&n.parentNode.removeChild(n);return this},empty:function(){var e,t=0;for(;(e=this[t])!=null;t++){e.nodeType===1&&v.cleanData(e.getElementsByTagName("*"));while(e.firstChild)e.removeChild(e.firstChild)}return this},clone:function(e,t){return e=e==null?!1:e,t=t==null?e:t,this.map(function(){return v.clone(this,e,t)})},html:function(e){return v.access(this,function(e){var n=this[0]||{},r=0,i=this.length;if(e===t)return n.nodeType===1?n.innerHTML.replace(ht,""):t;if(typeof e=="string"&&!yt.test(e)&&(v.support.htmlSerialize||!wt.test(e))&&(v.support.leadingWhitespace||!pt.test(e))&&!Nt[(vt.exec(e)||["",""])[1].toLowerCase()]){e=e.replace(dt,"<$1></$2>");try{for(;r<i;r++)n=this[r]||{},n.nodeType===1&&(v.cleanData(n.getElementsByTagName("*")),n.innerHTML=e);n=0}catch(s){}}n&&this.empty().append(e)},null,e,arguments.length)},replaceWith:function(e){return ut(this[0])?this.length?this.pushStack(v(v.isFunction(e)?e():e),"replaceWith",e):this:v.isFunction(e)?this.each(function(t){var n=v(this),r=n.html();n.replaceWith(e.call(this,t,r))}):(typeof e!="string"&&(e=v(e).detach()),this.each(function(){var t=this.nextSibling,n=this.parentNode;v(this).remove(),t?v(t).before(e):v(n).append(e)}))},detach:function(e){return this.remove(e,!0)},domManip:function(e,n,r){e=[].concat.apply([],e);var i,s,o,u,a=0,f=e[0],l=[],c=this.length;if(!v.support.checkClone&&c>1&&typeof f=="string"&&St.test(f))return this.each(function(){v(this).domManip(e,n,r)});if(v.isFunction(f))return this.each(function(i){var s=v(this);e[0]=f.call(this,i,n?s.html():t),s.domManip(e,n,r)});if(this[0]){i=v.buildFragment(e,this,l),o=i.fragment,s=o.firstChild,o.childNodes.length===1&&(o=s);if(s){n=n&&v.nodeName(s,"tr");for(u=i.cacheable||c-1;a<c;a++)r.call(n&&v.nodeName(this[a],"table")?Lt(this[a],"tbody"):this[a],a===u?o:v.clone(o,!0,!0))}o=s=null,l.length&&v.each(l,function(e,t){t.src?v.ajax?v.ajax({url:t.src,type:"GET",dataType:"script",async:!1,global:!1,"throws":!0}):v.error("no ajax"):v.globalEval((t.text||t.textContent||t.innerHTML||"").replace(Tt,"")),t.parentNode&&t.parentNode.removeChild(t)})}return this}}),v.buildFragment=function(e,n,r){var s,o,u,a=e[0];return n=n||i,n=!n.nodeType&&n[0]||n,n=n.ownerDocument||n,e.length===1&&typeof a=="string"&&a.length<512&&n===i&&a.charAt(0)==="<"&&!bt.test(a)&&(v.support.checkClone||!St.test(a))&&(v.support.html5Clone||!wt.test(a))&&(o=!0,s=v.fragments[a],u=s!==t),s||(s=n.createDocumentFragment(),v.clean(e,n,s,r),o&&(v.fragments[a]=u&&s)),{fragment:s,cacheable:o}},v.fragments={},v.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(e,t){v.fn[e]=function(n){var r,i=0,s=[],o=v(n),u=o.length,a=this.length===1&&this[0].parentNode;if((a==null||a&&a.nodeType===11&&a.childNodes.length===1)&&u===1)return o[t](this[0]),this;for(;i<u;i++)r=(i>0?this.clone(!0):this).get(),v(o[i])[t](r),s=s.concat(r);return this.pushStack(s,e,o.selector)}}),v.extend({clone:function(e,t,n){var r,i,s,o;v.support.html5Clone||v.isXMLDoc(e)||!wt.test("<"+e.nodeName+">")?o=e.cloneNode(!0):(kt.innerHTML=e.outerHTML,kt.removeChild(o=kt.firstChild));if((!v.support.noCloneEvent||!v.support.noCloneChecked)&&(e.nodeType===1||e.nodeType===11)&&!v.isXMLDoc(e)){Ot(e,o),r=Mt(e),i=Mt(o);for(s=0;r[s];++s)i[s]&&Ot(r[s],i[s])}if(t){At(e,o);if(n){r=Mt(e),i=Mt(o);for(s=0;r[s];++s)At(r[s],i[s])}}return r=i=null,o},clean:function(e,t,n,r){var s,o,u,a,f,l,c,h,p,d,m,g,y=t===i&&Ct,b=[];if(!t||typeof t.createDocumentFragment=="undefined")t=i;for(s=0;(u=e[s])!=null;s++){typeof u=="number"&&(u+="");if(!u)continue;if(typeof u=="string")if(!gt.test(u))u=t.createTextNode(u);else{y=y||lt(t),c=t.createElement("div"),y.appendChild(c),u=u.replace(dt,"<$1></$2>"),a=(vt.exec(u)||["",""])[1].toLowerCase(),f=Nt[a]||Nt._default,l=f[0],c.innerHTML=f[1]+u+f[2];while(l--)c=c.lastChild;if(!v.support.tbody){h=mt.test(u),p=a==="table"&&!h?c.firstChild&&c.firstChild.childNodes:f[1]==="<table>"&&!h?c.childNodes:[];for(o=p.length-1;o>=0;--o)v.nodeName(p[o],"tbody")&&!p[o].childNodes.length&&p[o].parentNode.removeChild(p[o])}!v.support.leadingWhitespace&&pt.test(u)&&c.insertBefore(t.createTextNode(pt.exec(u)[0]),c.firstChild),u=c.childNodes,c.parentNode.removeChild(c)}u.nodeType?b.push(u):v.merge(b,u)}c&&(u=c=y=null);if(!v.support.appendChecked)for(s=0;(u=b[s])!=null;s++)v.nodeName(u,"input")?_t(u):typeof u.getElementsByTagName!="undefined"&&v.grep(u.getElementsByTagName("input"),_t);if(n){m=function(e){if(!e.type||xt.test(e.type))return r?r.push(e.parentNode?e.parentNode.removeChild(e):e):n.appendChild(e)};for(s=0;(u=b[s])!=null;s++)if(!v.nodeName(u,"script")||!m(u))n.appendChild(u),typeof u.getElementsByTagName!="undefined"&&(g=v.grep(v.merge([],u.getElementsByTagName("script")),m),b.splice.apply(b,[s+1,0].concat(g)),s+=g.length)}return b},cleanData:function(e,t){var n,r,i,s,o=0,u=v.expando,a=v.cache,f=v.support.deleteExpando,l=v.event.special;for(;(i=e[o])!=null;o++)if(t||v.acceptData(i)){r=i[u],n=r&&a[r];if(n){if(n.events)for(s in n.events)l[s]?v.event.remove(i,s):v.removeEvent(i,s,n.handle);a[r]&&(delete a[r],f?delete i[u]:i.removeAttribute?i.removeAttribute(u):i[u]=null,v.deletedIds.push(r))}}}}),function(){var e,t;v.uaMatch=function(e){e=e.toLowerCase();var t=/(chrome)[ \/]([\w.]+)/.exec(e)||/(webkit)[ \/]([\w.]+)/.exec(e)||/(opera)(?:.*version|)[ \/]([\w.]+)/.exec(e)||/(msie) ([\w.]+)/.exec(e)||e.indexOf("compatible")<0&&/(mozilla)(?:.*? rv:([\w.]+)|)/.exec(e)||[];return{browser:t[1]||"",version:t[2]||"0"}},e=v.uaMatch(o.userAgent),t={},e.browser&&(t[e.browser]=!0,t.version=e.version),t.chrome?t.webkit=!0:t.webkit&&(t.safari=!0),v.browser=t,v.sub=function(){function e(t,n){return new e.fn.init(t,n)}v.extend(!0,e,this),e.superclass=this,e.fn=e.prototype=this(),e.fn.constructor=e,e.sub=this.sub,e.fn.init=function(r,i){return i&&i instanceof v&&!(i instanceof e)&&(i=e(i)),v.fn.init.call(this,r,i,t)},e.fn.init.prototype=e.fn;var t=e(i);return e}}();var Dt,Pt,Ht,Bt=/alpha\([^)]*\)/i,jt=/opacity=([^)]*)/,Ft=/^(top|right|bottom|left)$/,It=/^(none|table(?!-c[ea]).+)/,qt=/^margin/,Rt=new RegExp("^("+m+")(.*)$","i"),Ut=new RegExp("^("+m+")(?!px)[a-z%]+$","i"),zt=new RegExp("^([-+])=("+m+")","i"),Wt={BODY:"block"},Xt={position:"absolute",visibility:"hidden",display:"block"},Vt={letterSpacing:0,fontWeight:400},$t=["Top","Right","Bottom","Left"],Jt=["Webkit","O","Moz","ms"],Kt=v.fn.toggle;v.fn.extend({css:function(e,n){return v.access(this,function(e,n,r){return r!==t?v.style(e,n,r):v.css(e,n)},e,n,arguments.length>1)},show:function(){return Yt(this,!0)},hide:function(){return Yt(this)},toggle:function(e,t){var n=typeof e=="boolean";return v.isFunction(e)&&v.isFunction(t)?Kt.apply(this,arguments):this.each(function(){(n?e:Gt(this))?v(this).show():v(this).hide()})}}),v.extend({cssHooks:{opacity:{get:function(e,t){if(t){var n=Dt(e,"opacity");return n===""?"1":n}}}},cssNumber:{fillOpacity:!0,fontWeight:!0,lineHeight:!0,opacity:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":v.support.cssFloat?"cssFloat":"styleFloat"},style:function(e,n,r,i){if(!e||e.nodeType===3||e.nodeType===8||!e.style)return;var s,o,u,a=v.camelCase(n),f=e.style;n=v.cssProps[a]||(v.cssProps[a]=Qt(f,a)),u=v.cssHooks[n]||v.cssHooks[a];if(r===t)return u&&"get"in u&&(s=u.get(e,!1,i))!==t?s:f[n];o=typeof r,o==="string"&&(s=zt.exec(r))&&(r=(s[1]+1)*s[2]+parseFloat(v.css(e,n)),o="number");if(r==null||o==="number"&&isNaN(r))return;o==="number"&&!v.cssNumber[a]&&(r+="px");if(!u||!("set"in u)||(r=u.set(e,r,i))!==t)try{f[n]=r}catch(l){}},css:function(e,n,r,i){var s,o,u,a=v.camelCase(n);return n=v.cssProps[a]||(v.cssProps[a]=Qt(e.style,a)),u=v.cssHooks[n]||v.cssHooks[a],u&&"get"in u&&(s=u.get(e,!0,i)),s===t&&(s=Dt(e,n)),s==="normal"&&n in Vt&&(s=Vt[n]),r||i!==t?(o=parseFloat(s),r||v.isNumeric(o)?o||0:s):s},swap:function(e,t,n){var r,i,s={};for(i in t)s[i]=e.style[i],e.style[i]=t[i];r=n.call(e);for(i in t)e.style[i]=s[i];return r}}),e.getComputedStyle?Dt=function(t,n){var r,i,s,o,u=e.getComputedStyle(t,null),a=t.style;return u&&(r=u.getPropertyValue(n)||u[n],r===""&&!v.contains(t.ownerDocument,t)&&(r=v.style(t,n)),Ut.test(r)&&qt.test(n)&&(i=a.width,s=a.minWidth,o=a.maxWidth,a.minWidth=a.maxWidth=a.width=r,r=u.width,a.width=i,a.minWidth=s,a.maxWidth=o)),r}:i.documentElement.currentStyle&&(Dt=function(e,t){var n,r,i=e.currentStyle&&e.currentStyle[t],s=e.style;return i==null&&s&&s[t]&&(i=s[t]),Ut.test(i)&&!Ft.test(t)&&(n=s.left,r=e.runtimeStyle&&e.runtimeStyle.left,r&&(e.runtimeStyle.left=e.currentStyle.left),s.left=t==="fontSize"?"1em":i,i=s.pixelLeft+"px",s.left=n,r&&(e.runtimeStyle.left=r)),i===""?"auto":i}),v.each(["height","width"],function(e,t){v.cssHooks[t]={get:function(e,n,r){if(n)return e.offsetWidth===0&&It.test(Dt(e,"display"))?v.swap(e,Xt,function(){return tn(e,t,r)}):tn(e,t,r)},set:function(e,n,r){return Zt(e,n,r?en(e,t,r,v.support.boxSizing&&v.css(e,"boxSizing")==="border-box"):0)}}}),v.support.opacity||(v.cssHooks.opacity={get:function(e,t){return jt.test((t&&e.currentStyle?e.currentStyle.filter:e.style.filter)||"")?.01*parseFloat(RegExp.$1)+"":t?"1":""},set:function(e,t){var n=e.style,r=e.currentStyle,i=v.isNumeric(t)?"alpha(opacity="+t*100+")":"",s=r&&r.filter||n.filter||"";n.zoom=1;if(t>=1&&v.trim(s.replace(Bt,""))===""&&n.removeAttribute){n.removeAttribute("filter");if(r&&!r.filter)return}n.filter=Bt.test(s)?s.replace(Bt,i):s+" "+i}}),v(function(){v.support.reliableMarginRight||(v.cssHooks.marginRight={get:function(e,t){return v.swap(e,{display:"inline-block"},function(){if(t)return Dt(e,"marginRight")})}}),!v.support.pixelPosition&&v.fn.position&&v.each(["top","left"],function(e,t){v.cssHooks[t]={get:function(e,n){if(n){var r=Dt(e,t);return Ut.test(r)?v(e).position()[t]+"px":r}}}})}),v.expr&&v.expr.filters&&(v.expr.filters.hidden=function(e){return e.offsetWidth===0&&e.offsetHeight===0||!v.support.reliableHiddenOffsets&&(e.style&&e.style.display||Dt(e,"display"))==="none"},v.expr.filters.visible=function(e){return!v.expr.filters.hidden(e)}),v.each({margin:"",padding:"",border:"Width"},function(e,t){v.cssHooks[e+t]={expand:function(n){var r,i=typeof n=="string"?n.split(" "):[n],s={};for(r=0;r<4;r++)s[e+$t[r]+t]=i[r]||i[r-2]||i[0];return s}},qt.test(e)||(v.cssHooks[e+t].set=Zt)});var rn=/%20/g,sn=/\[\]$/,on=/\r?\n/g,un=/^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i,an=/^(?:select|textarea)/i;v.fn.extend({serialize:function(){return v.param(this.serializeArray())},serializeArray:function(){return this.map(function(){return this.elements?v.makeArray(this.elements):this}).filter(function(){return this.name&&!this.disabled&&(this.checked||an.test(this.nodeName)||un.test(this.type))}).map(function(e,t){var n=v(this).val();return n==null?null:v.isArray(n)?v.map(n,function(e,n){return{name:t.name,value:e.replace(on,"\r\n")}}):{name:t.name,value:n.replace(on,"\r\n")}}).get()}}),v.param=function(e,n){var r,i=[],s=function(e,t){t=v.isFunction(t)?t():t==null?"":t,i[i.length]=encodeURIComponent(e)+"="+encodeURIComponent(t)};n===t&&(n=v.ajaxSettings&&v.ajaxSettings.traditional);if(v.isArray(e)||e.jquery&&!v.isPlainObject(e))v.each(e,function(){s(this.name,this.value)});else for(r in e)fn(r,e[r],n,s);return i.join("&").replace(rn,"+")};var ln,cn,hn=/#.*$/,pn=/^(.*?):[ \t]*([^\r\n]*)\r?$/mg,dn=/^(?:about|app|app\-storage|.+\-extension|file|res|widget):$/,vn=/^(?:GET|HEAD)$/,mn=/^\/\//,gn=/\?/,yn=/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,bn=/([?&])_=[^&]*/,wn=/^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+)|)|)/,En=v.fn.load,Sn={},xn={},Tn=["*/"]+["*"];try{cn=s.href}catch(Nn){cn=i.createElement("a"),cn.href="",cn=cn.href}ln=wn.exec(cn.toLowerCase())||[],v.fn.load=function(e,n,r){if(typeof e!="string"&&En)return En.apply(this,arguments);if(!this.length)return this;var i,s,o,u=this,a=e.indexOf(" ");return a>=0&&(i=e.slice(a,e.length),e=e.slice(0,a)),v.isFunction(n)?(r=n,n=t):n&&typeof n=="object"&&(s="POST"),v.ajax({url:e,type:s,dataType:"html",data:n,complete:function(e,t){r&&u.each(r,o||[e.responseText,t,e])}}).done(function(e){o=arguments,u.html(i?v("<div>").append(e.replace(yn,"")).find(i):e)}),this},v.each("ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split(" "),function(e,t){v.fn[t]=function(e){return this.on(t,e)}}),v.each(["get","post"],function(e,n){v[n]=function(e,r,i,s){return v.isFunction(r)&&(s=s||i,i=r,r=t),v.ajax({type:n,url:e,data:r,success:i,dataType:s})}}),v.extend({getScript:function(e,n){return v.get(e,t,n,"script")},getJSON:function(e,t,n){return v.get(e,t,n,"json")},ajaxSetup:function(e,t){return t?Ln(e,v.ajaxSettings):(t=e,e=v.ajaxSettings),Ln(e,t),e},ajaxSettings:{url:cn,isLocal:dn.test(ln[1]),global:!0,type:"GET",contentType:"application/x-www-form-urlencoded; charset=UTF-8",processData:!0,async:!0,accepts:{xml:"application/xml, text/xml",html:"text/html",text:"text/plain",json:"application/json, text/javascript","*":Tn},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:"responseXML",text:"responseText"},converters:{"* text":e.String,"text html":!0,"text json":v.parseJSON,"text xml":v.parseXML},flatOptions:{context:!0,url:!0}},ajaxPrefilter:Cn(Sn),ajaxTransport:Cn(xn),ajax:function(e,n){function T(e,n,s,a){var l,y,b,w,S,T=n;if(E===2)return;E=2,u&&clearTimeout(u),o=t,i=a||"",x.readyState=e>0?4:0,s&&(w=An(c,x,s));if(e>=200&&e<300||e===304)c.ifModified&&(S=x.getResponseHeader("Last-Modified"),S&&(v.lastModified[r]=S),S=x.getResponseHeader("Etag"),S&&(v.etag[r]=S)),e===304?(T="notmodified",l=!0):(l=On(c,w),T=l.state,y=l.data,b=l.error,l=!b);else{b=T;if(!T||e)T="error",e<0&&(e=0)}x.status=e,x.statusText=(n||T)+"",l?d.resolveWith(h,[y,T,x]):d.rejectWith(h,[x,T,b]),x.statusCode(g),g=t,f&&p.trigger("ajax"+(l?"Success":"Error"),[x,c,l?y:b]),m.fireWith(h,[x,T]),f&&(p.trigger("ajaxComplete",[x,c]),--v.active||v.event.trigger("ajaxStop"))}typeof e=="object"&&(n=e,e=t),n=n||{};var r,i,s,o,u,a,f,l,c=v.ajaxSetup({},n),h=c.context||c,p=h!==c&&(h.nodeType||h instanceof v)?v(h):v.event,d=v.Deferred(),m=v.Callbacks("once memory"),g=c.statusCode||{},b={},w={},E=0,S="canceled",x={readyState:0,setRequestHeader:function(e,t){if(!E){var n=e.toLowerCase();e=w[n]=w[n]||e,b[e]=t}return this},getAllResponseHeaders:function(){return E===2?i:null},getResponseHeader:function(e){var n;if(E===2){if(!s){s={};while(n=pn.exec(i))s[n[1].toLowerCase()]=n[2]}n=s[e.toLowerCase()]}return n===t?null:n},overrideMimeType:function(e){return E||(c.mimeType=e),this},abort:function(e){return e=e||S,o&&o.abort(e),T(0,e),this}};d.promise(x),x.success=x.done,x.error=x.fail,x.complete=m.add,x.statusCode=function(e){if(e){var t;if(E<2)for(t in e)g[t]=[g[t],e[t]];else t=e[x.status],x.always(t)}return this},c.url=((e||c.url)+"").replace(hn,"").replace(mn,ln[1]+"//"),c.dataTypes=v.trim(c.dataType||"*").toLowerCase().split(y),c.crossDomain==null&&(a=wn.exec(c.url.toLowerCase()),c.crossDomain=!(!a||a[1]===ln[1]&&a[2]===ln[2]&&(a[3]||(a[1]==="http:"?80:443))==(ln[3]||(ln[1]==="http:"?80:443)))),c.data&&c.processData&&typeof c.data!="string"&&(c.data=v.param(c.data,c.traditional)),kn(Sn,c,n,x);if(E===2)return x;f=c.global,c.type=c.type.toUpperCase(),c.hasContent=!vn.test(c.type),f&&v.active++===0&&v.event.trigger("ajaxStart");if(!c.hasContent){c.data&&(c.url+=(gn.test(c.url)?"&":"?")+c.data,delete c.data),r=c.url;if(c.cache===!1){var N=v.now(),C=c.url.replace(bn,"$1_="+N);c.url=C+(C===c.url?(gn.test(c.url)?"&":"?")+"_="+N:"")}}(c.data&&c.hasContent&&c.contentType!==!1||n.contentType)&&x.setRequestHeader("Content-Type",c.contentType),c.ifModified&&(r=r||c.url,v.lastModified[r]&&x.setRequestHeader("If-Modified-Since",v.lastModified[r]),v.etag[r]&&x.setRequestHeader("If-None-Match",v.etag[r])),x.setRequestHeader("Accept",c.dataTypes[0]&&c.accepts[c.dataTypes[0]]?c.accepts[c.dataTypes[0]]+(c.dataTypes[0]!=="*"?", "+Tn+"; q=0.01":""):c.accepts["*"]);for(l in c.headers)x.setRequestHeader(l,c.headers[l]);if(!c.beforeSend||c.beforeSend.call(h,x,c)!==!1&&E!==2){S="abort";for(l in{success:1,error:1,complete:1})x[l](c[l]);o=kn(xn,c,n,x);if(!o)T(-1,"No Transport");else{x.readyState=1,f&&p.trigger("ajaxSend",[x,c]),c.async&&c.timeout>0&&(u=setTimeout(function(){x.abort("timeout")},c.timeout));try{E=1,o.send(b,T)}catch(k){if(!(E<2))throw k;T(-1,k)}}return x}return x.abort()},active:0,lastModified:{},etag:{}});var Mn=[],_n=/\?/,Dn=/(=)\?(?=&|$)|\?\?/,Pn=v.now();v.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var e=Mn.pop()||v.expando+"_"+Pn++;return this[e]=!0,e}}),v.ajaxPrefilter("json jsonp",function(n,r,i){var s,o,u,a=n.data,f=n.url,l=n.jsonp!==!1,c=l&&Dn.test(f),h=l&&!c&&typeof a=="string"&&!(n.contentType||"").indexOf("application/x-www-form-urlencoded")&&Dn.test(a);if(n.dataTypes[0]==="jsonp"||c||h)return s=n.jsonpCallback=v.isFunction(n.jsonpCallback)?n.jsonpCallback():n.jsonpCallback,o=e[s],c?n.url=f.replace(Dn,"$1"+s):h?n.data=a.replace(Dn,"$1"+s):l&&(n.url+=(_n.test(f)?"&":"?")+n.jsonp+"="+s),n.converters["script json"]=function(){return u||v.error(s+" was not called"),u[0]},n.dataTypes[0]="json",e[s]=function(){u=arguments},i.always(function(){e[s]=o,n[s]&&(n.jsonpCallback=r.jsonpCallback,Mn.push(s)),u&&v.isFunction(o)&&o(u[0]),u=o=t}),"script"}),v.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/javascript|ecmascript/},converters:{"text script":function(e){return v.globalEval(e),e}}}),v.ajaxPrefilter("script",function(e){e.cache===t&&(e.cache=!1),e.crossDomain&&(e.type="GET",e.global=!1)}),v.ajaxTransport("script",function(e){if(e.crossDomain){var n,r=i.head||i.getElementsByTagName("head")[0]||i.documentElement;return{send:function(s,o){n=i.createElement("script"),n.async="async",e.scriptCharset&&(n.charset=e.scriptCharset),n.src=e.url,n.onload=n.onreadystatechange=function(e,i){if(i||!n.readyState||/loaded|complete/.test(n.readyState))n.onload=n.onreadystatechange=null,r&&n.parentNode&&r.removeChild(n),n=t,i||o(200,"success")},r.insertBefore(n,r.firstChild)},abort:function(){n&&n.onload(0,1)}}}});var Hn,Bn=e.ActiveXObject?function(){for(var e in Hn)Hn[e](0,1)}:!1,jn=0;v.ajaxSettings.xhr=e.ActiveXObject?function(){return!this.isLocal&&Fn()||In()}:Fn,function(e){v.extend(v.support,{ajax:!!e,cors:!!e&&"withCredentials"in e})}(v.ajaxSettings.xhr()),v.support.ajax&&v.ajaxTransport(function(n){if(!n.crossDomain||v.support.cors){var r;return{send:function(i,s){var o,u,a=n.xhr();n.username?a.open(n.type,n.url,n.async,n.username,n.password):a.open(n.type,n.url,n.async);if(n.xhrFields)for(u in n.xhrFields)a[u]=n.xhrFields[u];n.mimeType&&a.overrideMimeType&&a.overrideMimeType(n.mimeType),!n.crossDomain&&!i["X-Requested-With"]&&(i["X-Requested-With"]="XMLHttpRequest");try{for(u in i)a.setRequestHeader(u,i[u])}catch(f){}a.send(n.hasContent&&n.data||null),r=function(e,i){var u,f,l,c,h;try{if(r&&(i||a.readyState===4)){r=t,o&&(a.onreadystatechange=v.noop,Bn&&delete Hn[o]);if(i)a.readyState!==4&&a.abort();else{u=a.status,l=a.getAllResponseHeaders(),c={},h=a.responseXML,h&&h.documentElement&&(c.xml=h);try{c.text=a.responseText}catch(p){}try{f=a.statusText}catch(p){f=""}!u&&n.isLocal&&!n.crossDomain?u=c.text?200:404:u===1223&&(u=204)}}}catch(d){i||s(-1,d)}c&&s(u,f,c,l)},n.async?a.readyState===4?setTimeout(r,0):(o=++jn,Bn&&(Hn||(Hn={},v(e).unload(Bn)),Hn[o]=r),a.onreadystatechange=r):r()},abort:function(){r&&r(0,1)}}}});var qn,Rn,Un=/^(?:toggle|show|hide)$/,zn=new RegExp("^(?:([-+])=|)("+m+")([a-z%]*)$","i"),Wn=/queueHooks$/,Xn=[Gn],Vn={"*":[function(e,t){var n,r,i=this.createTween(e,t),s=zn.exec(t),o=i.cur(),u=+o||0,a=1,f=20;if(s){n=+s[2],r=s[3]||(v.cssNumber[e]?"":"px");if(r!=="px"&&u){u=v.css(i.elem,e,!0)||n||1;do a=a||".5",u/=a,v.style(i.elem,e,u+r);while(a!==(a=i.cur()/o)&&a!==1&&--f)}i.unit=r,i.start=u,i.end=s[1]?u+(s[1]+1)*n:n}return i}]};v.Animation=v.extend(Kn,{tweener:function(e,t){v.isFunction(e)?(t=e,e=["*"]):e=e.split(" ");var n,r=0,i=e.length;for(;r<i;r++)n=e[r],Vn[n]=Vn[n]||[],Vn[n].unshift(t)},prefilter:function(e,t){t?Xn.unshift(e):Xn.push(e)}}),v.Tween=Yn,Yn.prototype={constructor:Yn,init:function(e,t,n,r,i,s){this.elem=e,this.prop=n,this.easing=i||"swing",this.options=t,this.start=this.now=this.cur(),this.end=r,this.unit=s||(v.cssNumber[n]?"":"px")},cur:function(){var e=Yn.propHooks[this.prop];return e&&e.get?e.get(this):Yn.propHooks._default.get(this)},run:function(e){var t,n=Yn.propHooks[this.prop];return this.options.duration?this.pos=t=v.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):this.pos=t=e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),n&&n.set?n.set(this):Yn.propHooks._default.set(this),this}},Yn.prototype.init.prototype=Yn.prototype,Yn.propHooks={_default:{get:function(e){var t;return e.elem[e.prop]==null||!!e.elem.style&&e.elem.style[e.prop]!=null?(t=v.css(e.elem,e.prop,!1,""),!t||t==="auto"?0:t):e.elem[e.prop]},set:function(e){v.fx.step[e.prop]?v.fx.step[e.prop](e):e.elem.style&&(e.elem.style[v.cssProps[e.prop]]!=null||v.cssHooks[e.prop])?v.style(e.elem,e.prop,e.now+e.unit):e.elem[e.prop]=e.now}}},Yn.propHooks.scrollTop=Yn.propHooks.scrollLeft={set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.elem[e.prop]=e.now)}},v.each(["toggle","show","hide"],function(e,t){var n=v.fn[t];v.fn[t]=function(r,i,s){return r==null||typeof r=="boolean"||!e&&v.isFunction(r)&&v.isFunction(i)?n.apply(this,arguments):this.animate(Zn(t,!0),r,i,s)}}),v.fn.extend({fadeTo:function(e,t,n,r){return this.filter(Gt).css("opacity",0).show().end().animate({opacity:t},e,n,r)},animate:function(e,t,n,r){var i=v.isEmptyObject(e),s=v.speed(t,n,r),o=function(){var t=Kn(this,v.extend({},e),s);i&&t.stop(!0)};return i||s.queue===!1?this.each(o):this.queue(s.queue,o)},stop:function(e,n,r){var i=function(e){var t=e.stop;delete e.stop,t(r)};return typeof e!="string"&&(r=n,n=e,e=t),n&&e!==!1&&this.queue(e||"fx",[]),this.each(function(){var t=!0,n=e!=null&&e+"queueHooks",s=v.timers,o=v._data(this);if(n)o[n]&&o[n].stop&&i(o[n]);else for(n in o)o[n]&&o[n].stop&&Wn.test(n)&&i(o[n]);for(n=s.length;n--;)s[n].elem===this&&(e==null||s[n].queue===e)&&(s[n].anim.stop(r),t=!1,s.splice(n,1));(t||!r)&&v.dequeue(this,e)})}}),v.each({slideDown:Zn("show"),slideUp:Zn("hide"),slideToggle:Zn("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(e,t){v.fn[e]=function(e,n,r){return this.animate(t,e,n,r)}}),v.speed=function(e,t,n){var r=e&&typeof e=="object"?v.extend({},e):{complete:n||!n&&t||v.isFunction(e)&&e,duration:e,easing:n&&t||t&&!v.isFunction(t)&&t};r.duration=v.fx.off?0:typeof r.duration=="number"?r.duration:r.duration in v.fx.speeds?v.fx.speeds[r.duration]:v.fx.speeds._default;if(r.queue==null||r.queue===!0)r.queue="fx";return r.old=r.complete,r.complete=function(){v.isFunction(r.old)&&r.old.call(this),r.queue&&v.dequeue(this,r.queue)},r},v.easing={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2}},v.timers=[],v.fx=Yn.prototype.init,v.fx.tick=function(){var e,n=v.timers,r=0;qn=v.now();for(;r<n.length;r++)e=n[r],!e()&&n[r]===e&&n.splice(r--,1);n.length||v.fx.stop(),qn=t},v.fx.timer=function(e){e()&&v.timers.push(e)&&!Rn&&(Rn=setInterval(v.fx.tick,v.fx.interval))},v.fx.interval=13,v.fx.stop=function(){clearInterval(Rn),Rn=null},v.fx.speeds={slow:600,fast:200,_default:400},v.fx.step={},v.expr&&v.expr.filters&&(v.expr.filters.animated=function(e){return v.grep(v.timers,function(t){return e===t.elem}).length});var er=/^(?:body|html)$/i;v.fn.offset=function(e){if(arguments.length)return e===t?this:this.each(function(t){v.offset.setOffset(this,e,t)});var n,r,i,s,o,u,a,f={top:0,left:0},l=this[0],c=l&&l.ownerDocument;if(!c)return;return(r=c.body)===l?v.offset.bodyOffset(l):(n=c.documentElement,v.contains(n,l)?(typeof l.getBoundingClientRect!="undefined"&&(f=l.getBoundingClientRect()),i=tr(c),s=n.clientTop||r.clientTop||0,o=n.clientLeft||r.clientLeft||0,u=i.pageYOffset||n.scrollTop,a=i.pageXOffset||n.scrollLeft,{top:f.top+u-s,left:f.left+a-o}):f)},v.offset={bodyOffset:function(e){var t=e.offsetTop,n=e.offsetLeft;return v.support.doesNotIncludeMarginInBodyOffset&&(t+=parseFloat(v.css(e,"marginTop"))||0,n+=parseFloat(v.css(e,"marginLeft"))||0),{top:t,left:n}},setOffset:function(e,t,n){var r=v.css(e,"position");r==="static"&&(e.style.position="relative");var i=v(e),s=i.offset(),o=v.css(e,"top"),u=v.css(e,"left"),a=(r==="absolute"||r==="fixed")&&v.inArray("auto",[o,u])>-1,f={},l={},c,h;a?(l=i.position(),c=l.top,h=l.left):(c=parseFloat(o)||0,h=parseFloat(u)||0),v.isFunction(t)&&(t=t.call(e,n,s)),t.top!=null&&(f.top=t.top-s.top+c),t.left!=null&&(f.left=t.left-s.left+h),"using"in t?t.using.call(e,f):i.css(f)}},v.fn.extend({position:function(){if(!this[0])return;var e=this[0],t=this.offsetParent(),n=this.offset(),r=er.test(t[0].nodeName)?{top:0,left:0}:t.offset();return n.top-=parseFloat(v.css(e,"marginTop"))||0,n.left-=parseFloat(v.css(e,"marginLeft"))||0,r.top+=parseFloat(v.css(t[0],"borderTopWidth"))||0,r.left+=parseFloat(v.css(t[0],"borderLeftWidth"))||0,{top:n.top-r.top,left:n.left-r.left}},offsetParent:function(){return this.map(function(){var e=this.offsetParent||i.body;while(e&&!er.test(e.nodeName)&&v.css(e,"position")==="static")e=e.offsetParent;return e||i.body})}}),v.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(e,n){var r=/Y/.test(n);v.fn[e]=function(i){return v.access(this,function(e,i,s){var o=tr(e);if(s===t)return o?n in o?o[n]:o.document.documentElement[i]:e[i];o?o.scrollTo(r?v(o).scrollLeft():s,r?s:v(o).scrollTop()):e[i]=s},e,i,arguments.length,null)}}),v.each({Height:"height",Width:"width"},function(e,n){v.each({padding:"inner"+e,content:n,"":"outer"+e},function(r,i){v.fn[i]=function(i,s){var o=arguments.length&&(r||typeof i!="boolean"),u=r||(i===!0||s===!0?"margin":"border");return v.access(this,function(n,r,i){var s;return v.isWindow(n)?n.document.documentElement["client"+e]:n.nodeType===9?(s=n.documentElement,Math.max(n.body["scroll"+e],s["scroll"+e],n.body["offset"+e],s["offset"+e],s["client"+e])):i===t?v.css(n,r,i,u):v.style(n,r,i,u)},n,o?i:t,o,null)}})}),e.jQuery=e.$=v,typeof define=="function"&&define.amd&&define.amd.jQuery&&define("jquery",[],function(){return v})})(window);
/*! jQuery UI - v1.8.22 - 2012-07-24
* https://github.com/jquery/jquery-ui
* Includes: jquery.ui.core.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function(a,b){function c(b,c){var e=b.nodeName.toLowerCase();if("area"===e){var f=b.parentNode,g=f.name,h;return!b.href||!g||f.nodeName.toLowerCase()!=="map"?!1:(h=a("img[usemap=#"+g+"]")[0],!!h&&d(h))}return(/input|select|textarea|button|object/.test(e)?!b.disabled:"a"==e?b.href||c:c)&&d(b)}function d(b){return!a(b).parents().andSelf().filter(function(){return a.curCSS(this,"visibility")==="hidden"||a.expr.filters.hidden(this)}).length}a.ui=a.ui||{};if(a.ui.version)return;a.extend(a.ui,{version:"1.8.22",keyCode:{ALT:18,BACKSPACE:8,CAPS_LOCK:20,COMMA:188,COMMAND:91,COMMAND_LEFT:91,COMMAND_RIGHT:93,CONTROL:17,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,INSERT:45,LEFT:37,MENU:93,NUMPAD_ADD:107,NUMPAD_DECIMAL:110,NUMPAD_DIVIDE:111,NUMPAD_ENTER:108,NUMPAD_MULTIPLY:106,NUMPAD_SUBTRACT:109,PAGE_DOWN:34,PAGE_UP:33,PERIOD:190,RIGHT:39,SHIFT:16,SPACE:32,TAB:9,UP:38,WINDOWS:91}}),a.fn.extend({propAttr:a.fn.prop||a.fn.attr,_focus:a.fn.focus,focus:function(b,c){return typeof b=="number"?this.each(function(){var d=this;setTimeout(function(){a(d).focus(),c&&c.call(d)},b)}):this._focus.apply(this,arguments)},scrollParent:function(){var b;return a.browser.msie&&/(static|relative)/.test(this.css("position"))||/absolute/.test(this.css("position"))?b=this.parents().filter(function(){return/(relative|absolute|fixed)/.test(a.curCSS(this,"position",1))&&/(auto|scroll)/.test(a.curCSS(this,"overflow",1)+a.curCSS(this,"overflow-y",1)+a.curCSS(this,"overflow-x",1))}).eq(0):b=this.parents().filter(function(){return/(auto|scroll)/.test(a.curCSS(this,"overflow",1)+a.curCSS(this,"overflow-y",1)+a.curCSS(this,"overflow-x",1))}).eq(0),/fixed/.test(this.css("position"))||!b.length?a(document):b},zIndex:function(c){if(c!==b)return this.css("zIndex",c);if(this.length){var d=a(this[0]),e,f;while(d.length&&d[0]!==document){e=d.css("position");if(e==="absolute"||e==="relative"||e==="fixed"){f=parseInt(d.css("zIndex"),10);if(!isNaN(f)&&f!==0)return f}d=d.parent()}}return 0},disableSelection:function(){return this.bind((a.support.selectstart?"selectstart":"mousedown")+".ui-disableSelection",function(a){a.preventDefault()})},enableSelection:function(){return this.unbind(".ui-disableSelection")}}),a("<a>").outerWidth(1).jquery||a.each(["Width","Height"],function(c,d){function h(b,c,d,f){return a.each(e,function(){c-=parseFloat(a.curCSS(b,"padding"+this,!0))||0,d&&(c-=parseFloat(a.curCSS(b,"border"+this+"Width",!0))||0),f&&(c-=parseFloat(a.curCSS(b,"margin"+this,!0))||0)}),c}var e=d==="Width"?["Left","Right"]:["Top","Bottom"],f=d.toLowerCase(),g={innerWidth:a.fn.innerWidth,innerHeight:a.fn.innerHeight,outerWidth:a.fn.outerWidth,outerHeight:a.fn.outerHeight};a.fn["inner"+d]=function(c){return c===b?g["inner"+d].call(this):this.each(function(){a(this).css(f,h(this,c)+"px")})},a.fn["outer"+d]=function(b,c){return typeof b!="number"?g["outer"+d].call(this,b):this.each(function(){a(this).css(f,h(this,b,!0,c)+"px")})}}),a.extend(a.expr[":"],{data:a.expr.createPseudo?a.expr.createPseudo(function(b){return function(c){return!!a.data(c,b)}}):function(b,c,d){return!!a.data(b,d[3])},focusable:function(b){return c(b,!isNaN(a.attr(b,"tabindex")))},tabbable:function(b){var d=a.attr(b,"tabindex"),e=isNaN(d);return(e||d>=0)&&c(b,!e)}}),a(function(){var b=document.body,c=b.appendChild(c=document.createElement("div"));c.offsetHeight,a.extend(c.style,{minHeight:"100px",height:"auto",padding:0,borderWidth:0}),a.support.minHeight=c.offsetHeight===100,a.support.selectstart="onselectstart"in c,b.removeChild(c).style.display="none"}),a.curCSS||(a.curCSS=a.css),a.extend(a.ui,{plugin:{add:function(b,c,d){var e=a.ui[b].prototype;for(var f in d)e.plugins[f]=e.plugins[f]||[],e.plugins[f].push([c,d[f]])},call:function(a,b,c){var d=a.plugins[b];if(!d||!a.element[0].parentNode)return;for(var e=0;e<d.length;e++)a.options[d[e][0]]&&d[e][1].apply(a.element,c)}},contains:function(a,b){return document.compareDocumentPosition?a.compareDocumentPosition(b)&16:a!==b&&a.contains(b)},hasScroll:function(b,c){if(a(b).css("overflow")==="hidden")return!1;var d=c&&c==="left"?"scrollLeft":"scrollTop",e=!1;return b[d]>0?!0:(b[d]=1,e=b[d]>0,b[d]=0,e)},isOverAxis:function(a,b,c){return a>b&&a<b+c},isOver:function(b,c,d,e,f,g){return a.ui.isOverAxis(b,d,f)&&a.ui.isOverAxis(c,e,g)}})})(jQuery);;/*! jQuery UI - v1.8.22 - 2012-07-24
* https://github.com/jquery/jquery-ui
* Includes: jquery.ui.widget.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function(a,b){if(a.cleanData){var c=a.cleanData;a.cleanData=function(b){for(var d=0,e;(e=b[d])!=null;d++)try{a(e).triggerHandler("remove")}catch(f){}c(b)}}else{var d=a.fn.remove;a.fn.remove=function(b,c){return this.each(function(){return c||(!b||a.filter(b,[this]).length)&&a("*",this).add([this]).each(function(){try{a(this).triggerHandler("remove")}catch(b){}}),d.call(a(this),b,c)})}}a.widget=function(b,c,d){var e=b.split(".")[0],f;b=b.split(".")[1],f=e+"-"+b,d||(d=c,c=a.Widget),a.expr[":"][f]=function(c){return!!a.data(c,b)},a[e]=a[e]||{},a[e][b]=function(a,b){arguments.length&&this._createWidget(a,b)};var g=new c;g.options=a.extend(!0,{},g.options),a[e][b].prototype=a.extend(!0,g,{namespace:e,widgetName:b,widgetEventPrefix:a[e][b].prototype.widgetEventPrefix||b,widgetBaseClass:f},d),a.widget.bridge(b,a[e][b])},a.widget.bridge=function(c,d){a.fn[c]=function(e){var f=typeof e=="string",g=Array.prototype.slice.call(arguments,1),h=this;return e=!f&&g.length?a.extend.apply(null,[!0,e].concat(g)):e,f&&e.charAt(0)==="_"?h:(f?this.each(function(){var d=a.data(this,c),f=d&&a.isFunction(d[e])?d[e].apply(d,g):d;if(f!==d&&f!==b)return h=f,!1}):this.each(function(){var b=a.data(this,c);b?b.option(e||{})._init():a.data(this,c,new d(e,this))}),h)}},a.Widget=function(a,b){arguments.length&&this._createWidget(a,b)},a.Widget.prototype={widgetName:"widget",widgetEventPrefix:"",options:{disabled:!1},_createWidget:function(b,c){a.data(c,this.widgetName,this),this.element=a(c),this.options=a.extend(!0,{},this.options,this._getCreateOptions(),b);var d=this;this.element.bind("remove."+this.widgetName,function(){d.destroy()}),this._create(),this._trigger("create"),this._init()},_getCreateOptions:function(){return a.metadata&&a.metadata.get(this.element[0])[this.widgetName]},_create:function(){},_init:function(){},destroy:function(){this.element.unbind("."+this.widgetName).removeData(this.widgetName),this.widget().unbind("."+this.widgetName).removeAttr("aria-disabled").removeClass(this.widgetBaseClass+"-disabled "+"ui-state-disabled")},widget:function(){return this.element},option:function(c,d){var e=c;if(arguments.length===0)return a.extend({},this.options);if(typeof c=="string"){if(d===b)return this.options[c];e={},e[c]=d}return this._setOptions(e),this},_setOptions:function(b){var c=this;return a.each(b,function(a,b){c._setOption(a,b)}),this},_setOption:function(a,b){return this.options[a]=b,a==="disabled"&&this.widget()[b?"addClass":"removeClass"](this.widgetBaseClass+"-disabled"+" "+"ui-state-disabled").attr("aria-disabled",b),this},enable:function(){return this._setOption("disabled",!1)},disable:function(){return this._setOption("disabled",!0)},_trigger:function(b,c,d){var e,f,g=this.options[b];d=d||{},c=a.Event(c),c.type=(b===this.widgetEventPrefix?b:this.widgetEventPrefix+b).toLowerCase(),c.target=this.element[0],f=c.originalEvent;if(f)for(e in f)e in c||(c[e]=f[e]);return this.element.trigger(c,d),!(a.isFunction(g)&&g.call(this.element[0],c,d)===!1||c.isDefaultPrevented())}}})(jQuery);;/*! jQuery UI - v1.8.22 - 2012-07-24
* https://github.com/jquery/jquery-ui
* Includes: jquery.ui.mouse.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function(a,b){var c=!1;a(document).mouseup(function(a){c=!1}),a.widget("ui.mouse",{options:{cancel:":input,option",distance:1,delay:0},_mouseInit:function(){var b=this;this.element.bind("mousedown."+this.widgetName,function(a){return b._mouseDown(a)}).bind("click."+this.widgetName,function(c){if(!0===a.data(c.target,b.widgetName+".preventClickEvent"))return a.removeData(c.target,b.widgetName+".preventClickEvent"),c.stopImmediatePropagation(),!1}),this.started=!1},_mouseDestroy:function(){this.element.unbind("."+this.widgetName),a(document).unbind("mousemove."+this.widgetName,this._mouseMoveDelegate).unbind("mouseup."+this.widgetName,this._mouseUpDelegate)},_mouseDown:function(b){if(c)return;this._mouseStarted&&this._mouseUp(b),this._mouseDownEvent=b;var d=this,e=b.which==1,f=typeof this.options.cancel=="string"&&b.target.nodeName?a(b.target).closest(this.options.cancel).length:!1;if(!e||f||!this._mouseCapture(b))return!0;this.mouseDelayMet=!this.options.delay,this.mouseDelayMet||(this._mouseDelayTimer=setTimeout(function(){d.mouseDelayMet=!0},this.options.delay));if(this._mouseDistanceMet(b)&&this._mouseDelayMet(b)){this._mouseStarted=this._mouseStart(b)!==!1;if(!this._mouseStarted)return b.preventDefault(),!0}return!0===a.data(b.target,this.widgetName+".preventClickEvent")&&a.removeData(b.target,this.widgetName+".preventClickEvent"),this._mouseMoveDelegate=function(a){return d._mouseMove(a)},this._mouseUpDelegate=function(a){return d._mouseUp(a)},a(document).bind("mousemove."+this.widgetName,this._mouseMoveDelegate).bind("mouseup."+this.widgetName,this._mouseUpDelegate),b.preventDefault(),c=!0,!0},_mouseMove:function(b){return!a.browser.msie||document.documentMode>=9||!!b.button?this._mouseStarted?(this._mouseDrag(b),b.preventDefault()):(this._mouseDistanceMet(b)&&this._mouseDelayMet(b)&&(this._mouseStarted=this._mouseStart(this._mouseDownEvent,b)!==!1,this._mouseStarted?this._mouseDrag(b):this._mouseUp(b)),!this._mouseStarted):this._mouseUp(b)},_mouseUp:function(b){return a(document).unbind("mousemove."+this.widgetName,this._mouseMoveDelegate).unbind("mouseup."+this.widgetName,this._mouseUpDelegate),this._mouseStarted&&(this._mouseStarted=!1,b.target==this._mouseDownEvent.target&&a.data(b.target,this.widgetName+".preventClickEvent",!0),this._mouseStop(b)),!1},_mouseDistanceMet:function(a){return Math.max(Math.abs(this._mouseDownEvent.pageX-a.pageX),Math.abs(this._mouseDownEvent.pageY-a.pageY))>=this.options.distance},_mouseDelayMet:function(a){return this.mouseDelayMet},_mouseStart:function(a){},_mouseDrag:function(a){},_mouseStop:function(a){},_mouseCapture:function(a){return!0}})})(jQuery);;/*! jQuery UI - v1.8.22 - 2012-07-24
* https://github.com/jquery/jquery-ui
* Includes: jquery.ui.position.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function(a,b){a.ui=a.ui||{};var c=/left|center|right/,d=/top|center|bottom/,e="center",f={},g=a.fn.position,h=a.fn.offset;a.fn.position=function(b){if(!b||!b.of)return g.apply(this,arguments);b=a.extend({},b);var h=a(b.of),i=h[0],j=(b.collision||"flip").split(" "),k=b.offset?b.offset.split(" "):[0,0],l,m,n;return i.nodeType===9?(l=h.width(),m=h.height(),n={top:0,left:0}):i.setTimeout?(l=h.width(),m=h.height(),n={top:h.scrollTop(),left:h.scrollLeft()}):i.preventDefault?(b.at="left top",l=m=0,n={top:b.of.pageY,left:b.of.pageX}):(l=h.outerWidth(),m=h.outerHeight(),n=h.offset()),a.each(["my","at"],function(){var a=(b[this]||"").split(" ");a.length===1&&(a=c.test(a[0])?a.concat([e]):d.test(a[0])?[e].concat(a):[e,e]),a[0]=c.test(a[0])?a[0]:e,a[1]=d.test(a[1])?a[1]:e,b[this]=a}),j.length===1&&(j[1]=j[0]),k[0]=parseInt(k[0],10)||0,k.length===1&&(k[1]=k[0]),k[1]=parseInt(k[1],10)||0,b.at[0]==="right"?n.left+=l:b.at[0]===e&&(n.left+=l/2),b.at[1]==="bottom"?n.top+=m:b.at[1]===e&&(n.top+=m/2),n.left+=k[0],n.top+=k[1],this.each(function(){var c=a(this),d=c.outerWidth(),g=c.outerHeight(),h=parseInt(a.curCSS(this,"marginLeft",!0))||0,i=parseInt(a.curCSS(this,"marginTop",!0))||0,o=d+h+(parseInt(a.curCSS(this,"marginRight",!0))||0),p=g+i+(parseInt(a.curCSS(this,"marginBottom",!0))||0),q=a.extend({},n),r;b.my[0]==="right"?q.left-=d:b.my[0]===e&&(q.left-=d/2),b.my[1]==="bottom"?q.top-=g:b.my[1]===e&&(q.top-=g/2),f.fractions||(q.left=Math.round(q.left),q.top=Math.round(q.top)),r={left:q.left-h,top:q.top-i},a.each(["left","top"],function(c,e){a.ui.position[j[c]]&&a.ui.position[j[c]][e](q,{targetWidth:l,targetHeight:m,elemWidth:d,elemHeight:g,collisionPosition:r,collisionWidth:o,collisionHeight:p,offset:k,my:b.my,at:b.at})}),a.fn.bgiframe&&c.bgiframe(),c.offset(a.extend(q,{using:b.using}))})},a.ui.position={fit:{left:function(b,c){var d=a(window),e=c.collisionPosition.left+c.collisionWidth-d.width()-d.scrollLeft();b.left=e>0?b.left-e:Math.max(b.left-c.collisionPosition.left,b.left)},top:function(b,c){var d=a(window),e=c.collisionPosition.top+c.collisionHeight-d.height()-d.scrollTop();b.top=e>0?b.top-e:Math.max(b.top-c.collisionPosition.top,b.top)}},flip:{left:function(b,c){if(c.at[0]===e)return;var d=a(window),f=c.collisionPosition.left+c.collisionWidth-d.width()-d.scrollLeft(),g=c.my[0]==="left"?-c.elemWidth:c.my[0]==="right"?c.elemWidth:0,h=c.at[0]==="left"?c.targetWidth:-c.targetWidth,i=-2*c.offset[0];b.left+=c.collisionPosition.left<0?g+h+i:f>0?g+h+i:0},top:function(b,c){if(c.at[1]===e)return;var d=a(window),f=c.collisionPosition.top+c.collisionHeight-d.height()-d.scrollTop(),g=c.my[1]==="top"?-c.elemHeight:c.my[1]==="bottom"?c.elemHeight:0,h=c.at[1]==="top"?c.targetHeight:-c.targetHeight,i=-2*c.offset[1];b.top+=c.collisionPosition.top<0?g+h+i:f>0?g+h+i:0}}},a.offset.setOffset||(a.offset.setOffset=function(b,c){/static/.test(a.curCSS(b,"position"))&&(b.style.position="relative");var d=a(b),e=d.offset(),f=parseInt(a.curCSS(b,"top",!0),10)||0,g=parseInt(a.curCSS(b,"left",!0),10)||0,h={top:c.top-e.top+f,left:c.left-e.left+g};"using"in c?c.using.call(b,h):d.css(h)},a.fn.offset=function(b){var c=this[0];return!c||!c.ownerDocument?null:b?a.isFunction(b)?this.each(function(c){a(this).offset(b.call(this,c,a(this).offset()))}):this.each(function(){a.offset.setOffset(this,b)}):h.call(this)}),function(){var b=document.getElementsByTagName("body")[0],c=document.createElement("div"),d,e,g,h,i;d=document.createElement(b?"div":"body"),g={visibility:"hidden",width:0,height:0,border:0,margin:0,background:"none"},b&&a.extend(g,{position:"absolute",left:"-1000px",top:"-1000px"});for(var j in g)d.style[j]=g[j];d.appendChild(c),e=b||document.documentElement,e.insertBefore(d,e.firstChild),c.style.cssText="position: absolute; left: 10.7432222px; top: 10.432325px; height: 30px; width: 201px;",h=a(c).offset(function(a,b){return b}).offset(),d.innerHTML="",e.removeChild(d),i=h.top+h.left+(b?2e3:0),f.fractions=i>21&&i<22}()})(jQuery);;/*! jQuery UI - v1.8.22 - 2012-07-24
* https://github.com/jquery/jquery-ui
* Includes: jquery.ui.draggable.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function(a,b){a.widget("ui.draggable",a.ui.mouse,{widgetEventPrefix:"drag",options:{addClasses:!0,appendTo:"parent",axis:!1,connectToSortable:!1,containment:!1,cursor:"auto",cursorAt:!1,grid:!1,handle:!1,helper:"original",iframeFix:!1,opacity:!1,refreshPositions:!1,revert:!1,revertDuration:500,scope:"default",scroll:!0,scrollSensitivity:20,scrollSpeed:20,snap:!1,snapMode:"both",snapTolerance:20,stack:!1,zIndex:!1},_create:function(){this.options.helper=="original"&&!/^(?:r|a|f)/.test(this.element.css("position"))&&(this.element[0].style.position="relative"),this.options.addClasses&&this.element.addClass("ui-draggable"),this.options.disabled&&this.element.addClass("ui-draggable-disabled"),this._mouseInit()},destroy:function(){if(!this.element.data("draggable"))return;return this.element.removeData("draggable").unbind(".draggable").removeClass("ui-draggable ui-draggable-dragging ui-draggable-disabled"),this._mouseDestroy(),this},_mouseCapture:function(b){var c=this.options;return this.helper||c.disabled||a(b.target).is(".ui-resizable-handle")?!1:(this.handle=this._getHandle(b),this.handle?(c.iframeFix&&a(c.iframeFix===!0?"iframe":c.iframeFix).each(function(){a('<div class="ui-draggable-iframeFix" style="background: #fff;"></div>').css({width:this.offsetWidth+"px",height:this.offsetHeight+"px",position:"absolute",opacity:"0.001",zIndex:1e3}).css(a(this).offset()).appendTo("body")}),!0):!1)},_mouseStart:function(b){var c=this.options;return this.helper=this._createHelper(b),this.helper.addClass("ui-draggable-dragging"),this._cacheHelperProportions(),a.ui.ddmanager&&(a.ui.ddmanager.current=this),this._cacheMargins(),this.cssPosition=this.helper.css("position"),this.scrollParent=this.helper.scrollParent(),this.offset=this.positionAbs=this.element.offset(),this.offset={top:this.offset.top-this.margins.top,left:this.offset.left-this.margins.left},a.extend(this.offset,{click:{left:b.pageX-this.offset.left,top:b.pageY-this.offset.top},parent:this._getParentOffset(),relative:this._getRelativeOffset()}),this.originalPosition=this.position=this._generatePosition(b),this.originalPageX=b.pageX,this.originalPageY=b.pageY,c.cursorAt&&this._adjustOffsetFromHelper(c.cursorAt),c.containment&&this._setContainment(),this._trigger("start",b)===!1?(this._clear(),!1):(this._cacheHelperProportions(),a.ui.ddmanager&&!c.dropBehaviour&&a.ui.ddmanager.prepareOffsets(this,b),this._mouseDrag(b,!0),a.ui.ddmanager&&a.ui.ddmanager.dragStart(this,b),!0)},_mouseDrag:function(b,c){this.position=this._generatePosition(b),this.positionAbs=this._convertPositionTo("absolute");if(!c){var d=this._uiHash();if(this._trigger("drag",b,d)===!1)return this._mouseUp({}),!1;this.position=d.position}if(!this.options.axis||this.options.axis!="y")this.helper[0].style.left=this.position.left+"px";if(!this.options.axis||this.options.axis!="x")this.helper[0].style.top=this.position.top+"px";return a.ui.ddmanager&&a.ui.ddmanager.drag(this,b),!1},_mouseStop:function(b){var c=!1;a.ui.ddmanager&&!this.options.dropBehaviour&&(c=a.ui.ddmanager.drop(this,b)),this.dropped&&(c=this.dropped,this.dropped=!1);var d=this.element[0],e=!1;while(d&&(d=d.parentNode))d==document&&(e=!0);if(!e&&this.options.helper==="original")return!1;if(this.options.revert=="invalid"&&!c||this.options.revert=="valid"&&c||this.options.revert===!0||a.isFunction(this.options.revert)&&this.options.revert.call(this.element,c)){var f=this;a(this.helper).animate(this.originalPosition,parseInt(this.options.revertDuration,10),function(){f._trigger("stop",b)!==!1&&f._clear()})}else this._trigger("stop",b)!==!1&&this._clear();return!1},_mouseUp:function(b){return this.options.iframeFix===!0&&a("div.ui-draggable-iframeFix").each(function(){this.parentNode.removeChild(this)}),a.ui.ddmanager&&a.ui.ddmanager.dragStop(this,b),a.ui.mouse.prototype._mouseUp.call(this,b)},cancel:function(){return this.helper.is(".ui-draggable-dragging")?this._mouseUp({}):this._clear(),this},_getHandle:function(b){var c=!this.options.handle||!a(this.options.handle,this.element).length?!0:!1;return a(this.options.handle,this.element).find("*").andSelf().each(function(){this==b.target&&(c=!0)}),c},_createHelper:function(b){var c=this.options,d=a.isFunction(c.helper)?a(c.helper.apply(this.element[0],[b])):c.helper=="clone"?this.element.clone().removeAttr("id"):this.element;return d.parents("body").length||d.appendTo(c.appendTo=="parent"?this.element[0].parentNode:c.appendTo),d[0]!=this.element[0]&&!/(fixed|absolute)/.test(d.css("position"))&&d.css("position","absolute"),d},_adjustOffsetFromHelper:function(b){typeof b=="string"&&(b=b.split(" ")),a.isArray(b)&&(b={left:+b[0],top:+b[1]||0}),"left"in b&&(this.offset.click.left=b.left+this.margins.left),"right"in b&&(this.offset.click.left=this.helperProportions.width-b.right+this.margins.left),"top"in b&&(this.offset.click.top=b.top+this.margins.top),"bottom"in b&&(this.offset.click.top=this.helperProportions.height-b.bottom+this.margins.top)},_getParentOffset:function(){this.offsetParent=this.helper.offsetParent();var b=this.offsetParent.offset();this.cssPosition=="absolute"&&this.scrollParent[0]!=document&&a.ui.contains(this.scrollParent[0],this.offsetParent[0])&&(b.left+=this.scrollParent.scrollLeft(),b.top+=this.scrollParent.scrollTop());if(this.offsetParent[0]==document.body||this.offsetParent[0].tagName&&this.offsetParent[0].tagName.toLowerCase()=="html"&&a.browser.msie)b={top:0,left:0};return{top:b.top+(parseInt(this.offsetParent.css("borderTopWidth"),10)||0),left:b.left+(parseInt(this.offsetParent.css("borderLeftWidth"),10)||0)}},_getRelativeOffset:function(){if(this.cssPosition=="relative"){var a=this.element.position();return{top:a.top-(parseInt(this.helper.css("top"),10)||0)+this.scrollParent.scrollTop(),left:a.left-(parseInt(this.helper.css("left"),10)||0)+this.scrollParent.scrollLeft()}}return{top:0,left:0}},_cacheMargins:function(){this.margins={left:parseInt(this.element.css("marginLeft"),10)||0,top:parseInt(this.element.css("marginTop"),10)||0,right:parseInt(this.element.css("marginRight"),10)||0,bottom:parseInt(this.element.css("marginBottom"),10)||0}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var b=this.options;b.containment=="parent"&&(b.containment=this.helper[0].parentNode);if(b.containment=="document"||b.containment=="window")this.containment=[b.containment=="document"?0:a(window).scrollLeft()-this.offset.relative.left-this.offset.parent.left,b.containment=="document"?0:a(window).scrollTop()-this.offset.relative.top-this.offset.parent.top,(b.containment=="document"?0:a(window).scrollLeft())+a(b.containment=="document"?document:window).width()-this.helperProportions.width-this.margins.left,(b.containment=="document"?0:a(window).scrollTop())+(a(b.containment=="document"?document:window).height()||document.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top];if(!/^(document|window|parent)$/.test(b.containment)&&b.containment.constructor!=Array){var c=a(b.containment),d=c[0];if(!d)return;var e=c.offset(),f=a(d).css("overflow")!="hidden";this.containment=[(parseInt(a(d).css("borderLeftWidth"),10)||0)+(parseInt(a(d).css("paddingLeft"),10)||0),(parseInt(a(d).css("borderTopWidth"),10)||0)+(parseInt(a(d).css("paddingTop"),10)||0),(f?Math.max(d.scrollWidth,d.offsetWidth):d.offsetWidth)-(parseInt(a(d).css("borderLeftWidth"),10)||0)-(parseInt(a(d).css("paddingRight"),10)||0)-this.helperProportions.width-this.margins.left-this.margins.right,(f?Math.max(d.scrollHeight,d.offsetHeight):d.offsetHeight)-(parseInt(a(d).css("borderTopWidth"),10)||0)-(parseInt(a(d).css("paddingBottom"),10)||0)-this.helperProportions.height-this.margins.top-this.margins.bottom],this.relative_container=c}else b.containment.constructor==Array&&(this.containment=b.containment)},_convertPositionTo:function(b,c){c||(c=this.position);var d=b=="absolute"?1:-1,e=this.options,f=this.cssPosition=="absolute"&&(this.scrollParent[0]==document||!a.ui.contains(this.scrollParent[0],this.offsetParent[0]))?this.offsetParent:this.scrollParent,g=/(html|body)/i.test(f[0].tagName);return{top:c.top+this.offset.relative.top*d+this.offset.parent.top*d-(a.browser.safari&&a.browser.version<526&&this.cssPosition=="fixed"?0:(this.cssPosition=="fixed"?-this.scrollParent.scrollTop():g?0:f.scrollTop())*d),left:c.left+this.offset.relative.left*d+this.offset.parent.left*d-(a.browser.safari&&a.browser.version<526&&this.cssPosition=="fixed"?0:(this.cssPosition=="fixed"?-this.scrollParent.scrollLeft():g?0:f.scrollLeft())*d)}},_generatePosition:function(b){var c=this.options,d=this.cssPosition=="absolute"&&(this.scrollParent[0]==document||!a.ui.contains(this.scrollParent[0],this.offsetParent[0]))?this.offsetParent:this.scrollParent,e=/(html|body)/i.test(d[0].tagName),f=b.pageX,g=b.pageY;if(this.originalPosition){var h;if(this.containment){if(this.relative_container){var i=this.relative_container.offset();h=[this.containment[0]+i.left,this.containment[1]+i.top,this.containment[2]+i.left,this.containment[3]+i.top]}else h=this.containment;b.pageX-this.offset.click.left<h[0]&&(f=h[0]+this.offset.click.left),b.pageY-this.offset.click.top<h[1]&&(g=h[1]+this.offset.click.top),b.pageX-this.offset.click.left>h[2]&&(f=h[2]+this.offset.click.left),b.pageY-this.offset.click.top>h[3]&&(g=h[3]+this.offset.click.top)}if(c.grid){var j=c.grid[1]?this.originalPageY+Math.round((g-this.originalPageY)/c.grid[1])*c.grid[1]:this.originalPageY;g=h?j-this.offset.click.top<h[1]||j-this.offset.click.top>h[3]?j-this.offset.click.top<h[1]?j+c.grid[1]:j-c.grid[1]:j:j;var k=c.grid[0]?this.originalPageX+Math.round((f-this.originalPageX)/c.grid[0])*c.grid[0]:this.originalPageX;f=h?k-this.offset.click.left<h[0]||k-this.offset.click.left>h[2]?k-this.offset.click.left<h[0]?k+c.grid[0]:k-c.grid[0]:k:k}}return{top:g-this.offset.click.top-this.offset.relative.top-this.offset.parent.top+(a.browser.safari&&a.browser.version<526&&this.cssPosition=="fixed"?0:this.cssPosition=="fixed"?-this.scrollParent.scrollTop():e?0:d.scrollTop()),left:f-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+(a.browser.safari&&a.browser.version<526&&this.cssPosition=="fixed"?0:this.cssPosition=="fixed"?-this.scrollParent.scrollLeft():e?0:d.scrollLeft())}},_clear:function(){this.helper.removeClass("ui-draggable-dragging"),this.helper[0]!=this.element[0]&&!this.cancelHelperRemoval&&this.helper.remove(),this.helper=null,this.cancelHelperRemoval=!1},_trigger:function(b,c,d){return d=d||this._uiHash(),a.ui.plugin.call(this,b,[c,d]),b=="drag"&&(this.positionAbs=this._convertPositionTo("absolute")),a.Widget.prototype._trigger.call(this,b,c,d)},plugins:{},_uiHash:function(a){return{helper:this.helper,position:this.position,originalPosition:this.originalPosition,offset:this.positionAbs}}}),a.extend(a.ui.draggable,{version:"1.8.22"}),a.ui.plugin.add("draggable","connectToSortable",{start:function(b,c){var d=a(this).data("draggable"),e=d.options,f=a.extend({},c,{item:d.element});d.sortables=[],a(e.connectToSortable).each(function(){var c=a.data(this,"sortable");c&&!c.options.disabled&&(d.sortables.push({instance:c,shouldRevert:c.options.revert}),c.refreshPositions(),c._trigger("activate",b,f))})},stop:function(b,c){var d=a(this).data("draggable"),e=a.extend({},c,{item:d.element});a.each(d.sortables,function(){this.instance.isOver?(this.instance.isOver=0,d.cancelHelperRemoval=!0,this.instance.cancelHelperRemoval=!1,this.shouldRevert&&(this.instance.options.revert=!0),this.instance._mouseStop(b),this.instance.options.helper=this.instance.options._helper,d.options.helper=="original"&&this.instance.currentItem.css({top:"auto",left:"auto"})):(this.instance.cancelHelperRemoval=!1,this.instance._trigger("deactivate",b,e))})},drag:function(b,c){var d=a(this).data("draggable"),e=this,f=function(b){var c=this.offset.click.top,d=this.offset.click.left,e=this.positionAbs.top,f=this.positionAbs.left,g=b.height,h=b.width,i=b.top,j=b.left;return a.ui.isOver(e+c,f+d,i,j,g,h)};a.each(d.sortables,function(f){this.instance.positionAbs=d.positionAbs,this.instance.helperProportions=d.helperProportions,this.instance.offset.click=d.offset.click,this.instance._intersectsWith(this.instance.containerCache)?(this.instance.isOver||(this.instance.isOver=1,this.instance.currentItem=a(e).clone().removeAttr("id").appendTo(this.instance.element).data("sortable-item",!0),this.instance.options._helper=this.instance.options.helper,this.instance.options.helper=function(){return c.helper[0]},b.target=this.instance.currentItem[0],this.instance._mouseCapture(b,!0),this.instance._mouseStart(b,!0,!0),this.instance.offset.click.top=d.offset.click.top,this.instance.offset.click.left=d.offset.click.left,this.instance.offset.parent.left-=d.offset.parent.left-this.instance.offset.parent.left,this.instance.offset.parent.top-=d.offset.parent.top-this.instance.offset.parent.top,d._trigger("toSortable",b),d.dropped=this.instance.element,d.currentItem=d.element,this.instance.fromOutside=d),this.instance.currentItem&&this.instance._mouseDrag(b)):this.instance.isOver&&(this.instance.isOver=0,this.instance.cancelHelperRemoval=!0,this.instance.options.revert=!1,this.instance._trigger("out",b,this.instance._uiHash(this.instance)),this.instance._mouseStop(b,!0),this.instance.options.helper=this.instance.options._helper,this.instance.currentItem.remove(),this.instance.placeholder&&this.instance.placeholder.remove(),d._trigger("fromSortable",b),d.dropped=!1)})}}),a.ui.plugin.add("draggable","cursor",{start:function(b,c){var d=a("body"),e=a(this).data("draggable").options;d.css("cursor")&&(e._cursor=d.css("cursor")),d.css("cursor",e.cursor)},stop:function(b,c){var d=a(this).data("draggable").options;d._cursor&&a("body").css("cursor",d._cursor)}}),a.ui.plugin.add("draggable","opacity",{start:function(b,c){var d=a(c.helper),e=a(this).data("draggable").options;d.css("opacity")&&(e._opacity=d.css("opacity")),d.css("opacity",e.opacity)},stop:function(b,c){var d=a(this).data("draggable").options;d._opacity&&a(c.helper).css("opacity",d._opacity)}}),a.ui.plugin.add("draggable","scroll",{start:function(b,c){var d=a(this).data("draggable");d.scrollParent[0]!=document&&d.scrollParent[0].tagName!="HTML"&&(d.overflowOffset=d.scrollParent.offset())},drag:function(b,c){var d=a(this).data("draggable"),e=d.options,f=!1;if(d.scrollParent[0]!=document&&d.scrollParent[0].tagName!="HTML"){if(!e.axis||e.axis!="x")d.overflowOffset.top+d.scrollParent[0].offsetHeight-b.pageY<e.scrollSensitivity?d.scrollParent[0].scrollTop=f=d.scrollParent[0].scrollTop+e.scrollSpeed:b.pageY-d.overflowOffset.top<e.scrollSensitivity&&(d.scrollParent[0].scrollTop=f=d.scrollParent[0].scrollTop-e.scrollSpeed);if(!e.axis||e.axis!="y")d.overflowOffset.left+d.scrollParent[0].offsetWidth-b.pageX<e.scrollSensitivity?d.scrollParent[0].scrollLeft=f=d.scrollParent[0].scrollLeft+e.scrollSpeed:b.pageX-d.overflowOffset.left<e.scrollSensitivity&&(d.scrollParent[0].scrollLeft=f=d.scrollParent[0].scrollLeft-e.scrollSpeed)}else{if(!e.axis||e.axis!="x")b.pageY-a(document).scrollTop()<e.scrollSensitivity?f=a(document).scrollTop(a(document).scrollTop()-e.scrollSpeed):a(window).height()-(b.pageY-a(document).scrollTop())<e.scrollSensitivity&&(f=a(document).scrollTop(a(document).scrollTop()+e.scrollSpeed));if(!e.axis||e.axis!="y")b.pageX-a(document).scrollLeft()<e.scrollSensitivity?f=a(document).scrollLeft(a(document).scrollLeft()-e.scrollSpeed):a(window).width()-(b.pageX-a(document).scrollLeft())<e.scrollSensitivity&&(f=a(document).scrollLeft(a(document).scrollLeft()+e.scrollSpeed))}f!==!1&&a.ui.ddmanager&&!e.dropBehaviour&&a.ui.ddmanager.prepareOffsets(d,b)}}),a.ui.plugin.add("draggable","snap",{start:function(b,c){var d=a(this).data("draggable"),e=d.options;d.snapElements=[],a(e.snap.constructor!=String?e.snap.items||":data(draggable)":e.snap).each(function(){var b=a(this),c=b.offset();this!=d.element[0]&&d.snapElements.push({item:this,width:b.outerWidth(),height:b.outerHeight(),top:c.top,left:c.left})})},drag:function(b,c){var d=a(this).data("draggable"),e=d.options,f=e.snapTolerance,g=c.offset.left,h=g+d.helperProportions.width,i=c.offset.top,j=i+d.helperProportions.height;for(var k=d.snapElements.length-1;k>=0;k--){var l=d.snapElements[k].left,m=l+d.snapElements[k].width,n=d.snapElements[k].top,o=n+d.snapElements[k].height;if(!(l-f<g&&g<m+f&&n-f<i&&i<o+f||l-f<g&&g<m+f&&n-f<j&&j<o+f||l-f<h&&h<m+f&&n-f<i&&i<o+f||l-f<h&&h<m+f&&n-f<j&&j<o+f)){d.snapElements[k].snapping&&d.options.snap.release&&d.options.snap.release.call(d.element,b,a.extend(d._uiHash(),{snapItem:d.snapElements[k].item})),d.snapElements[k].snapping=!1;continue}if(e.snapMode!="inner"){var p=Math.abs(n-j)<=f,q=Math.abs(o-i)<=f,r=Math.abs(l-h)<=f,s=Math.abs(m-g)<=f;p&&(c.position.top=d._convertPositionTo("relative",{top:n-d.helperProportions.height,left:0}).top-d.margins.top),q&&(c.position.top=d._convertPositionTo("relative",{top:o,left:0}).top-d.margins.top),r&&(c.position.left=d._convertPositionTo("relative",{top:0,left:l-d.helperProportions.width}).left-d.margins.left),s&&(c.position.left=d._convertPositionTo("relative",{top:0,left:m}).left-d.margins.left)}var t=p||q||r||s;if(e.snapMode!="outer"){var p=Math.abs(n-i)<=f,q=Math.abs(o-j)<=f,r=Math.abs(l-g)<=f,s=Math.abs(m-h)<=f;p&&(c.position.top=d._convertPositionTo("relative",{top:n,left:0}).top-d.margins.top),q&&(c.position.top=d._convertPositionTo("relative",{top:o-d.helperProportions.height,left:0}).top-d.margins.top),r&&(c.position.left=d._convertPositionTo("relative",{top:0,left:l}).left-d.margins.left),s&&(c.position.left=d._convertPositionTo("relative",{top:0,left:m-d.helperProportions.width}).left-d.margins.left)}!d.snapElements[k].snapping&&(p||q||r||s||t)&&d.options.snap.snap&&d.options.snap.snap.call(d.element,b,a.extend(d._uiHash(),{snapItem:d.snapElements[k].item})),d.snapElements[k].snapping=p||q||r||s||t}}}),a.ui.plugin.add("draggable","stack",{start:function(b,c){var d=a(this).data("draggable").options,e=a.makeArray(a(d.stack)).sort(function(b,c){return(parseInt(a(b).css("zIndex"),10)||0)-(parseInt(a(c).css("zIndex"),10)||0)});if(!e.length)return;var f=parseInt(e[0].style.zIndex)||0;a(e).each(function(a){this.style.zIndex=f+a}),this[0].style.zIndex=f+e.length}}),a.ui.plugin.add("draggable","zIndex",{start:function(b,c){var d=a(c.helper),e=a(this).data("draggable").options;d.css("zIndex")&&(e._zIndex=d.css("zIndex")),d.css("zIndex",e.zIndex)},stop:function(b,c){var d=a(this).data("draggable").options;d._zIndex&&a(c.helper).css("zIndex",d._zIndex)}})})(jQuery);;/*! jQuery UI - v1.8.22 - 2012-07-24
* https://github.com/jquery/jquery-ui
* Includes: jquery.ui.droppable.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function(a,b){a.widget("ui.droppable",{widgetEventPrefix:"drop",options:{accept:"*",activeClass:!1,addClasses:!0,greedy:!1,hoverClass:!1,scope:"default",tolerance:"intersect"},_create:function(){var b=this.options,c=b.accept;this.isover=0,this.isout=1,this.accept=a.isFunction(c)?c:function(a){return a.is(c)},this.proportions={width:this.element[0].offsetWidth,height:this.element[0].offsetHeight},a.ui.ddmanager.droppables[b.scope]=a.ui.ddmanager.droppables[b.scope]||[],a.ui.ddmanager.droppables[b.scope].push(this),b.addClasses&&this.element.addClass("ui-droppable")},destroy:function(){var b=a.ui.ddmanager.droppables[this.options.scope];for(var c=0;c<b.length;c++)b[c]==this&&b.splice(c,1);return this.element.removeClass("ui-droppable ui-droppable-disabled").removeData("droppable").unbind(".droppable"),this},_setOption:function(b,c){b=="accept"&&(this.accept=a.isFunction(c)?c:function(a){return a.is(c)}),a.Widget.prototype._setOption.apply(this,arguments)},_activate:function(b){var c=a.ui.ddmanager.current;this.options.activeClass&&this.element.addClass(this.options.activeClass),c&&this._trigger("activate",b,this.ui(c))},_deactivate:function(b){var c=a.ui.ddmanager.current;this.options.activeClass&&this.element.removeClass(this.options.activeClass),c&&this._trigger("deactivate",b,this.ui(c))},_over:function(b){var c=a.ui.ddmanager.current;if(!c||(c.currentItem||c.element)[0]==this.element[0])return;this.accept.call(this.element[0],c.currentItem||c.element)&&(this.options.hoverClass&&this.element.addClass(this.options.hoverClass),this._trigger("over",b,this.ui(c)))},_out:function(b){var c=a.ui.ddmanager.current;if(!c||(c.currentItem||c.element)[0]==this.element[0])return;this.accept.call(this.element[0],c.currentItem||c.element)&&(this.options.hoverClass&&this.element.removeClass(this.options.hoverClass),this._trigger("out",b,this.ui(c)))},_drop:function(b,c){var d=c||a.ui.ddmanager.current;if(!d||(d.currentItem||d.element)[0]==this.element[0])return!1;var e=!1;return this.element.find(":data(droppable)").not(".ui-draggable-dragging").each(function(){var b=a.data(this,"droppable");if(b.options.greedy&&!b.options.disabled&&b.options.scope==d.options.scope&&b.accept.call(b.element[0],d.currentItem||d.element)&&a.ui.intersect(d,a.extend(b,{offset:b.element.offset()}),b.options.tolerance))return e=!0,!1}),e?!1:this.accept.call(this.element[0],d.currentItem||d.element)?(this.options.activeClass&&this.element.removeClass(this.options.activeClass),this.options.hoverClass&&this.element.removeClass(this.options.hoverClass),this._trigger("drop",b,this.ui(d)),this.element):!1},ui:function(a){return{draggable:a.currentItem||a.element,helper:a.helper,position:a.position,offset:a.positionAbs}}}),a.extend(a.ui.droppable,{version:"1.8.22"}),a.ui.intersect=function(b,c,d){if(!c.offset)return!1;var e=(b.positionAbs||b.position.absolute).left,f=e+b.helperProportions.width,g=(b.positionAbs||b.position.absolute).top,h=g+b.helperProportions.height,i=c.offset.left,j=i+c.proportions.width,k=c.offset.top,l=k+c.proportions.height;switch(d){case"fit":return i<=e&&f<=j&&k<=g&&h<=l;case"intersect":return i<e+b.helperProportions.width/2&&f-b.helperProportions.width/2<j&&k<g+b.helperProportions.height/2&&h-b.helperProportions.height/2<l;case"pointer":var m=(b.positionAbs||b.position.absolute).left+(b.clickOffset||b.offset.click).left,n=(b.positionAbs||b.position.absolute).top+(b.clickOffset||b.offset.click).top,o=a.ui.isOver(n,m,k,i,c.proportions.height,c.proportions.width);return o;case"touch":return(g>=k&&g<=l||h>=k&&h<=l||g<k&&h>l)&&(e>=i&&e<=j||f>=i&&f<=j||e<i&&f>j);default:return!1}},a.ui.ddmanager={current:null,droppables:{"default":[]},prepareOffsets:function(b,c){var d=a.ui.ddmanager.droppables[b.options.scope]||[],e=c?c.type:null,f=(b.currentItem||b.element).find(":data(droppable)").andSelf();g:for(var h=0;h<d.length;h++){if(d[h].options.disabled||b&&!d[h].accept.call(d[h].element[0],b.currentItem||b.element))continue;for(var i=0;i<f.length;i++)if(f[i]==d[h].element[0]){d[h].proportions.height=0;continue g}d[h].visible=d[h].element.css("display")!="none";if(!d[h].visible)continue;e=="mousedown"&&d[h]._activate.call(d[h],c),d[h].offset=d[h].element.offset(),d[h].proportions={width:d[h].element[0].offsetWidth,height:d[h].element[0].offsetHeight}}},drop:function(b,c){var d=!1;return a.each(a.ui.ddmanager.droppables[b.options.scope]||[],function(){if(!this.options)return;!this.options.disabled&&this.visible&&a.ui.intersect(b,this,this.options.tolerance)&&(d=this._drop.call(this,c)||d),!this.options.disabled&&this.visible&&this.accept.call(this.element[0],b.currentItem||b.element)&&(this.isout=1,this.isover=0,this._deactivate.call(this,c))}),d},dragStart:function(b,c){b.element.parents(":not(body,html)").bind("scroll.droppable",function(){b.options.refreshPositions||a.ui.ddmanager.prepareOffsets(b,c)})},drag:function(b,c){b.options.refreshPositions&&a.ui.ddmanager.prepareOffsets(b,c),a.each(a.ui.ddmanager.droppables[b.options.scope]||[],function(){if(this.options.disabled||this.greedyChild||!this.visible)return;var d=a.ui.intersect(b,this,this.options.tolerance),e=!d&&this.isover==1?"isout":d&&this.isover==0?"isover":null;if(!e)return;var f;if(this.options.greedy){var g=this.element.parents(":data(droppable):eq(0)");g.length&&(f=a.data(g[0],"droppable"),f.greedyChild=e=="isover"?1:0)}f&&e=="isover"&&(f.isover=0,f.isout=1,f._out.call(f,c)),this[e]=1,this[e=="isout"?"isover":"isout"]=0,this[e=="isover"?"_over":"_out"].call(this,c),f&&e=="isout"&&(f.isout=0,f.isover=1,f._over.call(f,c))})},dragStop:function(b,c){b.element.parents(":not(body,html)").unbind("scroll.droppable"),b.options.refreshPositions||a.ui.ddmanager.prepareOffsets(b,c)}}})(jQuery);;/*! jQuery UI - v1.8.22 - 2012-07-24
* https://github.com/jquery/jquery-ui
* Includes: jquery.ui.resizable.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function(a,b){a.widget("ui.resizable",a.ui.mouse,{widgetEventPrefix:"resize",options:{alsoResize:!1,animate:!1,animateDuration:"slow",animateEasing:"swing",aspectRatio:!1,autoHide:!1,containment:!1,ghost:!1,grid:!1,handles:"e,s,se",helper:!1,maxHeight:null,maxWidth:null,minHeight:10,minWidth:10,zIndex:1e3},_create:function(){var b=this,c=this.options;this.element.addClass("ui-resizable"),a.extend(this,{_aspectRatio:!!c.aspectRatio,aspectRatio:c.aspectRatio,originalElement:this.element,_proportionallyResizeElements:[],_helper:c.helper||c.ghost||c.animate?c.helper||"ui-resizable-helper":null}),this.element[0].nodeName.match(/canvas|textarea|input|select|button|img/i)&&(this.element.wrap(a('<div class="ui-wrapper" style="overflow: hidden;"></div>').css({position:this.element.css("position"),width:this.element.outerWidth(),height:this.element.outerHeight(),top:this.element.css("top"),left:this.element.css("left")})),this.element=this.element.parent().data("resizable",this.element.data("resizable")),this.elementIsWrapper=!0,this.element.css({marginLeft:this.originalElement.css("marginLeft"),marginTop:this.originalElement.css("marginTop"),marginRight:this.originalElement.css("marginRight"),marginBottom:this.originalElement.css("marginBottom")}),this.originalElement.css({marginLeft:0,marginTop:0,marginRight:0,marginBottom:0}),this.originalResizeStyle=this.originalElement.css("resize"),this.originalElement.css("resize","none"),this._proportionallyResizeElements.push(this.originalElement.css({position:"static",zoom:1,display:"block"})),this.originalElement.css({margin:this.originalElement.css("margin")}),this._proportionallyResize()),this.handles=c.handles||(a(".ui-resizable-handle",this.element).length?{n:".ui-resizable-n",e:".ui-resizable-e",s:".ui-resizable-s",w:".ui-resizable-w",se:".ui-resizable-se",sw:".ui-resizable-sw",ne:".ui-resizable-ne",nw:".ui-resizable-nw"}:"e,s,se");if(this.handles.constructor==String){this.handles=="all"&&(this.handles="n,e,s,w,se,sw,ne,nw");var d=this.handles.split(",");this.handles={};for(var e=0;e<d.length;e++){var f=a.trim(d[e]),g="ui-resizable-"+f,h=a('<div class="ui-resizable-handle '+g+'"></div>');h.css({zIndex:c.zIndex}),"se"==f&&h.addClass("ui-icon ui-icon-gripsmall-diagonal-se"),this.handles[f]=".ui-resizable-"+f,this.element.append(h)}}this._renderAxis=function(b){b=b||this.element;for(var c in this.handles){this.handles[c].constructor==String&&(this.handles[c]=a(this.handles[c],this.element).show());if(this.elementIsWrapper&&this.originalElement[0].nodeName.match(/textarea|input|select|button/i)){var d=a(this.handles[c],this.element),e=0;e=/sw|ne|nw|se|n|s/.test(c)?d.outerHeight():d.outerWidth();var f=["padding",/ne|nw|n/.test(c)?"Top":/se|sw|s/.test(c)?"Bottom":/^e$/.test(c)?"Right":"Left"].join("");b.css(f,e),this._proportionallyResize()}if(!a(this.handles[c]).length)continue}},this._renderAxis(this.element),this._handles=a(".ui-resizable-handle",this.element).disableSelection(),this._handles.mouseover(function(){if(!b.resizing){if(this.className)var a=this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i);b.axis=a&&a[1]?a[1]:"se"}}),c.autoHide&&(this._handles.hide(),a(this.element).addClass("ui-resizable-autohide").hover(function(){if(c.disabled)return;a(this).removeClass("ui-resizable-autohide"),b._handles.show()},function(){if(c.disabled)return;b.resizing||(a(this).addClass("ui-resizable-autohide"),b._handles.hide())})),this._mouseInit()},destroy:function(){this._mouseDestroy();var b=function(b){a(b).removeClass("ui-resizable ui-resizable-disabled ui-resizable-resizing").removeData("resizable").unbind(".resizable").find(".ui-resizable-handle").remove()};if(this.elementIsWrapper){b(this.element);var c=this.element;c.after(this.originalElement.css({position:c.css("position"),width:c.outerWidth(),height:c.outerHeight(),top:c.css("top"),left:c.css("left")})).remove()}return this.originalElement.css("resize",this.originalResizeStyle),b(this.originalElement),this},_mouseCapture:function(b){var c=!1;for(var d in this.handles)a(this.handles[d])[0]==b.target&&(c=!0);return!this.options.disabled&&c},_mouseStart:function(b){var d=this.options,e=this.element.position(),f=this.element;this.resizing=!0,this.documentScroll={top:a(document).scrollTop(),left:a(document).scrollLeft()},(f.is(".ui-draggable")||/absolute/.test(f.css("position")))&&f.css({position:"absolute",top:e.top,left:e.left}),this._renderProxy();var g=c(this.helper.css("left")),h=c(this.helper.css("top"));d.containment&&(g+=a(d.containment).scrollLeft()||0,h+=a(d.containment).scrollTop()||0),this.offset=this.helper.offset(),this.position={left:g,top:h},this.size=this._helper?{width:f.outerWidth(),height:f.outerHeight()}:{width:f.width(),height:f.height()},this.originalSize=this._helper?{width:f.outerWidth(),height:f.outerHeight()}:{width:f.width(),height:f.height()},this.originalPosition={left:g,top:h},this.sizeDiff={width:f.outerWidth()-f.width(),height:f.outerHeight()-f.height()},this.originalMousePosition={left:b.pageX,top:b.pageY},this.aspectRatio=typeof d.aspectRatio=="number"?d.aspectRatio:this.originalSize.width/this.originalSize.height||1;var i=a(".ui-resizable-"+this.axis).css("cursor");return a("body").css("cursor",i=="auto"?this.axis+"-resize":i),f.addClass("ui-resizable-resizing"),this._propagate("start",b),!0},_mouseDrag:function(b){var c=this.helper,d=this.options,e={},f=this,g=this.originalMousePosition,h=this.axis,i=b.pageX-g.left||0,j=b.pageY-g.top||0,k=this._change[h];if(!k)return!1;var l=k.apply(this,[b,i,j]),m=a.browser.msie&&a.browser.version<7,n=this.sizeDiff;this._updateVirtualBoundaries(b.shiftKey);if(this._aspectRatio||b.shiftKey)l=this._updateRatio(l,b);return l=this._respectSize(l,b),this._propagate("resize",b),c.css({top:this.position.top+"px",left:this.position.left+"px",width:this.size.width+"px",height:this.size.height+"px"}),!this._helper&&this._proportionallyResizeElements.length&&this._proportionallyResize(),this._updateCache(l),this._trigger("resize",b,this.ui()),!1},_mouseStop:function(b){this.resizing=!1;var c=this.options,d=this;if(this._helper){var e=this._proportionallyResizeElements,f=e.length&&/textarea/i.test(e[0].nodeName),g=f&&a.ui.hasScroll(e[0],"left")?0:d.sizeDiff.height,h=f?0:d.sizeDiff.width,i={width:d.helper.width()-h,height:d.helper.height()-g},j=parseInt(d.element.css("left"),10)+(d.position.left-d.originalPosition.left)||null,k=parseInt(d.element.css("top"),10)+(d.position.top-d.originalPosition.top)||null;c.animate||this.element.css(a.extend(i,{top:k,left:j})),d.helper.height(d.size.height),d.helper.width(d.size.width),this._helper&&!c.animate&&this._proportionallyResize()}return a("body").css("cursor","auto"),this.element.removeClass("ui-resizable-resizing"),this._propagate("stop",b),this._helper&&this.helper.remove(),!1},_updateVirtualBoundaries:function(a){var b=this.options,c,e,f,g,h;h={minWidth:d(b.minWidth)?b.minWidth:0,maxWidth:d(b.maxWidth)?b.maxWidth:Infinity,minHeight:d(b.minHeight)?b.minHeight:0,maxHeight:d(b.maxHeight)?b.maxHeight:Infinity};if(this._aspectRatio||a)c=h.minHeight*this.aspectRatio,f=h.minWidth/this.aspectRatio,e=h.maxHeight*this.aspectRatio,g=h.maxWidth/this.aspectRatio,c>h.minWidth&&(h.minWidth=c),f>h.minHeight&&(h.minHeight=f),e<h.maxWidth&&(h.maxWidth=e),g<h.maxHeight&&(h.maxHeight=g);this._vBoundaries=h},_updateCache:function(a){var b=this.options;this.offset=this.helper.offset(),d(a.left)&&(this.position.left=a.left),d(a.top)&&(this.position.top=a.top),d(a.height)&&(this.size.height=a.height),d(a.width)&&(this.size.width=a.width)},_updateRatio:function(a,b){var c=this.options,e=this.position,f=this.size,g=this.axis;return d(a.height)?a.width=a.height*this.aspectRatio:d(a.width)&&(a.height=a.width/this.aspectRatio),g=="sw"&&(a.left=e.left+(f.width-a.width),a.top=null),g=="nw"&&(a.top=e.top+(f.height-a.height),a.left=e.left+(f.width-a.width)),a},_respectSize:function(a,b){var c=this.helper,e=this._vBoundaries,f=this._aspectRatio||b.shiftKey,g=this.axis,h=d(a.width)&&e.maxWidth&&e.maxWidth<a.width,i=d(a.height)&&e.maxHeight&&e.maxHeight<a.height,j=d(a.width)&&e.minWidth&&e.minWidth>a.width,k=d(a.height)&&e.minHeight&&e.minHeight>a.height;j&&(a.width=e.minWidth),k&&(a.height=e.minHeight),h&&(a.width=e.maxWidth),i&&(a.height=e.maxHeight);var l=this.originalPosition.left+this.originalSize.width,m=this.position.top+this.size.height,n=/sw|nw|w/.test(g),o=/nw|ne|n/.test(g);j&&n&&(a.left=l-e.minWidth),h&&n&&(a.left=l-e.maxWidth),k&&o&&(a.top=m-e.minHeight),i&&o&&(a.top=m-e.maxHeight);var p=!a.width&&!a.height;return p&&!a.left&&a.top?a.top=null:p&&!a.top&&a.left&&(a.left=null),a},_proportionallyResize:function(){var b=this.options;if(!this._proportionallyResizeElements.length)return;var c=this.helper||this.element;for(var d=0;d<this._proportionallyResizeElements.length;d++){var e=this._proportionallyResizeElements[d];if(!this.borderDif){var f=[e.css("borderTopWidth"),e.css("borderRightWidth"),e.css("borderBottomWidth"),e.css("borderLeftWidth")],g=[e.css("paddingTop"),e.css("paddingRight"),e.css("paddingBottom"),e.css("paddingLeft")];this.borderDif=a.map(f,function(a,b){var c=parseInt(a,10)||0,d=parseInt(g[b],10)||0;return c+d})}if(!a.browser.msie||!a(c).is(":hidden")&&!a(c).parents(":hidden").length)e.css({height:c.height()-this.borderDif[0]-this.borderDif[2]||0,width:c.width()-this.borderDif[1]-this.borderDif[3]||0});else continue}},_renderProxy:function(){var b=this.element,c=this.options;this.elementOffset=b.offset();if(this._helper){this.helper=this.helper||a('<div style="overflow:hidden;"></div>');var d=a.browser.msie&&a.browser.version<7,e=d?1:0,f=d?2:-1;this.helper.addClass(this._helper).css({width:this.element.outerWidth()+f,height:this.element.outerHeight()+f,position:"absolute",left:this.elementOffset.left-e+"px",top:this.elementOffset.top-e+"px",zIndex:++c.zIndex}),this.helper.appendTo("body").disableSelection()}else this.helper=this.element},_change:{e:function(a,b,c){return{width:this.originalSize.width+b}},w:function(a,b,c){var d=this.options,e=this.originalSize,f=this.originalPosition;return{left:f.left+b,width:e.width-b}},n:function(a,b,c){var d=this.options,e=this.originalSize,f=this.originalPosition;return{top:f.top+c,height:e.height-c}},s:function(a,b,c){return{height:this.originalSize.height+c}},se:function(b,c,d){return a.extend(this._change.s.apply(this,arguments),this._change.e.apply(this,[b,c,d]))},sw:function(b,c,d){return a.extend(this._change.s.apply(this,arguments),this._change.w.apply(this,[b,c,d]))},ne:function(b,c,d){return a.extend(this._change.n.apply(this,arguments),this._change.e.apply(this,[b,c,d]))},nw:function(b,c,d){return a.extend(this._change.n.apply(this,arguments),this._change.w.apply(this,[b,c,d]))}},_propagate:function(b,c){a.ui.plugin.call(this,b,[c,this.ui()]),b!="resize"&&this._trigger(b,c,this.ui())},plugins:{},ui:function(){return{originalElement:this.originalElement,element:this.element,helper:this.helper,position:this.position,size:this.size,originalSize:this.originalSize,originalPosition:this.originalPosition}}}),a.extend(a.ui.resizable,{version:"1.8.22"}),a.ui.plugin.add("resizable","alsoResize",{start:function(b,c){var d=a(this).data("resizable"),e=d.options,f=function(b){a(b).each(function(){var b=a(this);b.data("resizable-alsoresize",{width:parseInt(b.width(),10),height:parseInt(b.height(),10),left:parseInt(b.css("left"),10),top:parseInt(b.css("top"),10)})})};typeof e.alsoResize=="object"&&!e.alsoResize.parentNode?e.alsoResize.length?(e.alsoResize=e.alsoResize[0],f(e.alsoResize)):a.each(e.alsoResize,function(a){f(a)}):f(e.alsoResize)},resize:function(b,c){var d=a(this).data("resizable"),e=d.options,f=d.originalSize,g=d.originalPosition,h={height:d.size.height-f.height||0,width:d.size.width-f.width||0,top:d.position.top-g.top||0,left:d.position.left-g.left||0},i=function(b,d){a(b).each(function(){var b=a(this),e=a(this).data("resizable-alsoresize"),f={},g=d&&d.length?d:b.parents(c.originalElement[0]).length?["width","height"]:["width","height","top","left"];a.each(g,function(a,b){var c=(e[b]||0)+(h[b]||0);c&&c>=0&&(f[b]=c||null)}),b.css(f)})};typeof e.alsoResize=="object"&&!e.alsoResize.nodeType?a.each(e.alsoResize,function(a,b){i(a,b)}):i(e.alsoResize)},stop:function(b,c){a(this).removeData("resizable-alsoresize")}}),a.ui.plugin.add("resizable","animate",{stop:function(b,c){var d=a(this).data("resizable"),e=d.options,f=d._proportionallyResizeElements,g=f.length&&/textarea/i.test(f[0].nodeName),h=g&&a.ui.hasScroll(f[0],"left")?0:d.sizeDiff.height,i=g?0:d.sizeDiff.width,j={width:d.size.width-i,height:d.size.height-h},k=parseInt(d.element.css("left"),10)+(d.position.left-d.originalPosition.left)||null,l=parseInt(d.element.css("top"),10)+(d.position.top-d.originalPosition.top)||null;d.element.animate(a.extend(j,l&&k?{top:l,left:k}:{}),{duration:e.animateDuration,easing:e.animateEasing,step:function(){var c={width:parseInt(d.element.css("width"),10),height:parseInt(d.element.css("height"),10),top:parseInt(d.element.css("top"),10),left:parseInt(d.element.css("left"),10)};f&&f.length&&a(f[0]).css({width:c.width,height:c.height}),d._updateCache(c),d._propagate("resize",b)}})}}),a.ui.plugin.add("resizable","containment",{start:function(b,d){var e=a(this).data("resizable"),f=e.options,g=e.element,h=f.containment,i=h instanceof a?h.get(0):/parent/.test(h)?g.parent().get(0):h;if(!i)return;e.containerElement=a(i);if(/document/.test(h)||h==document)e.containerOffset={left:0,top:0},e.containerPosition={left:0,top:0},e.parentData={element:a(document),left:0,top:0,width:a(document).width(),height:a(document).height()||document.body.parentNode.scrollHeight};else{var j=a(i),k=[];a(["Top","Right","Left","Bottom"]).each(function(a,b){k[a]=c(j.css("padding"+b))}),e.containerOffset=j.offset(),e.containerPosition=j.position(),e.containerSize={height:j.innerHeight()-k[3],width:j.innerWidth()-k[1]};var l=e.containerOffset,m=e.containerSize.height,n=e.containerSize.width,o=a.ui.hasScroll(i,"left")?i.scrollWidth:n,p=a.ui.hasScroll(i)?i.scrollHeight:m;e.parentData={element:i,left:l.left,top:l.top,width:o,height:p}}},resize:function(b,c){var d=a(this).data("resizable"),e=d.options,f=d.containerSize,g=d.containerOffset,h=d.size,i=d.position,j=d._aspectRatio||b.shiftKey,k={top:0,left:0},l=d.containerElement;l[0]!=document&&/static/.test(l.css("position"))&&(k=g),i.left<(d._helper?g.left:0)&&(d.size.width=d.size.width+(d._helper?d.position.left-g.left:d.position.left-k.left),j&&(d.size.height=d.size.width/d.aspectRatio),d.position.left=e.helper?g.left:0),i.top<(d._helper?g.top:0)&&(d.size.height=d.size.height+(d._helper?d.position.top-g.top:d.position.top),j&&(d.size.width=d.size.height*d.aspectRatio),d.position.top=d._helper?g.top:0),d.offset.left=d.parentData.left+d.position.left,d.offset.top=d.parentData.top+d.position.top;var m=Math.abs((d._helper?d.offset.left-k.left:d.offset.left-k.left)+d.sizeDiff.width),n=Math.abs((d._helper?d.offset.top-k.top:d.offset.top-g.top)+d.sizeDiff.height),o=d.containerElement.get(0)==d.element.parent().get(0),p=/relative|absolute/.test(d.containerElement.css("position"));o&&p&&(m-=d.parentData.left),m+d.size.width>=d.parentData.width&&(d.size.width=d.parentData.width-m,j&&(d.size.height=d.size.width/d.aspectRatio)),n+d.size.height>=d.parentData.height&&(d.size.height=d.parentData.height-n,j&&(d.size.width=d.size.height*d.aspectRatio))},stop:function(b,c){var d=a(this).data("resizable"),e=d.options,f=d.position,g=d.containerOffset,h=d.containerPosition,i=d.containerElement,j=a(d.helper),k=j.offset(),l=j.outerWidth()-d.sizeDiff.width,m=j.outerHeight()-d.sizeDiff.height;d._helper&&!e.animate&&/relative/.test(i.css("position"))&&a(this).css({left:k.left-h.left-g.left,width:l,height:m}),d._helper&&!e.animate&&/static/.test(i.css("position"))&&a(this).css({left:k.left-h.left-g.left,width:l,height:m})}}),a.ui.plugin.add("resizable","ghost",{start:function(b,c){var d=a(this).data("resizable"),e=d.options,f=d.size;d.ghost=d.originalElement.clone(),d.ghost.css({opacity:.25,display:"block",position:"relative",height:f.height,width:f.width,margin:0,left:0,top:0}).addClass("ui-resizable-ghost").addClass(typeof e.ghost=="string"?e.ghost:""),d.ghost.appendTo(d.helper)},resize:function(b,c){var d=a(this).data("resizable"),e=d.options;d.ghost&&d.ghost.css({position:"relative",height:d.size.height,width:d.size.width})},stop:function(b,c){var d=a(this).data("resizable"),e=d.options;d.ghost&&d.helper&&d.helper.get(0).removeChild(d.ghost.get(0))}}),a.ui.plugin.add("resizable","grid",{resize:function(b,c){var d=a(this).data("resizable"),e=d.options,f=d.size,g=d.originalSize,h=d.originalPosition,i=d.axis,j=e._aspectRatio||b.shiftKey;e.grid=typeof e.grid=="number"?[e.grid,e.grid]:e.grid;var k=Math.round((f.width-g.width)/(e.grid[0]||1))*(e.grid[0]||1),l=Math.round((f.height-g.height)/(e.grid[1]||1))*(e.grid[1]||1);/^(se|s|e)$/.test(i)?(d.size.width=g.width+k,d.size.height=g.height+l):/^(ne)$/.test(i)?(d.size.width=g.width+k,d.size.height=g.height+l,d.position.top=h.top-l):/^(sw)$/.test(i)?(d.size.width=g.width+k,d.size.height=g.height+l,d.position.left=h.left-k):(d.size.width=g.width+k,d.size.height=g.height+l,d.position.top=h.top-l,d.position.left=h.left-k)}});var c=function(a){return parseInt(a,10)||0},d=function(a){return!isNaN(parseInt(a,10))}})(jQuery);;/*! jQuery UI - v1.8.22 - 2012-07-24
* https://github.com/jquery/jquery-ui
* Includes: jquery.ui.selectable.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function(a,b){a.widget("ui.selectable",a.ui.mouse,{options:{appendTo:"body",autoRefresh:!0,distance:0,filter:"*",tolerance:"touch"},_create:function(){var b=this;this.element.addClass("ui-selectable"),this.dragged=!1;var c;this.refresh=function(){c=a(b.options.filter,b.element[0]),c.addClass("ui-selectee"),c.each(function(){var b=a(this),c=b.offset();a.data(this,"selectable-item",{element:this,$element:b,left:c.left,top:c.top,right:c.left+b.outerWidth(),bottom:c.top+b.outerHeight(),startselected:!1,selected:b.hasClass("ui-selected"),selecting:b.hasClass("ui-selecting"),unselecting:b.hasClass("ui-unselecting")})})},this.refresh(),this.selectees=c.addClass("ui-selectee"),this._mouseInit(),this.helper=a("<div class='ui-selectable-helper'></div>")},destroy:function(){return this.selectees.removeClass("ui-selectee").removeData("selectable-item"),this.element.removeClass("ui-selectable ui-selectable-disabled").removeData("selectable").unbind(".selectable"),this._mouseDestroy(),this},_mouseStart:function(b){var c=this;this.opos=[b.pageX,b.pageY];if(this.options.disabled)return;var d=this.options;this.selectees=a(d.filter,this.element[0]),this._trigger("start",b),a(d.appendTo).append(this.helper),this.helper.css({left:b.clientX,top:b.clientY,width:0,height:0}),d.autoRefresh&&this.refresh(),this.selectees.filter(".ui-selected").each(function(){var d=a.data(this,"selectable-item");d.startselected=!0,!b.metaKey&&!b.ctrlKey&&(d.$element.removeClass("ui-selected"),d.selected=!1,d.$element.addClass("ui-unselecting"),d.unselecting=!0,c._trigger("unselecting",b,{unselecting:d.element}))}),a(b.target).parents().andSelf().each(function(){var d=a.data(this,"selectable-item");if(d){var e=!b.metaKey&&!b.ctrlKey||!d.$element.hasClass("ui-selected");return d.$element.removeClass(e?"ui-unselecting":"ui-selected").addClass(e?"ui-selecting":"ui-unselecting"),d.unselecting=!e,d.selecting=e,d.selected=e,e?c._trigger("selecting",b,{selecting:d.element}):c._trigger("unselecting",b,{unselecting:d.element}),!1}})},_mouseDrag:function(b){var c=this;this.dragged=!0;if(this.options.disabled)return;var d=this.options,e=this.opos[0],f=this.opos[1],g=b.pageX,h=b.pageY;if(e>g){var i=g;g=e,e=i}if(f>h){var i=h;h=f,f=i}return this.helper.css({left:e,top:f,width:g-e,height:h-f}),this.selectees.each(function(){var i=a.data(this,"selectable-item");if(!i||i.element==c.element[0])return;var j=!1;d.tolerance=="touch"?j=!(i.left>g||i.right<e||i.top>h||i.bottom<f):d.tolerance=="fit"&&(j=i.left>e&&i.right<g&&i.top>f&&i.bottom<h),j?(i.selected&&(i.$element.removeClass("ui-selected"),i.selected=!1),i.unselecting&&(i.$element.removeClass("ui-unselecting"),i.unselecting=!1),i.selecting||(i.$element.addClass("ui-selecting"),i.selecting=!0,c._trigger("selecting",b,{selecting:i.element}))):(i.selecting&&((b.metaKey||b.ctrlKey)&&i.startselected?(i.$element.removeClass("ui-selecting"),i.selecting=!1,i.$element.addClass("ui-selected"),i.selected=!0):(i.$element.removeClass("ui-selecting"),i.selecting=!1,i.startselected&&(i.$element.addClass("ui-unselecting"),i.unselecting=!0),c._trigger("unselecting",b,{unselecting:i.element}))),i.selected&&!b.metaKey&&!b.ctrlKey&&!i.startselected&&(i.$element.removeClass("ui-selected"),i.selected=!1,i.$element.addClass("ui-unselecting"),i.unselecting=!0,c._trigger("unselecting",b,{unselecting:i.element})))}),!1},_mouseStop:function(b){var c=this;this.dragged=!1;var d=this.options;return a(".ui-unselecting",this.element[0]).each(function(){var d=a.data(this,"selectable-item");d.$element.removeClass("ui-unselecting"),d.unselecting=!1,d.startselected=!1,c._trigger("unselected",b,{unselected:d.element})}),a(".ui-selecting",this.element[0]).each(function(){var d=a.data(this,"selectable-item");d.$element.removeClass("ui-selecting").addClass("ui-selected"),d.selecting=!1,d.selected=!0,d.startselected=!0,c._trigger("selected",b,{selected:d.element})}),this._trigger("stop",b),this.helper.remove(),!1}}),a.extend(a.ui.selectable,{version:"1.8.22"})})(jQuery);;/*! jQuery UI - v1.8.22 - 2012-07-24
* https://github.com/jquery/jquery-ui
* Includes: jquery.ui.sortable.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function(a,b){a.widget("ui.sortable",a.ui.mouse,{widgetEventPrefix:"sort",ready:!1,options:{appendTo:"parent",axis:!1,connectWith:!1,containment:!1,cursor:"auto",cursorAt:!1,dropOnEmpty:!0,forcePlaceholderSize:!1,forceHelperSize:!1,grid:!1,handle:!1,helper:"original",items:"> *",opacity:!1,placeholder:!1,revert:!1,scroll:!0,scrollSensitivity:20,scrollSpeed:20,scope:"default",tolerance:"intersect",zIndex:1e3},_create:function(){var a=this.options;this.containerCache={},this.element.addClass("ui-sortable"),this.refresh(),this.floating=this.items.length?a.axis==="x"||/left|right/.test(this.items[0].item.css("float"))||/inline|table-cell/.test(this.items[0].item.css("display")):!1,this.offset=this.element.offset(),this._mouseInit(),this.ready=!0},destroy:function(){a.Widget.prototype.destroy.call(this),this.element.removeClass("ui-sortable ui-sortable-disabled"),this._mouseDestroy();for(var b=this.items.length-1;b>=0;b--)this.items[b].item.removeData(this.widgetName+"-item");return this},_setOption:function(b,c){b==="disabled"?(this.options[b]=c,this.widget()[c?"addClass":"removeClass"]("ui-sortable-disabled")):a.Widget.prototype._setOption.apply(this,arguments)},_mouseCapture:function(b,c){var d=this;if(this.reverting)return!1;if(this.options.disabled||this.options.type=="static")return!1;this._refreshItems(b);var e=null,f=this,g=a(b.target).parents().each(function(){if(a.data(this,d.widgetName+"-item")==f)return e=a(this),!1});a.data(b.target,d.widgetName+"-item")==f&&(e=a(b.target));if(!e)return!1;if(this.options.handle&&!c){var h=!1;a(this.options.handle,e).find("*").andSelf().each(function(){this==b.target&&(h=!0)});if(!h)return!1}return this.currentItem=e,this._removeCurrentsFromItems(),!0},_mouseStart:function(b,c,d){var e=this.options,f=this;this.currentContainer=this,this.refreshPositions(),this.helper=this._createHelper(b),this._cacheHelperProportions(),this._cacheMargins(),this.scrollParent=this.helper.scrollParent(),this.offset=this.currentItem.offset(),this.offset={top:this.offset.top-this.margins.top,left:this.offset.left-this.margins.left},a.extend(this.offset,{click:{left:b.pageX-this.offset.left,top:b.pageY-this.offset.top},parent:this._getParentOffset(),relative:this._getRelativeOffset()}),this.helper.css("position","absolute"),this.cssPosition=this.helper.css("position"),this.originalPosition=this._generatePosition(b),this.originalPageX=b.pageX,this.originalPageY=b.pageY,e.cursorAt&&this._adjustOffsetFromHelper(e.cursorAt),this.domPosition={prev:this.currentItem.prev()[0],parent:this.currentItem.parent()[0]},this.helper[0]!=this.currentItem[0]&&this.currentItem.hide(),this._createPlaceholder(),e.containment&&this._setContainment(),e.cursor&&(a("body").css("cursor")&&(this._storedCursor=a("body").css("cursor")),a("body").css("cursor",e.cursor)),e.opacity&&(this.helper.css("opacity")&&(this._storedOpacity=this.helper.css("opacity")),this.helper.css("opacity",e.opacity)),e.zIndex&&(this.helper.css("zIndex")&&(this._storedZIndex=this.helper.css("zIndex")),this.helper.css("zIndex",e.zIndex)),this.scrollParent[0]!=document&&this.scrollParent[0].tagName!="HTML"&&(this.overflowOffset=this.scrollParent.offset()),this._trigger("start",b,this._uiHash()),this._preserveHelperProportions||this._cacheHelperProportions();if(!d)for(var g=this.containers.length-1;g>=0;g--)this.containers[g]._trigger("activate",b,f._uiHash(this));return a.ui.ddmanager&&(a.ui.ddmanager.current=this),a.ui.ddmanager&&!e.dropBehaviour&&a.ui.ddmanager.prepareOffsets(this,b),this.dragging=!0,this.helper.addClass("ui-sortable-helper"),this._mouseDrag(b),!0},_mouseDrag:function(b){this.position=this._generatePosition(b),this.positionAbs=this._convertPositionTo("absolute"),this.lastPositionAbs||(this.lastPositionAbs=this.positionAbs);if(this.options.scroll){var c=this.options,d=!1;this.scrollParent[0]!=document&&this.scrollParent[0].tagName!="HTML"?(this.overflowOffset.top+this.scrollParent[0].offsetHeight-b.pageY<c.scrollSensitivity?this.scrollParent[0].scrollTop=d=this.scrollParent[0].scrollTop+c.scrollSpeed:b.pageY-this.overflowOffset.top<c.scrollSensitivity&&(this.scrollParent[0].scrollTop=d=this.scrollParent[0].scrollTop-c.scrollSpeed),this.overflowOffset.left+this.scrollParent[0].offsetWidth-b.pageX<c.scrollSensitivity?this.scrollParent[0].scrollLeft=d=this.scrollParent[0].scrollLeft+c.scrollSpeed:b.pageX-this.overflowOffset.left<c.scrollSensitivity&&(this.scrollParent[0].scrollLeft=d=this.scrollParent[0].scrollLeft-c.scrollSpeed)):(b.pageY-a(document).scrollTop()<c.scrollSensitivity?d=a(document).scrollTop(a(document).scrollTop()-c.scrollSpeed):a(window).height()-(b.pageY-a(document).scrollTop())<c.scrollSensitivity&&(d=a(document).scrollTop(a(document).scrollTop()+c.scrollSpeed)),b.pageX-a(document).scrollLeft()<c.scrollSensitivity?d=a(document).scrollLeft(a(document).scrollLeft()-c.scrollSpeed):a(window).width()-(b.pageX-a(document).scrollLeft())<c.scrollSensitivity&&(d=a(document).scrollLeft(a(document).scrollLeft()+c.scrollSpeed))),d!==!1&&a.ui.ddmanager&&!c.dropBehaviour&&a.ui.ddmanager.prepareOffsets(this,b)}this.positionAbs=this._convertPositionTo("absolute");if(!this.options.axis||this.options.axis!="y")this.helper[0].style.left=this.position.left+"px";if(!this.options.axis||this.options.axis!="x")this.helper[0].style.top=this.position.top+"px";for(var e=this.items.length-1;e>=0;e--){var f=this.items[e],g=f.item[0],h=this._intersectsWithPointer(f);if(!h)continue;if(g!=this.currentItem[0]&&this.placeholder[h==1?"next":"prev"]()[0]!=g&&!a.ui.contains(this.placeholder[0],g)&&(this.options.type=="semi-dynamic"?!a.ui.contains(this.element[0],g):!0)){this.direction=h==1?"down":"up";if(this.options.tolerance=="pointer"||this._intersectsWithSides(f))this._rearrange(b,f);else break;this._trigger("change",b,this._uiHash());break}}return this._contactContainers(b),a.ui.ddmanager&&a.ui.ddmanager.drag(this,b),this._trigger("sort",b,this._uiHash()),this.lastPositionAbs=this.positionAbs,!1},_mouseStop:function(b,c){if(!b)return;a.ui.ddmanager&&!this.options.dropBehaviour&&a.ui.ddmanager.drop(this,b);if(this.options.revert){var d=this,e=d.placeholder.offset();d.reverting=!0,a(this.helper).animate({left:e.left-this.offset.parent.left-d.margins.left+(this.offsetParent[0]==document.body?0:this.offsetParent[0].scrollLeft),top:e.top-this.offset.parent.top-d.margins.top+(this.offsetParent[0]==document.body?0:this.offsetParent[0].scrollTop)},parseInt(this.options.revert,10)||500,function(){d._clear(b)})}else this._clear(b,c);return!1},cancel:function(){var b=this;if(this.dragging){this._mouseUp({target:null}),this.options.helper=="original"?this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper"):this.currentItem.show();for(var c=this.containers.length-1;c>=0;c--)this.containers[c]._trigger("deactivate",null,b._uiHash(this)),this.containers[c].containerCache.over&&(this.containers[c]._trigger("out",null,b._uiHash(this)),this.containers[c].containerCache.over=0)}return this.placeholder&&(this.placeholder[0].parentNode&&this.placeholder[0].parentNode.removeChild(this.placeholder[0]),this.options.helper!="original"&&this.helper&&this.helper[0].parentNode&&this.helper.remove(),a.extend(this,{helper:null,dragging:!1,reverting:!1,_noFinalSort:null}),this.domPosition.prev?a(this.domPosition.prev).after(this.currentItem):a(this.domPosition.parent).prepend(this.currentItem)),this},serialize:function(b){var c=this._getItemsAsjQuery(b&&b.connected),d=[];return b=b||{},a(c).each(function(){var c=(a(b.item||this).attr(b.attribute||"id")||"").match(b.expression||/(.+)[-=_](.+)/);c&&d.push((b.key||c[1]+"[]")+"="+(b.key&&b.expression?c[1]:c[2]))}),!d.length&&b.key&&d.push(b.key+"="),d.join("&")},toArray:function(b){var c=this._getItemsAsjQuery(b&&b.connected),d=[];return b=b||{},c.each(function(){d.push(a(b.item||this).attr(b.attribute||"id")||"")}),d},_intersectsWith:function(a){var b=this.positionAbs.left,c=b+this.helperProportions.width,d=this.positionAbs.top,e=d+this.helperProportions.height,f=a.left,g=f+a.width,h=a.top,i=h+a.height,j=this.offset.click.top,k=this.offset.click.left,l=d+j>h&&d+j<i&&b+k>f&&b+k<g;return this.options.tolerance=="pointer"||this.options.forcePointerForContainers||this.options.tolerance!="pointer"&&this.helperProportions[this.floating?"width":"height"]>a[this.floating?"width":"height"]?l:f<b+this.helperProportions.width/2&&c-this.helperProportions.width/2<g&&h<d+this.helperProportions.height/2&&e-this.helperProportions.height/2<i},_intersectsWithPointer:function(b){var c=this.options.axis==="x"||a.ui.isOverAxis(this.positionAbs.top+this.offset.click.top,b.top,b.height),d=this.options.axis==="y"||a.ui.isOverAxis(this.positionAbs.left+this.offset.click.left,b.left,b.width),e=c&&d,f=this._getDragVerticalDirection(),g=this._getDragHorizontalDirection();return e?this.floating?g&&g=="right"||f=="down"?2:1:f&&(f=="down"?2:1):!1},_intersectsWithSides:function(b){var c=a.ui.isOverAxis(this.positionAbs.top+this.offset.click.top,b.top+b.height/2,b.height),d=a.ui.isOverAxis(this.positionAbs.left+this.offset.click.left,b.left+b.width/2,b.width),e=this._getDragVerticalDirection(),f=this._getDragHorizontalDirection();return this.floating&&f?f=="right"&&d||f=="left"&&!d:e&&(e=="down"&&c||e=="up"&&!c)},_getDragVerticalDirection:function(){var a=this.positionAbs.top-this.lastPositionAbs.top;return a!=0&&(a>0?"down":"up")},_getDragHorizontalDirection:function(){var a=this.positionAbs.left-this.lastPositionAbs.left;return a!=0&&(a>0?"right":"left")},refresh:function(a){return this._refreshItems(a),this.refreshPositions(),this},_connectWith:function(){var a=this.options;return a.connectWith.constructor==String?[a.connectWith]:a.connectWith},_getItemsAsjQuery:function(b){var c=this,d=[],e=[],f=this._connectWith();if(f&&b)for(var g=f.length-1;g>=0;g--){var h=a(f[g]);for(var i=h.length-1;i>=0;i--){var j=a.data(h[i],this.widgetName);j&&j!=this&&!j.options.disabled&&e.push([a.isFunction(j.options.items)?j.options.items.call(j.element):a(j.options.items,j.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"),j])}}e.push([a.isFunction(this.options.items)?this.options.items.call(this.element,null,{options:this.options,item:this.currentItem}):a(this.options.items,this.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"),this]);for(var g=e.length-1;g>=0;g--)e[g][0].each(function(){d.push(this)});return a(d)},_removeCurrentsFromItems:function(){var a=this.currentItem.find(":data("+this.widgetName+"-item)");for(var b=0;b<this.items.length;b++)for(var c=0;c<a.length;c++)a[c]==this.items[b].item[0]&&this.items.splice(b,1)},_refreshItems:function(b){this.items=[],this.containers=[this];var c=this.items,d=this,e=[[a.isFunction(this.options.items)?this.options.items.call(this.element[0],b,{item:this.currentItem}):a(this.options.items,this.element),this]],f=this._connectWith();if(f&&this.ready)for(var g=f.length-1;g>=0;g--){var h=a(f[g]);for(var i=h.length-1;i>=0;i--){var j=a.data(h[i],this.widgetName);j&&j!=this&&!j.options.disabled&&(e.push([a.isFunction(j.options.items)?j.options.items.call(j.element[0],b,{item:this.currentItem}):a(j.options.items,j.element),j]),this.containers.push(j))}}for(var g=e.length-1;g>=0;g--){var k=e[g][1],l=e[g][0];for(var i=0,m=l.length;i<m;i++){var n=a(l[i]);n.data(this.widgetName+"-item",k),c.push({item:n,instance:k,width:0,height:0,left:0,top:0})}}},refreshPositions:function(b){this.offsetParent&&this.helper&&(this.offset.parent=this._getParentOffset());for(var c=this.items.length-1;c>=0;c--){var d=this.items[c];if(d.instance!=this.currentContainer&&this.currentContainer&&d.item[0]!=this.currentItem[0])continue;var e=this.options.toleranceElement?a(this.options.toleranceElement,d.item):d.item;b||(d.width=e.outerWidth(),d.height=e.outerHeight());var f=e.offset();d.left=f.left,d.top=f.top}if(this.options.custom&&this.options.custom.refreshContainers)this.options.custom.refreshContainers.call(this);else for(var c=this.containers.length-1;c>=0;c--){var f=this.containers[c].element.offset();this.containers[c].containerCache.left=f.left,this.containers[c].containerCache.top=f.top,this.containers[c].containerCache.width=this.containers[c].element.outerWidth(),this.containers[c].containerCache.height=this.containers[c].element.outerHeight()}return this},_createPlaceholder:function(b){var c=b||this,d=c.options;if(!d.placeholder||d.placeholder.constructor==String){var e=d.placeholder;d.placeholder={element:function(){var b=a(document.createElement(c.currentItem[0].nodeName)).addClass(e||c.currentItem[0].className+" ui-sortable-placeholder").removeClass("ui-sortable-helper")[0];return e||(b.style.visibility="hidden"),b},update:function(a,b){if(e&&!d.forcePlaceholderSize)return;b.height()||b.height(c.currentItem.innerHeight()-parseInt(c.currentItem.css("paddingTop")||0,10)-parseInt(c.currentItem.css("paddingBottom")||0,10)),b.width()||b.width(c.currentItem.innerWidth()-parseInt(c.currentItem.css("paddingLeft")||0,10)-parseInt(c.currentItem.css("paddingRight")||0,10))}}}c.placeholder=a(d.placeholder.element.call(c.element,c.currentItem)),c.currentItem.after(c.placeholder),d.placeholder.update(c,c.placeholder)},_contactContainers:function(b){var c=null,d=null;for(var e=this.containers.length-1;e>=0;e--){if(a.ui.contains(this.currentItem[0],this.containers[e].element[0]))continue;if(this._intersectsWith(this.containers[e].containerCache)){if(c&&a.ui.contains(this.containers[e].element[0],c.element[0]))continue;c=this.containers[e],d=e}else this.containers[e].containerCache.over&&(this.containers[e]._trigger("out",b,this._uiHash(this)),this.containers[e].containerCache.over=0)}if(!c)return;if(this.containers.length===1)this.containers[d]._trigger("over",b,this._uiHash(this)),this.containers[d].containerCache.over=1;else if(this.currentContainer!=this.containers[d]){var f=1e4,g=null,h=this.positionAbs[this.containers[d].floating?"left":"top"];for(var i=this.items.length-1;i>=0;i--){if(!a.ui.contains(this.containers[d].element[0],this.items[i].item[0]))continue;var j=this.containers[d].floating?this.items[i].item.offset().left:this.items[i].item.offset().top;Math.abs(j-h)<f&&(f=Math.abs(j-h),g=this.items[i],this.direction=j-h>0?"down":"up")}if(!g&&!this.options.dropOnEmpty)return;this.currentContainer=this.containers[d],g?this._rearrange(b,g,null,!0):this._rearrange(b,null,this.containers[d].element,!0),this._trigger("change",b,this._uiHash()),this.containers[d]._trigger("change",b,this._uiHash(this)),this.options.placeholder.update(this.currentContainer,this.placeholder),this.containers[d]._trigger("over",b,this._uiHash(this)),this.containers[d].containerCache.over=1}},_createHelper:function(b){var c=this.options,d=a.isFunction(c.helper)?a(c.helper.apply(this.element[0],[b,this.currentItem])):c.helper=="clone"?this.currentItem.clone():this.currentItem;return d.parents("body").length||a(c.appendTo!="parent"?c.appendTo:this.currentItem[0].parentNode)[0].appendChild(d[0]),d[0]==this.currentItem[0]&&(this._storedCSS={width:this.currentItem[0].style.width,height:this.currentItem[0].style.height,position:this.currentItem.css("position"),top:this.currentItem.css("top"),left:this.currentItem.css("left")}),(d[0].style.width==""||c.forceHelperSize)&&d.width(this.currentItem.width()),(d[0].style.height==""||c.forceHelperSize)&&d.height(this.currentItem.height()),d},_adjustOffsetFromHelper:function(b){typeof b=="string"&&(b=b.split(" ")),a.isArray(b)&&(b={left:+b[0],top:+b[1]||0}),"left"in b&&(this.offset.click.left=b.left+this.margins.left),"right"in b&&(this.offset.click.left=this.helperProportions.width-b.right+this.margins.left),"top"in b&&(this.offset.click.top=b.top+this.margins.top),"bottom"in b&&(this.offset.click.top=this.helperProportions.height-b.bottom+this.margins.top)},_getParentOffset:function(){this.offsetParent=this.helper.offsetParent();var b=this.offsetParent.offset();this.cssPosition=="absolute"&&this.scrollParent[0]!=document&&a.ui.contains(this.scrollParent[0],this.offsetParent[0])&&(b.left+=this.scrollParent.scrollLeft(),b.top+=this.scrollParent.scrollTop());if(this.offsetParent[0]==document.body||this.offsetParent[0].tagName&&this.offsetParent[0].tagName.toLowerCase()=="html"&&a.browser.msie)b={top:0,left:0};return{top:b.top+(parseInt(this.offsetParent.css("borderTopWidth"),10)||0),left:b.left+(parseInt(this.offsetParent.css("borderLeftWidth"),10)||0)}},_getRelativeOffset:function(){if(this.cssPosition=="relative"){var a=this.currentItem.position();return{top:a.top-(parseInt(this.helper.css("top"),10)||0)+this.scrollParent.scrollTop(),left:a.left-(parseInt(this.helper.css("left"),10)||0)+this.scrollParent.scrollLeft()}}return{top:0,left:0}},_cacheMargins:function(){this.margins={left:parseInt(this.currentItem.css("marginLeft"),10)||0,top:parseInt(this.currentItem.css("marginTop"),10)||0}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var b=this.options;b.containment=="parent"&&(b.containment=this.helper[0].parentNode);if(b.containment=="document"||b.containment=="window")this.containment=[0-this.offset.relative.left-this.offset.parent.left,0-this.offset.relative.top-this.offset.parent.top,a(b.containment=="document"?document:window).width()-this.helperProportions.width-this.margins.left,(a(b.containment=="document"?document:window).height()||document.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top];if(!/^(document|window|parent)$/.test(b.containment)){var c=a(b.containment)[0],d=a(b.containment).offset(),e=a(c).css("overflow")!="hidden";this.containment=[d.left+(parseInt(a(c).css("borderLeftWidth"),10)||0)+(parseInt(a(c).css("paddingLeft"),10)||0)-this.margins.left,d.top+(parseInt(a(c).css("borderTopWidth"),10)||0)+(parseInt(a(c).css("paddingTop"),10)||0)-this.margins.top,d.left+(e?Math.max(c.scrollWidth,c.offsetWidth):c.offsetWidth)-(parseInt(a(c).css("borderLeftWidth"),10)||0)-(parseInt(a(c).css("paddingRight"),10)||0)-this.helperProportions.width-this.margins.left,d.top+(e?Math.max(c.scrollHeight,c.offsetHeight):c.offsetHeight)-(parseInt(a(c).css("borderTopWidth"),10)||0)-(parseInt(a(c).css("paddingBottom"),10)||0)-this.helperProportions.height-this.margins.top]}},_convertPositionTo:function(b,c){c||(c=this.position);var d=b=="absolute"?1:-1,e=this.options,f=this.cssPosition=="absolute"&&(this.scrollParent[0]==document||!a.ui.contains(this.scrollParent[0],this.offsetParent[0]))?this.offsetParent:this.scrollParent,g=/(html|body)/i.test(f[0].tagName);return{top:c.top+this.offset.relative.top*d+this.offset.parent.top*d-(a.browser.safari&&this.cssPosition=="fixed"?0:(this.cssPosition=="fixed"?-this.scrollParent.scrollTop():g?0:f.scrollTop())*d),left:c.left+this.offset.relative.left*d+this.offset.parent.left*d-(a.browser.safari&&this.cssPosition=="fixed"?0:(this.cssPosition=="fixed"?-this.scrollParent.scrollLeft():g?0:f.scrollLeft())*d)}},_generatePosition:function(b){var c=this.options,d=this.cssPosition=="absolute"&&(this.scrollParent[0]==document||!a.ui.contains(this.scrollParent[0],this.offsetParent[0]))?this.offsetParent:this.scrollParent,e=/(html|body)/i.test(d[0].tagName);this.cssPosition=="relative"&&(this.scrollParent[0]==document||this.scrollParent[0]==this.offsetParent[0])&&(this.offset.relative=this._getRelativeOffset());var f=b.pageX,g=b.pageY;if(this.originalPosition){this.containment&&(b.pageX-this.offset.click.left<this.containment[0]&&(f=this.containment[0]+this.offset.click.left),b.pageY-this.offset.click.top<this.containment[1]&&(g=this.containment[1]+this.offset.click.top),b.pageX-this.offset.click.left>this.containment[2]&&(f=this.containment[2]+this.offset.click.left),b.pageY-this.offset.click.top>this.containment[3]&&(g=this.containment[3]+this.offset.click.top));if(c.grid){var h=this.originalPageY+Math.round((g-this.originalPageY)/c.grid[1])*c.grid[1];g=this.containment?h-this.offset.click.top<this.containment[1]||h-this.offset.click.top>this.containment[3]?h-this.offset.click.top<this.containment[1]?h+c.grid[1]:h-c.grid[1]:h:h;var i=this.originalPageX+Math.round((f-this.originalPageX)/c.grid[0])*c.grid[0];f=this.containment?i-this.offset.click.left<this.containment[0]||i-this.offset.click.left>this.containment[2]?i-this.offset.click.left<this.containment[0]?i+c.grid[0]:i-c.grid[0]:i:i}}return{top:g-this.offset.click.top-this.offset.relative.top-this.offset.parent.top+(a.browser.safari&&this.cssPosition=="fixed"?0:this.cssPosition=="fixed"?-this.scrollParent.scrollTop():e?0:d.scrollTop()),left:f-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+(a.browser.safari&&this.cssPosition=="fixed"?0:this.cssPosition=="fixed"?-this.scrollParent.scrollLeft():e?0:d.scrollLeft())}},_rearrange:function(a,b,c,d){c?c[0].appendChild(this.placeholder[0]):b.item[0].parentNode.insertBefore(this.placeholder[0],this.direction=="down"?b.item[0]:b.item[0].nextSibling),this.counter=this.counter?++this.counter:1;var e=this,f=this.counter;window.setTimeout(function(){f==e.counter&&e.refreshPositions(!d)},0)},_clear:function(b,c){this.reverting=!1;var d=[],e=this;!this._noFinalSort&&this.currentItem.parent().length&&this.placeholder.before(this.currentItem),this._noFinalSort=null;if(this.helper[0]==this.currentItem[0]){for(var f in this._storedCSS)if(this._storedCSS[f]=="auto"||this._storedCSS[f]=="static")this._storedCSS[f]="";this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper")}else this.currentItem.show();this.fromOutside&&!c&&d.push(function(a){this._trigger("receive",a,this._uiHash(this.fromOutside))}),(this.fromOutside||this.domPosition.prev!=this.currentItem.prev().not(".ui-sortable-helper")[0]||this.domPosition.parent!=this.currentItem.parent()[0])&&!c&&d.push(function(a){this._trigger("update",a,this._uiHash())});if(!a.ui.contains(this.element[0],this.currentItem[0])){c||d.push(function(a){this._trigger("remove",a,this._uiHash())});for(var f=this.containers.length-1;f>=0;f--)a.ui.contains(this.containers[f].element[0],this.currentItem[0])&&!c&&(d.push(function(a){return function(b){a._trigger("receive",b,this._uiHash(this))}}.call(this,this.containers[f])),d.push(function(a){return function(b){a._trigger("update",b,this._uiHash(this))}}.call(this,this.containers[f])))}for(var f=this.containers.length-1;f>=0;f--)c||d.push(function(a){return function(b){a._trigger("deactivate",b,this._uiHash(this))}}.call(this,this.containers[f])),this.containers[f].containerCache.over&&(d.push(function(a){return function(b){a._trigger("out",b,this._uiHash(this))}}.call(this,this.containers[f])),this.containers[f].containerCache.over=0);this._storedCursor&&a("body").css("cursor",this._storedCursor),this._storedOpacity&&this.helper.css("opacity",this._storedOpacity),this._storedZIndex&&this.helper.css("zIndex",this._storedZIndex=="auto"?"":this._storedZIndex),this.dragging=!1;if(this.cancelHelperRemoval){if(!c){this._trigger("beforeStop",b,this._uiHash());for(var f=0;f<d.length;f++)d[f].call(this,b);this._trigger("stop",b,this._uiHash())}return this.fromOutside=!1,!1}c||this._trigger("beforeStop",b,this._uiHash()),this.placeholder[0].parentNode.removeChild(this.placeholder[0]),this.helper[0]!=this.currentItem[0]&&this.helper.remove(),this.helper=null;if(!c){for(var f=0;f<d.length;f++)d[f].call(this,b);this._trigger("stop",b,this._uiHash())}return this.fromOutside=!1,!0},_trigger:function(){a.Widget.prototype._trigger.apply(this,arguments)===!1&&this.cancel()},_uiHash:function(b){var c=b||this;return{helper:c.helper,placeholder:c.placeholder||a([]),position:c.position,originalPosition:c.originalPosition,offset:c.positionAbs,item:c.currentItem,sender:b?b.element:null}}}),a.extend(a.ui.sortable,{version:"1.8.22"})})(jQuery);;/*! jQuery UI - v1.8.22 - 2012-07-24
* https://github.com/jquery/jquery-ui
* Includes: jquery.ui.autocomplete.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function(a,b){var c=0;a.widget("ui.autocomplete",{options:{appendTo:"body",autoFocus:!1,delay:300,minLength:1,position:{my:"left top",at:"left bottom",collision:"none"},source:null},pending:0,_create:function(){var b=this,c=this.element[0].ownerDocument,d;this.isMultiLine=this.element.is("textarea"),this.element.addClass("ui-autocomplete-input").attr("autocomplete","off").attr({role:"textbox","aria-autocomplete":"list","aria-haspopup":"true"}).bind("keydown.autocomplete",function(c){if(b.options.disabled||b.element.propAttr("readOnly"))return;d=!1;var e=a.ui.keyCode;switch(c.keyCode){case e.PAGE_UP:b._move("previousPage",c);break;case e.PAGE_DOWN:b._move("nextPage",c);break;case e.UP:b._keyEvent("previous",c);break;case e.DOWN:b._keyEvent("next",c);break;case e.ENTER:case e.NUMPAD_ENTER:b.menu.active&&(d=!0,c.preventDefault());case e.TAB:if(!b.menu.active)return;b.menu.select(c);break;case e.ESCAPE:b.element.val(b.term),b.close(c);break;default:clearTimeout(b.searching),b.searching=setTimeout(function(){b.term!=b.element.val()&&(b.selectedItem=null,b.search(null,c))},b.options.delay)}}).bind("keypress.autocomplete",function(a){d&&(d=!1,a.preventDefault())}).bind("focus.autocomplete",function(){if(b.options.disabled)return;b.selectedItem=null,b.previous=b.element.val()}).bind("blur.autocomplete",function(a){if(b.options.disabled)return;clearTimeout(b.searching),b.closing=setTimeout(function(){b.close(a),b._change(a)},150)}),this._initSource(),this.menu=a("<ul></ul>").addClass("ui-autocomplete").appendTo(a(this.options.appendTo||"body",c)[0]).mousedown(function(c){var d=b.menu.element[0];a(c.target).closest(".ui-menu-item").length||setTimeout(function(){a(document).one("mousedown",function(c){c.target!==b.element[0]&&c.target!==d&&!a.ui.contains(d,c.target)&&b.close()})},1),setTimeout(function(){clearTimeout(b.closing)},13)}).menu({focus:function(a,c){var d=c.item.data("item.autocomplete");!1!==b._trigger("focus",a,{item:d})&&/^key/.test(a.originalEvent.type)&&b.element.val(d.value)},selected:function(a,d){var e=d.item.data("item.autocomplete"),f=b.previous;b.element[0]!==c.activeElement&&(b.element.focus(),b.previous=f,setTimeout(function(){b.previous=f,b.selectedItem=e},1)),!1!==b._trigger("select",a,{item:e})&&b.element.val(e.value),b.term=b.element.val(),b.close(a),b.selectedItem=e},blur:function(a,c){b.menu.element.is(":visible")&&b.element.val()!==b.term&&b.element.val(b.term)}}).zIndex(this.element.zIndex()+1).css({top:0,left:0}).hide().data("menu"),a.fn.bgiframe&&this.menu.element.bgiframe(),b.beforeunloadHandler=function(){b.element.removeAttr("autocomplete")},a(window).bind("beforeunload",b.beforeunloadHandler)},destroy:function(){this.element.removeClass("ui-autocomplete-input").removeAttr("autocomplete").removeAttr("role").removeAttr("aria-autocomplete").removeAttr("aria-haspopup"),this.menu.element.remove(),a(window).unbind("beforeunload",this.beforeunloadHandler),a.Widget.prototype.destroy.call(this)},_setOption:function(b,c){a.Widget.prototype._setOption.apply(this,arguments),b==="source"&&this._initSource(),b==="appendTo"&&this.menu.element.appendTo(a(c||"body",this.element[0].ownerDocument)[0]),b==="disabled"&&c&&this.xhr&&this.xhr.abort()},_initSource:function(){var b=this,c,d;a.isArray(this.options.source)?(c=this.options.source,this.source=function(b,d){d(a.ui.autocomplete.filter(c,b.term))}):typeof this.options.source=="string"?(d=this.options.source,this.source=function(c,e){b.xhr&&b.xhr.abort(),b.xhr=a.ajax({url:d,data:c,dataType:"json",success:function(a,b){e(a)},error:function(){e([])}})}):this.source=this.options.source},search:function(a,b){a=a!=null?a:this.element.val(),this.term=this.element.val();if(a.length<this.options.minLength)return this.close(b);clearTimeout(this.closing);if(this._trigger("search",b)===!1)return;return this._search(a)},_search:function(a){this.pending++,this.element.addClass("ui-autocomplete-loading"),this.source({term:a},this._response())},_response:function(){var a=this,b=++c;return function(d){b===c&&a.__response(d),a.pending--,a.pending||a.element.removeClass("ui-autocomplete-loading")}},__response:function(a){!this.options.disabled&&a&&a.length?(a=this._normalize(a),this._suggest(a),this._trigger("open")):this.close()},close:function(a){clearTimeout(this.closing),this.menu.element.is(":visible")&&(this.menu.element.hide(),this.menu.deactivate(),this._trigger("close",a))},_change:function(a){this.previous!==this.element.val()&&this._trigger("change",a,{item:this.selectedItem})},_normalize:function(b){return b.length&&b[0].label&&b[0].value?b:a.map(b,function(b){return typeof b=="string"?{label:b,value:b}:a.extend({label:b.label||b.value,value:b.value||b.label},b)})},_suggest:function(b){var c=this.menu.element.empty().zIndex(this.element.zIndex()+1);this._renderMenu(c,b),this.menu.deactivate(),this.menu.refresh(),c.show(),this._resizeMenu(),c.position(a.extend({of:this.element},this.options.position)),this.options.autoFocus&&this.menu.next(new a.Event("mouseover"))},_resizeMenu:function(){var a=this.menu.element;a.outerWidth(Math.max(a.width("").outerWidth()+1,this.element.outerWidth()))},_renderMenu:function(b,c){var d=this;a.each(c,function(a,c){d._renderItem(b,c)})},_renderItem:function(b,c){return a("<li></li>").data("item.autocomplete",c).append(a("<a></a>").text(c.label)).appendTo(b)},_move:function(a,b){if(!this.menu.element.is(":visible")){this.search(null,b);return}if(this.menu.first()&&/^previous/.test(a)||this.menu.last()&&/^next/.test(a)){this.element.val(this.term),this.menu.deactivate();return}this.menu[a](b)},widget:function(){return this.menu.element},_keyEvent:function(a,b){if(!this.isMultiLine||this.menu.element.is(":visible"))this._move(a,b),b.preventDefault()}}),a.extend(a.ui.autocomplete,{escapeRegex:function(a){return a.replace(/[-[\]{}()*+?.,\\^$|#\s]/g,"\\$&")},filter:function(b,c){var d=new RegExp(a.ui.autocomplete.escapeRegex(c),"i");return a.grep(b,function(a){return d.test(a.label||a.value||a)})}})})(jQuery),function(a){a.widget("ui.menu",{_create:function(){var b=this;this.element.addClass("ui-menu ui-widget ui-widget-content ui-corner-all").attr({role:"listbox","aria-activedescendant":"ui-active-menuitem"}).click(function(c){if(!a(c.target).closest(".ui-menu-item a").length)return;c.preventDefault(),b.select(c)}),this.refresh()},refresh:function(){var b=this,c=this.element.children("li:not(.ui-menu-item):has(a)").addClass("ui-menu-item").attr("role","menuitem");c.children("a").addClass("ui-corner-all").attr("tabindex",-1).mouseenter(function(c){b.activate(c,a(this).parent())}).mouseleave(function(){b.deactivate()})},activate:function(a,b){this.deactivate();if(this.hasScroll()){var c=b.offset().top-this.element.offset().top,d=this.element.scrollTop(),e=this.element.height();c<0?this.element.scrollTop(d+c):c>=e&&this.element.scrollTop(d+c-e+b.height())}this.active=b.eq(0).children("a").addClass("ui-state-hover").attr("id","ui-active-menuitem").end(),this._trigger("focus",a,{item:b})},deactivate:function(){if(!this.active)return;this.active.children("a").removeClass("ui-state-hover").removeAttr("id"),this._trigger("blur"),this.active=null},next:function(a){this.move("next",".ui-menu-item:first",a)},previous:function(a){this.move("prev",".ui-menu-item:last",a)},first:function(){return this.active&&!this.active.prevAll(".ui-menu-item").length},last:function(){return this.active&&!this.active.nextAll(".ui-menu-item").length},move:function(a,b,c){if(!this.active){this.activate(c,this.element.children(b));return}var d=this.active[a+"All"](".ui-menu-item").eq(0);d.length?this.activate(c,d):this.activate(c,this.element.children(b))},nextPage:function(b){if(this.hasScroll()){if(!this.active||this.last()){this.activate(b,this.element.children(".ui-menu-item:first"));return}var c=this.active.offset().top,d=this.element.height(),e=this.element.children(".ui-menu-item").filter(function(){var b=a(this).offset().top-c-d+a(this).height();return b<10&&b>-10});e.length||(e=this.element.children(".ui-menu-item:last")),this.activate(b,e)}else this.activate(b,this.element.children(".ui-menu-item").filter(!this.active||this.last()?":first":":last"))},previousPage:function(b){if(this.hasScroll()){if(!this.active||this.first()){this.activate(b,this.element.children(".ui-menu-item:last"));return}var c=this.active.offset().top,d=this.element.height(),e=this.element.children(".ui-menu-item").filter(function(){var b=a(this).offset().top-c+d-a(this).height();return b<10&&b>-10});e.length||(e=this.element.children(".ui-menu-item:first")),this.activate(b,e)}else this.activate(b,this.element.children(".ui-menu-item").filter(!this.active||this.first()?":last":":first"))},hasScroll:function(){return this.element.height()<this.element[a.fn.prop?"prop":"attr"]("scrollHeight")},select:function(a){this._trigger("selected",a,{item:this.active})}})}(jQuery);;/*! jQuery UI - v1.8.22 - 2012-07-24
* https://github.com/jquery/jquery-ui
* Includes: jquery.ui.button.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function(a,b){var c,d,e,f,g="ui-button ui-widget ui-state-default ui-corner-all",h="ui-state-hover ui-state-active ",i="ui-button-icons-only ui-button-icon-only ui-button-text-icons ui-button-text-icon-primary ui-button-text-icon-secondary ui-button-text-only",j=function(){var b=a(this).find(":ui-button");setTimeout(function(){b.button("refresh")},1)},k=function(b){var c=b.name,d=b.form,e=a([]);return c&&(d?e=a(d).find("[name='"+c+"']"):e=a("[name='"+c+"']",b.ownerDocument).filter(function(){return!this.form})),e};a.widget("ui.button",{options:{disabled:null,text:!0,label:null,icons:{primary:null,secondary:null}},_create:function(){this.element.closest("form").unbind("reset.button").bind("reset.button",j),typeof this.options.disabled!="boolean"?this.options.disabled=!!this.element.propAttr("disabled"):this.element.propAttr("disabled",this.options.disabled),this._determineButtonType(),this.hasTitle=!!this.buttonElement.attr("title");var b=this,h=this.options,i=this.type==="checkbox"||this.type==="radio",l="ui-state-hover"+(i?"":" ui-state-active"),m="ui-state-focus";h.label===null&&(h.label=this.buttonElement.html()),this.buttonElement.addClass(g).attr("role","button").bind("mouseenter.button",function(){if(h.disabled)return;a(this).addClass("ui-state-hover"),this===c&&a(this).addClass("ui-state-active")}).bind("mouseleave.button",function(){if(h.disabled)return;a(this).removeClass(l)}).bind("click.button",function(a){h.disabled&&(a.preventDefault(),a.stopImmediatePropagation())}),this.element.bind("focus.button",function(){b.buttonElement.addClass(m)}).bind("blur.button",function(){b.buttonElement.removeClass(m)}),i&&(this.element.bind("change.button",function(){if(f)return;b.refresh()}),this.buttonElement.bind("mousedown.button",function(a){if(h.disabled)return;f=!1,d=a.pageX,e=a.pageY}).bind("mouseup.button",function(a){if(h.disabled)return;if(d!==a.pageX||e!==a.pageY)f=!0})),this.type==="checkbox"?this.buttonElement.bind("click.button",function(){if(h.disabled||f)return!1;a(this).toggleClass("ui-state-active"),b.buttonElement.attr("aria-pressed",b.element[0].checked)}):this.type==="radio"?this.buttonElement.bind("click.button",function(){if(h.disabled||f)return!1;a(this).addClass("ui-state-active"),b.buttonElement.attr("aria-pressed","true");var c=b.element[0];k(c).not(c).map(function(){return a(this).button("widget")[0]}).removeClass("ui-state-active").attr("aria-pressed","false")}):(this.buttonElement.bind("mousedown.button",function(){if(h.disabled)return!1;a(this).addClass("ui-state-active"),c=this,a(document).one("mouseup",function(){c=null})}).bind("mouseup.button",function(){if(h.disabled)return!1;a(this).removeClass("ui-state-active")}).bind("keydown.button",function(b){if(h.disabled)return!1;(b.keyCode==a.ui.keyCode.SPACE||b.keyCode==a.ui.keyCode.ENTER)&&a(this).addClass("ui-state-active")}).bind("keyup.button",function(){a(this).removeClass("ui-state-active")}),this.buttonElement.is("a")&&this.buttonElement.keyup(function(b){b.keyCode===a.ui.keyCode.SPACE&&a(this).click()})),this._setOption("disabled",h.disabled),this._resetButton()},_determineButtonType:function(){this.element.is(":checkbox")?this.type="checkbox":this.element.is(":radio")?this.type="radio":this.element.is("input")?this.type="input":this.type="button";if(this.type==="checkbox"||this.type==="radio"){var a=this.element.parents().filter(":last"),b="label[for='"+this.element.attr("id")+"']";this.buttonElement=a.find(b),this.buttonElement.length||(a=a.length?a.siblings():this.element.siblings(),this.buttonElement=a.filter(b),this.buttonElement.length||(this.buttonElement=a.find(b))),this.element.addClass("ui-helper-hidden-accessible");var c=this.element.is(":checked");c&&this.buttonElement.addClass("ui-state-active"),this.buttonElement.attr("aria-pressed",c)}else this.buttonElement=this.element},widget:function(){return this.buttonElement},destroy:function(){this.element.removeClass("ui-helper-hidden-accessible"),this.buttonElement.removeClass(g+" "+h+" "+i).removeAttr("role").removeAttr("aria-pressed").html(this.buttonElement.find(".ui-button-text").html()),this.hasTitle||this.buttonElement.removeAttr("title"),a.Widget.prototype.destroy.call(this)},_setOption:function(b,c){a.Widget.prototype._setOption.apply(this,arguments);if(b==="disabled"){c?this.element.propAttr("disabled",!0):this.element.propAttr("disabled",!1);return}this._resetButton()},refresh:function(){var b=this.element.is(":disabled");b!==this.options.disabled&&this._setOption("disabled",b),this.type==="radio"?k(this.element[0]).each(function(){a(this).is(":checked")?a(this).button("widget").addClass("ui-state-active").attr("aria-pressed","true"):a(this).button("widget").removeClass("ui-state-active").attr("aria-pressed","false")}):this.type==="checkbox"&&(this.element.is(":checked")?this.buttonElement.addClass("ui-state-active").attr("aria-pressed","true"):this.buttonElement.removeClass("ui-state-active").attr("aria-pressed","false"))},_resetButton:function(){if(this.type==="input"){this.options.label&&this.element.val(this.options.label);return}var b=this.buttonElement.removeClass(i),c=a("<span></span>",this.element[0].ownerDocument).addClass("ui-button-text").html(this.options.label).appendTo(b.empty()).text(),d=this.options.icons,e=d.primary&&d.secondary,f=[];d.primary||d.secondary?(this.options.text&&f.push("ui-button-text-icon"+(e?"s":d.primary?"-primary":"-secondary")),d.primary&&b.prepend("<span class='ui-button-icon-primary ui-icon "+d.primary+"'></span>"),d.secondary&&b.append("<span class='ui-button-icon-secondary ui-icon "+d.secondary+"'></span>"),this.options.text||(f.push(e?"ui-button-icons-only":"ui-button-icon-only"),this.hasTitle||b.attr("title",c))):f.push("ui-button-text-only"),b.addClass(f.join(" "))}}),a.widget("ui.buttonset",{options:{items:":button, :submit, :reset, :checkbox, :radio, a, :data(button)"},_create:function(){this.element.addClass("ui-buttonset")},_init:function(){this.refresh()},_setOption:function(b,c){b==="disabled"&&this.buttons.button("option",b,c),a.Widget.prototype._setOption.apply(this,arguments)},refresh:function(){var b=this.element.css("direction")==="rtl";this.buttons=this.element.find(this.options.items).filter(":ui-button").button("refresh").end().not(":ui-button").button().end().map(function(){return a(this).button("widget")[0]}).removeClass("ui-corner-all ui-corner-left ui-corner-right").filter(":first").addClass(b?"ui-corner-right":"ui-corner-left").end().filter(":last").addClass(b?"ui-corner-left":"ui-corner-right").end().end()},destroy:function(){this.element.removeClass("ui-buttonset"),this.buttons.map(function(){return a(this).button("widget")[0]}).removeClass("ui-corner-left ui-corner-right").end().button("destroy"),a.Widget.prototype.destroy.call(this)}})})(jQuery);;/*! jQuery UI - v1.8.22 - 2012-07-24
* https://github.com/jquery/jquery-ui
* Includes: jquery.ui.slider.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function(a,b){var c=5;a.widget("ui.slider",a.ui.mouse,{widgetEventPrefix:"slide",options:{animate:!1,distance:0,max:100,min:0,orientation:"horizontal",range:!1,step:1,value:0,values:null},_create:function(){var b=this,d=this.options,e=this.element.find(".ui-slider-handle").addClass("ui-state-default ui-corner-all"),f="<a class='ui-slider-handle ui-state-default ui-corner-all' href='#'></a>",g=d.values&&d.values.length||1,h=[];this._keySliding=!1,this._mouseSliding=!1,this._animateOff=!0,this._handleIndex=null,this._detectOrientation(),this._mouseInit(),this.element.addClass("ui-slider ui-slider-"+this.orientation+" ui-widget"+" ui-widget-content"+" ui-corner-all"+(d.disabled?" ui-slider-disabled ui-disabled":"")),this.range=a([]),d.range&&(d.range===!0&&(d.values||(d.values=[this._valueMin(),this._valueMin()]),d.values.length&&d.values.length!==2&&(d.values=[d.values[0],d.values[0]])),this.range=a("<div></div>").appendTo(this.element).addClass("ui-slider-range ui-widget-header"+(d.range==="min"||d.range==="max"?" ui-slider-range-"+d.range:"")));for(var i=e.length;i<g;i+=1)h.push(f);this.handles=e.add(a(h.join("")).appendTo(b.element)),this.handle=this.handles.eq(0),this.handles.add(this.range).filter("a").click(function(a){a.preventDefault()}).hover(function(){d.disabled||a(this).addClass("ui-state-hover")},function(){a(this).removeClass("ui-state-hover")}).focus(function(){d.disabled?a(this).blur():(a(".ui-slider .ui-state-focus").removeClass("ui-state-focus"),a(this).addClass("ui-state-focus"))}).blur(function(){a(this).removeClass("ui-state-focus")}),this.handles.each(function(b){a(this).data("index.ui-slider-handle",b)}),this.handles.keydown(function(d){var e=a(this).data("index.ui-slider-handle"),f,g,h,i;if(b.options.disabled)return;switch(d.keyCode){case a.ui.keyCode.HOME:case a.ui.keyCode.END:case a.ui.keyCode.PAGE_UP:case a.ui.keyCode.PAGE_DOWN:case a.ui.keyCode.UP:case a.ui.keyCode.RIGHT:case a.ui.keyCode.DOWN:case a.ui.keyCode.LEFT:d.preventDefault();if(!b._keySliding){b._keySliding=!0,a(this).addClass("ui-state-active"),f=b._start(d,e);if(f===!1)return}}i=b.options.step,b.options.values&&b.options.values.length?g=h=b.values(e):g=h=b.value();switch(d.keyCode){case a.ui.keyCode.HOME:h=b._valueMin();break;case a.ui.keyCode.END:h=b._valueMax();break;case a.ui.keyCode.PAGE_UP:h=b._trimAlignValue(g+(b._valueMax()-b._valueMin())/c);break;case a.ui.keyCode.PAGE_DOWN:h=b._trimAlignValue(g-(b._valueMax()-b._valueMin())/c);break;case a.ui.keyCode.UP:case a.ui.keyCode.RIGHT:if(g===b._valueMax())return;h=b._trimAlignValue(g+i);break;case a.ui.keyCode.DOWN:case a.ui.keyCode.LEFT:if(g===b._valueMin())return;h=b._trimAlignValue(g-i)}b._slide(d,e,h)}).keyup(function(c){var d=a(this).data("index.ui-slider-handle");b._keySliding&&(b._keySliding=!1,b._stop(c,d),b._change(c,d),a(this).removeClass("ui-state-active"))}),this._refreshValue(),this._animateOff=!1},destroy:function(){return this.handles.remove(),this.range.remove(),this.element.removeClass("ui-slider ui-slider-horizontal ui-slider-vertical ui-slider-disabled ui-widget ui-widget-content ui-corner-all").removeData("slider").unbind(".slider"),this._mouseDestroy(),this},_mouseCapture:function(b){var c=this.options,d,e,f,g,h,i,j,k,l;return c.disabled?!1:(this.elementSize={width:this.element.outerWidth(),height:this.element.outerHeight()},this.elementOffset=this.element.offset(),d={x:b.pageX,y:b.pageY},e=this._normValueFromMouse(d),f=this._valueMax()-this._valueMin()+1,h=this,this.handles.each(function(b){var c=Math.abs(e-h.values(b));f>c&&(f=c,g=a(this),i=b)}),c.range===!0&&this.values(1)===c.min&&(i+=1,g=a(this.handles[i])),j=this._start(b,i),j===!1?!1:(this._mouseSliding=!0,h._handleIndex=i,g.addClass("ui-state-active").focus(),k=g.offset(),l=!a(b.target).parents().andSelf().is(".ui-slider-handle"),this._clickOffset=l?{left:0,top:0}:{left:b.pageX-k.left-g.width()/2,top:b.pageY-k.top-g.height()/2-(parseInt(g.css("borderTopWidth"),10)||0)-(parseInt(g.css("borderBottomWidth"),10)||0)+(parseInt(g.css("marginTop"),10)||0)},this.handles.hasClass("ui-state-hover")||this._slide(b,i,e),this._animateOff=!0,!0))},_mouseStart:function(a){return!0},_mouseDrag:function(a){var b={x:a.pageX,y:a.pageY},c=this._normValueFromMouse(b);return this._slide(a,this._handleIndex,c),!1},_mouseStop:function(a){return this.handles.removeClass("ui-state-active"),this._mouseSliding=!1,this._stop(a,this._handleIndex),this._change(a,this._handleIndex),this._handleIndex=null,this._clickOffset=null,this._animateOff=!1,!1},_detectOrientation:function(){this.orientation=this.options.orientation==="vertical"?"vertical":"horizontal"},_normValueFromMouse:function(a){var b,c,d,e,f;return this.orientation==="horizontal"?(b=this.elementSize.width,c=a.x-this.elementOffset.left-(this._clickOffset?this._clickOffset.left:0)):(b=this.elementSize.height,c=a.y-this.elementOffset.top-(this._clickOffset?this._clickOffset.top:0)),d=c/b,d>1&&(d=1),d<0&&(d=0),this.orientation==="vertical"&&(d=1-d),e=this._valueMax()-this._valueMin(),f=this._valueMin()+d*e,this._trimAlignValue(f)},_start:function(a,b){var c={handle:this.handles[b],value:this.value()};return this.options.values&&this.options.values.length&&(c.value=this.values(b),c.values=this.values()),this._trigger("start",a,c)},_slide:function(a,b,c){var d,e,f;this.options.values&&this.options.values.length?(d=this.values(b?0:1),this.options.values.length===2&&this.options.range===!0&&(b===0&&c>d||b===1&&c<d)&&(c=d),c!==this.values(b)&&(e=this.values(),e[b]=c,f=this._trigger("slide",a,{handle:this.handles[b],value:c,values:e}),d=this.values(b?0:1),f!==!1&&this.values(b,c,!0))):c!==this.value()&&(f=this._trigger("slide",a,{handle:this.handles[b],value:c}),f!==!1&&this.value(c))},_stop:function(a,b){var c={handle:this.handles[b],value:this.value()};this.options.values&&this.options.values.length&&(c.value=this.values(b),c.values=this.values()),this._trigger("stop",a,c)},_change:function(a,b){if(!this._keySliding&&!this._mouseSliding){var c={handle:this.handles[b],value:this.value()};this.options.values&&this.options.values.length&&(c.value=this.values(b),c.values=this.values()),this._trigger("change",a,c)}},value:function(a){if(arguments.length){this.options.value=this._trimAlignValue(a),this._refreshValue(),this._change(null,0);return}return this._value()},values:function(b,c){var d,e,f;if(arguments.length>1){this.options.values[b]=this._trimAlignValue(c),this._refreshValue(),this._change(null,b);return}if(!arguments.length)return this._values();if(!a.isArray(arguments[0]))return this.options.values&&this.options.values.length?this._values(b):this.value();d=this.options.values,e=arguments[0];for(f=0;f<d.length;f+=1)d[f]=this._trimAlignValue(e[f]),this._change(null,f);this._refreshValue()},_setOption:function(b,c){var d,e=0;a.isArray(this.options.values)&&(e=this.options.values.length),a.Widget.prototype._setOption.apply(this,arguments);switch(b){case"disabled":c?(this.handles.filter(".ui-state-focus").blur(),this.handles.removeClass("ui-state-hover"),this.handles.propAttr("disabled",!0),this.element.addClass("ui-disabled")):(this.handles.propAttr("disabled",!1),this.element.removeClass("ui-disabled"));break;case"orientation":this._detectOrientation(),this.element.removeClass("ui-slider-horizontal ui-slider-vertical").addClass("ui-slider-"+this.orientation),this._refreshValue();break;case"value":this._animateOff=!0,this._refreshValue(),this._change(null,0),this._animateOff=!1;break;case"values":this._animateOff=!0,this._refreshValue();for(d=0;d<e;d+=1)this._change(null,d);this._animateOff=!1}},_value:function(){var a=this.options.value;return a=this._trimAlignValue(a),a},_values:function(a){var b,c,d;if(arguments.length)return b=this.options.values[a],b=this._trimAlignValue(b),b;c=this.options.values.slice();for(d=0;d<c.length;d+=1)c[d]=this._trimAlignValue(c[d]);return c},_trimAlignValue:function(a){if(a<=this._valueMin())return this._valueMin();if(a>=this._valueMax())return this._valueMax();var b=this.options.step>0?this.options.step:1,c=(a-this._valueMin())%b,d=a-c;return Math.abs(c)*2>=b&&(d+=c>0?b:-b),parseFloat(d.toFixed(5))},_valueMin:function(){return this.options.min},_valueMax:function(){return this.options.max},_refreshValue:function(){var b=this.options.range,c=this.options,d=this,e=this._animateOff?!1:c.animate,f,g={},h,i,j,k;this.options.values&&this.options.values.length?this.handles.each(function(b,i){f=(d.values(b)-d._valueMin())/(d._valueMax()-d._valueMin())*100,g[d.orientation==="horizontal"?"left":"bottom"]=f+"%",a(this).stop(1,1)[e?"animate":"css"](g,c.animate),d.options.range===!0&&(d.orientation==="horizontal"?(b===0&&d.range.stop(1,1)[e?"animate":"css"]({left:f+"%"},c.animate),b===1&&d.range[e?"animate":"css"]({width:f-h+"%"},{queue:!1,duration:c.animate})):(b===0&&d.range.stop(1,1)[e?"animate":"css"]({bottom:f+"%"},c.animate),b===1&&d.range[e?"animate":"css"]({height:f-h+"%"},{queue:!1,duration:c.animate}))),h=f}):(i=this.value(),j=this._valueMin(),k=this._valueMax(),f=k!==j?(i-j)/(k-j)*100:0,g[d.orientation==="horizontal"?"left":"bottom"]=f+"%",this.handle.stop(1,1)[e?"animate":"css"](g,c.animate),b==="min"&&this.orientation==="horizontal"&&this.range.stop(1,1)[e?"animate":"css"]({width:f+"%"},c.animate),b==="max"&&this.orientation==="horizontal"&&this.range[e?"animate":"css"]({width:100-f+"%"},{queue:!1,duration:c.animate}),b==="min"&&this.orientation==="vertical"&&this.range.stop(1,1)[e?"animate":"css"]({height:f+"%"},c.animate),b==="max"&&this.orientation==="vertical"&&this.range[e?"animate":"css"]({height:100-f+"%"},{queue:!1,duration:c.animate}))}}),a.extend(a.ui.slider,{version:"1.8.22"})})(jQuery);;/*! jQuery UI - v1.8.22 - 2012-07-24
* https://github.com/jquery/jquery-ui
* Includes: jquery.ui.tabs.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function(a,b){function e(){return++c}function f(){return++d}var c=0,d=0;a.widget("ui.tabs",{options:{add:null,ajaxOptions:null,cache:!1,cookie:null,collapsible:!1,disable:null,disabled:[],enable:null,event:"click",fx:null,idPrefix:"ui-tabs-",load:null,panelTemplate:"<div></div>",remove:null,select:null,show:null,spinner:"<em>Loading&#8230;</em>",tabTemplate:"<li><a href='#{href}'><span>#{label}</span></a></li>"},_create:function(){this._tabify(!0)},_setOption:function(a,b){if(a=="selected"){if(this.options.collapsible&&b==this.options.selected)return;this.select(b)}else this.options[a]=b,this._tabify()},_tabId:function(a){return a.title&&a.title.replace(/\s/g,"_").replace(/[^\w\u00c0-\uFFFF-]/g,"")||this.options.idPrefix+e()},_sanitizeSelector:function(a){return a.replace(/:/g,"\\:")},_cookie:function(){var b=this.cookie||(this.cookie=this.options.cookie.name||"ui-tabs-"+f());return a.cookie.apply(null,[b].concat(a.makeArray(arguments)))},_ui:function(a,b){return{tab:a,panel:b,index:this.anchors.index(a)}},_cleanup:function(){this.lis.filter(".ui-state-processing").removeClass("ui-state-processing").find("span:data(label.tabs)").each(function(){var b=a(this);b.html(b.data("label.tabs")).removeData("label.tabs")})},_tabify:function(c){function m(b,c){b.css("display",""),!a.support.opacity&&c.opacity&&b[0].style.removeAttribute("filter")}var d=this,e=this.options,f=/^#.+/;this.list=this.element.find("ol,ul").eq(0),this.lis=a(" > li:has(a[href])",this.list),this.anchors=this.lis.map(function(){return a("a",this)[0]}),this.panels=a([]),this.anchors.each(function(b,c){var g=a(c).attr("href"),h=g.split("#")[0],i;h&&(h===location.toString().split("#")[0]||(i=a("base")[0])&&h===i.href)&&(g=c.hash,c.href=g);if(f.test(g))d.panels=d.panels.add(d.element.find(d._sanitizeSelector(g)));else if(g&&g!=="#"){a.data(c,"href.tabs",g),a.data(c,"load.tabs",g.replace(/#.*$/,""));var j=d._tabId(c);c.href="#"+j;var k=d.element.find("#"+j);k.length||(k=a(e.panelTemplate).attr("id",j).addClass("ui-tabs-panel ui-widget-content ui-corner-bottom").insertAfter(d.panels[b-1]||d.list),k.data("destroy.tabs",!0)),d.panels=d.panels.add(k)}else e.disabled.push(b)}),c?(this.element.addClass("ui-tabs ui-widget ui-widget-content ui-corner-all"),this.list.addClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all"),this.lis.addClass("ui-state-default ui-corner-top"),this.panels.addClass("ui-tabs-panel ui-widget-content ui-corner-bottom"),e.selected===b?(location.hash&&this.anchors.each(function(a,b){if(b.hash==location.hash)return e.selected=a,!1}),typeof e.selected!="number"&&e.cookie&&(e.selected=parseInt(d._cookie(),10)),typeof e.selected!="number"&&this.lis.filter(".ui-tabs-selected").length&&(e.selected=this.lis.index(this.lis.filter(".ui-tabs-selected"))),e.selected=e.selected||(this.lis.length?0:-1)):e.selected===null&&(e.selected=-1),e.selected=e.selected>=0&&this.anchors[e.selected]||e.selected<0?e.selected:0,e.disabled=a.unique(e.disabled.concat(a.map(this.lis.filter(".ui-state-disabled"),function(a,b){return d.lis.index(a)}))).sort(),a.inArray(e.selected,e.disabled)!=-1&&e.disabled.splice(a.inArray(e.selected,e.disabled),1),this.panels.addClass("ui-tabs-hide"),this.lis.removeClass("ui-tabs-selected ui-state-active"),e.selected>=0&&this.anchors.length&&(d.element.find(d._sanitizeSelector(d.anchors[e.selected].hash)).removeClass("ui-tabs-hide"),this.lis.eq(e.selected).addClass("ui-tabs-selected ui-state-active"),d.element.queue("tabs",function(){d._trigger("show",null,d._ui(d.anchors[e.selected],d.element.find(d._sanitizeSelector(d.anchors[e.selected].hash))[0]))}),this.load(e.selected)),a(window).bind("unload",function(){d.lis.add(d.anchors).unbind(".tabs"),d.lis=d.anchors=d.panels=null})):e.selected=this.lis.index(this.lis.filter(".ui-tabs-selected")),this.element[e.collapsible?"addClass":"removeClass"]("ui-tabs-collapsible"),e.cookie&&this._cookie(e.selected,e.cookie);for(var g=0,h;h=this.lis[g];g++)a(h)[a.inArray(g,e.disabled)!=-1&&!a(h).hasClass("ui-tabs-selected")?"addClass":"removeClass"]("ui-state-disabled");e.cache===!1&&this.anchors.removeData("cache.tabs"),this.lis.add(this.anchors).unbind(".tabs");if(e.event!=="mouseover"){var i=function(a,b){b.is(":not(.ui-state-disabled)")&&b.addClass("ui-state-"+a)},j=function(a,b){b.removeClass("ui-state-"+a)};this.lis.bind("mouseover.tabs",function(){i("hover",a(this))}),this.lis.bind("mouseout.tabs",function(){j("hover",a(this))}),this.anchors.bind("focus.tabs",function(){i("focus",a(this).closest("li"))}),this.anchors.bind("blur.tabs",function(){j("focus",a(this).closest("li"))})}var k,l;e.fx&&(a.isArray(e.fx)?(k=e.fx[0],l=e.fx[1]):k=l=e.fx);var n=l?function(b,c){a(b).closest("li").addClass("ui-tabs-selected ui-state-active"),c.hide().removeClass("ui-tabs-hide").animate(l,l.duration||"normal",function(){m(c,l),d._trigger("show",null,d._ui(b,c[0]))})}:function(b,c){a(b).closest("li").addClass("ui-tabs-selected ui-state-active"),c.removeClass("ui-tabs-hide"),d._trigger("show",null,d._ui(b,c[0]))},o=k?function(a,b){b.animate(k,k.duration||"normal",function(){d.lis.removeClass("ui-tabs-selected ui-state-active"),b.addClass("ui-tabs-hide"),m(b,k),d.element.dequeue("tabs")})}:function(a,b,c){d.lis.removeClass("ui-tabs-selected ui-state-active"),b.addClass("ui-tabs-hide"),d.element.dequeue("tabs")};this.anchors.bind(e.event+".tabs",function(){var b=this,c=a(b).closest("li"),f=d.panels.filter(":not(.ui-tabs-hide)"),g=d.element.find(d._sanitizeSelector(b.hash));if(c.hasClass("ui-tabs-selected")&&!e.collapsible||c.hasClass("ui-state-disabled")||c.hasClass("ui-state-processing")||d.panels.filter(":animated").length||d._trigger("select",null,d._ui(this,g[0]))===!1)return this.blur(),!1;e.selected=d.anchors.index(this),d.abort();if(e.collapsible){if(c.hasClass("ui-tabs-selected"))return e.selected=-1,e.cookie&&d._cookie(e.selected,e.cookie),d.element.queue("tabs",function(){o(b,f)}).dequeue("tabs"),this.blur(),!1;if(!f.length)return e.cookie&&d._cookie(e.selected,e.cookie),d.element.queue("tabs",function(){n(b,g)}),d.load(d.anchors.index(this)),this.blur(),!1}e.cookie&&d._cookie(e.selected,e.cookie);if(g.length)f.length&&d.element.queue("tabs",function(){o(b,f)}),d.element.queue("tabs",function(){n(b,g)}),d.load(d.anchors.index(this));else throw"jQuery UI Tabs: Mismatching fragment identifier.";a.browser.msie&&this.blur()}),this.anchors.bind("click.tabs",function(){return!1})},_getIndex:function(a){return typeof a=="string"&&(a=this.anchors.index(this.anchors.filter("[href$='"+a+"']"))),a},destroy:function(){var b=this.options;return this.abort(),this.element.unbind(".tabs").removeClass("ui-tabs ui-widget ui-widget-content ui-corner-all ui-tabs-collapsible").removeData("tabs"),this.list.removeClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all"),this.anchors.each(function(){var b=a.data(this,"href.tabs");b&&(this.href=b);var c=a(this).unbind(".tabs");a.each(["href","load","cache"],function(a,b){c.removeData(b+".tabs")})}),this.lis.unbind(".tabs").add(this.panels).each(function(){a.data(this,"destroy.tabs")?a(this).remove():a(this).removeClass(["ui-state-default","ui-corner-top","ui-tabs-selected","ui-state-active","ui-state-hover","ui-state-focus","ui-state-disabled","ui-tabs-panel","ui-widget-content","ui-corner-bottom","ui-tabs-hide"].join(" "))}),b.cookie&&this._cookie(null,b.cookie),this},add:function(c,d,e){e===b&&(e=this.anchors.length);var f=this,g=this.options,h=a(g.tabTemplate.replace(/#\{href\}/g,c).replace(/#\{label\}/g,d)),i=c.indexOf("#")?this._tabId(a("a",h)[0]):c.replace("#","");h.addClass("ui-state-default ui-corner-top").data("destroy.tabs",!0);var j=f.element.find("#"+i);return j.length||(j=a(g.panelTemplate).attr("id",i).data("destroy.tabs",!0)),j.addClass("ui-tabs-panel ui-widget-content ui-corner-bottom ui-tabs-hide"),e>=this.lis.length?(h.appendTo(this.list),j.appendTo(this.list[0].parentNode)):(h.insertBefore(this.lis[e]),j.insertBefore(this.panels[e])),g.disabled=a.map(g.disabled,function(a,b){return a>=e?++a:a}),this._tabify(),this.anchors.length==1&&(g.selected=0,h.addClass("ui-tabs-selected ui-state-active"),j.removeClass("ui-tabs-hide"),this.element.queue("tabs",function(){f._trigger("show",null,f._ui(f.anchors[0],f.panels[0]))}),this.load(0)),this._trigger("add",null,this._ui(this.anchors[e],this.panels[e])),this},remove:function(b){b=this._getIndex(b);var c=this.options,d=this.lis.eq(b).remove(),e=this.panels.eq(b).remove();return d.hasClass("ui-tabs-selected")&&this.anchors.length>1&&this.select(b+(b+1<this.anchors.length?1:-1)),c.disabled=a.map(a.grep(c.disabled,function(a,c){return a!=b}),function(a,c){return a>=b?--a:a}),this._tabify(),this._trigger("remove",null,this._ui(d.find("a")[0],e[0])),this},enable:function(b){b=this._getIndex(b);var c=this.options;if(a.inArray(b,c.disabled)==-1)return;return this.lis.eq(b).removeClass("ui-state-disabled"),c.disabled=a.grep(c.disabled,function(a,c){return a!=b}),this._trigger("enable",null,this._ui(this.anchors[b],this.panels[b])),this},disable:function(a){a=this._getIndex(a);var b=this,c=this.options;return a!=c.selected&&(this.lis.eq(a).addClass("ui-state-disabled"),c.disabled.push(a),c.disabled.sort(),this._trigger("disable",null,this._ui(this.anchors[a],this.panels[a]))),this},select:function(a){a=this._getIndex(a);if(a==-1)if(this.options.collapsible&&this.options.selected!=-1)a=this.options.selected;else return this;return this.anchors.eq(a).trigger(this.options.event+".tabs"),this},load:function(b){b=this._getIndex(b);var c=this,d=this.options,e=this.anchors.eq(b)[0],f=a.data(e,"load.tabs");this.abort();if(!f||this.element.queue("tabs").length!==0&&a.data(e,"cache.tabs")){this.element.dequeue("tabs");return}this.lis.eq(b).addClass("ui-state-processing");if(d.spinner){var g=a("span",e);g.data("label.tabs",g.html()).html(d.spinner)}return this.xhr=a.ajax(a.extend({},d.ajaxOptions,{url:f,success:function(f,g){c.element.find(c._sanitizeSelector(e.hash)).html(f),c._cleanup(),d.cache&&a.data(e,"cache.tabs",!0),c._trigger("load",null,c._ui(c.anchors[b],c.panels[b]));try{d.ajaxOptions.success(f,g)}catch(h){}},error:function(a,f,g){c._cleanup(),c._trigger("load",null,c._ui(c.anchors[b],c.panels[b]));try{d.ajaxOptions.error(a,f,b,e)}catch(g){}}})),c.element.dequeue("tabs"),this},abort:function(){return this.element.queue([]),this.panels.stop(!1,!0),this.element.queue("tabs",this.element.queue("tabs").splice(-2,2)),this.xhr&&(this.xhr.abort(),delete this.xhr),this._cleanup(),this},url:function(a,b){return this.anchors.eq(a).removeData("cache.tabs").data("load.tabs",b),this},length:function(){return this.anchors.length}}),a.extend(a.ui.tabs,{version:"1.8.22"}),a.extend(a.ui.tabs.prototype,{rotation:null,rotate:function(a,b){var c=this,d=this.options,e=c._rotate||(c._rotate=function(b){clearTimeout(c.rotation),c.rotation=setTimeout(function(){var a=d.selected;c.select(++a<c.anchors.length?a:0)},a),b&&b.stopPropagation()}),f=c._unrotate||(c._unrotate=b?function(a){e()}:function(a){a.clientX&&c.rotate(null)});return a?(this.element.bind("tabsshow",e),this.anchors.bind(d.event+".tabs",f),e()):(clearTimeout(c.rotation),this.element.unbind("tabsshow",e),this.anchors.unbind(d.event+".tabs",f),delete this._rotate,delete this._unrotate),this}})})(jQuery);;/*! jQuery UI - v1.8.22 - 2012-07-24
* https://github.com/jquery/jquery-ui
* Includes: jquery.ui.datepicker.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function($,undefined){function Datepicker(){this.debug=!1,this._curInst=null,this._keyEvent=!1,this._disabledInputs=[],this._datepickerShowing=!1,this._inDialog=!1,this._mainDivId="ui-datepicker-div",this._inlineClass="ui-datepicker-inline",this._appendClass="ui-datepicker-append",this._triggerClass="ui-datepicker-trigger",this._dialogClass="ui-datepicker-dialog",this._disableClass="ui-datepicker-disabled",this._unselectableClass="ui-datepicker-unselectable",this._currentClass="ui-datepicker-current-day",this._dayOverClass="ui-datepicker-days-cell-over",this.regional=[],this.regional[""]={closeText:"Done",prevText:"Prev",nextText:"Next",currentText:"Today",monthNames:["January","February","March","April","May","June","July","August","September","October","November","December"],monthNamesShort:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],dayNames:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],dayNamesShort:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],dayNamesMin:["Su","Mo","Tu","We","Th","Fr","Sa"],weekHeader:"Wk",dateFormat:"mm/dd/yy",firstDay:0,isRTL:!1,showMonthAfterYear:!1,yearSuffix:""},this._defaults={showOn:"focus",showAnim:"fadeIn",showOptions:{},defaultDate:null,appendText:"",buttonText:"...",buttonImage:"",buttonImageOnly:!1,hideIfNoPrevNext:!1,navigationAsDateFormat:!1,gotoCurrent:!1,changeMonth:!1,changeYear:!1,yearRange:"c-10:c+10",showOtherMonths:!1,selectOtherMonths:!1,showWeek:!1,calculateWeek:this.iso8601Week,shortYearCutoff:"+10",minDate:null,maxDate:null,duration:"fast",beforeShowDay:null,beforeShow:null,onSelect:null,onChangeMonthYear:null,onClose:null,numberOfMonths:1,showCurrentAtPos:0,stepMonths:1,stepBigMonths:12,altField:"",altFormat:"",constrainInput:!0,showButtonPanel:!1,autoSize:!1,disabled:!1},$.extend(this._defaults,this.regional[""]),this.dpDiv=bindHover($('<div id="'+this._mainDivId+'" class="ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>'))}function bindHover(a){var b="button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a";return a.bind("mouseout",function(a){var c=$(a.target).closest(b);if(!c.length)return;c.removeClass("ui-state-hover ui-datepicker-prev-hover ui-datepicker-next-hover")}).bind("mouseover",function(c){var d=$(c.target).closest(b);if($.datepicker._isDisabledDatepicker(instActive.inline?a.parent()[0]:instActive.input[0])||!d.length)return;d.parents(".ui-datepicker-calendar").find("a").removeClass("ui-state-hover"),d.addClass("ui-state-hover"),d.hasClass("ui-datepicker-prev")&&d.addClass("ui-datepicker-prev-hover"),d.hasClass("ui-datepicker-next")&&d.addClass("ui-datepicker-next-hover")})}function extendRemove(a,b){$.extend(a,b);for(var c in b)if(b[c]==null||b[c]==undefined)a[c]=b[c];return a}function isArray(a){return a&&($.browser.safari&&typeof a=="object"&&a.length||a.constructor&&a.constructor.toString().match(/\Array\(\)/))}$.extend($.ui,{datepicker:{version:"1.8.22"}});var PROP_NAME="datepicker",dpuuid=(new Date).getTime(),instActive;$.extend(Datepicker.prototype,{markerClassName:"hasDatepicker",maxRows:4,log:function(){this.debug&&console.log.apply("",arguments)},_widgetDatepicker:function(){return this.dpDiv},setDefaults:function(a){return extendRemove(this._defaults,a||{}),this},_attachDatepicker:function(target,settings){var inlineSettings=null;for(var attrName in this._defaults){var attrValue=target.getAttribute("date:"+attrName);if(attrValue){inlineSettings=inlineSettings||{};try{inlineSettings[attrName]=eval(attrValue)}catch(err){inlineSettings[attrName]=attrValue}}}var nodeName=target.nodeName.toLowerCase(),inline=nodeName=="div"||nodeName=="span";target.id||(this.uuid+=1,target.id="dp"+this.uuid);var inst=this._newInst($(target),inline);inst.settings=$.extend({},settings||{},inlineSettings||{}),nodeName=="input"?this._connectDatepicker(target,inst):inline&&this._inlineDatepicker(target,inst)},_newInst:function(a,b){var c=a[0].id.replace(/([^A-Za-z0-9_-])/g,"\\\\$1");return{id:c,input:a,selectedDay:0,selectedMonth:0,selectedYear:0,drawMonth:0,drawYear:0,inline:b,dpDiv:b?bindHover($('<div class="'+this._inlineClass+' ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>')):this.dpDiv}},_connectDatepicker:function(a,b){var c=$(a);b.append=$([]),b.trigger=$([]);if(c.hasClass(this.markerClassName))return;this._attachments(c,b),c.addClass(this.markerClassName).keydown(this._doKeyDown).keypress(this._doKeyPress).keyup(this._doKeyUp).bind("setData.datepicker",function(a,c,d){b.settings[c]=d}).bind("getData.datepicker",function(a,c){return this._get(b,c)}),this._autoSize(b),$.data(a,PROP_NAME,b),b.settings.disabled&&this._disableDatepicker(a)},_attachments:function(a,b){var c=this._get(b,"appendText"),d=this._get(b,"isRTL");b.append&&b.append.remove(),c&&(b.append=$('<span class="'+this._appendClass+'">'+c+"</span>"),a[d?"before":"after"](b.append)),a.unbind("focus",this._showDatepicker),b.trigger&&b.trigger.remove();var e=this._get(b,"showOn");(e=="focus"||e=="both")&&a.focus(this._showDatepicker);if(e=="button"||e=="both"){var f=this._get(b,"buttonText"),g=this._get(b,"buttonImage");b.trigger=$(this._get(b,"buttonImageOnly")?$("<img/>").addClass(this._triggerClass).attr({src:g,alt:f,title:f}):$('<button type="button"></button>').addClass(this._triggerClass).html(g==""?f:$("<img/>").attr({src:g,alt:f,title:f}))),a[d?"before":"after"](b.trigger),b.trigger.click(function(){return $.datepicker._datepickerShowing&&$.datepicker._lastInput==a[0]?$.datepicker._hideDatepicker():$.datepicker._datepickerShowing&&$.datepicker._lastInput!=a[0]?($.datepicker._hideDatepicker(),$.datepicker._showDatepicker(a[0])):$.datepicker._showDatepicker(a[0]),!1})}},_autoSize:function(a){if(this._get(a,"autoSize")&&!a.inline){var b=new Date(2009,11,20),c=this._get(a,"dateFormat");if(c.match(/[DM]/)){var d=function(a){var b=0,c=0;for(var d=0;d<a.length;d++)a[d].length>b&&(b=a[d].length,c=d);return c};b.setMonth(d(this._get(a,c.match(/MM/)?"monthNames":"monthNamesShort"))),b.setDate(d(this._get(a,c.match(/DD/)?"dayNames":"dayNamesShort"))+20-b.getDay())}a.input.attr("size",this._formatDate(a,b).length)}},_inlineDatepicker:function(a,b){var c=$(a);if(c.hasClass(this.markerClassName))return;c.addClass(this.markerClassName).append(b.dpDiv).bind("setData.datepicker",function(a,c,d){b.settings[c]=d}).bind("getData.datepicker",function(a,c){return this._get(b,c)}),$.data(a,PROP_NAME,b),this._setDate(b,this._getDefaultDate(b),!0),this._updateDatepicker(b),this._updateAlternate(b),b.settings.disabled&&this._disableDatepicker(a),b.dpDiv.css("display","block")},_dialogDatepicker:function(a,b,c,d,e){var f=this._dialogInst;if(!f){this.uuid+=1;var g="dp"+this.uuid;this._dialogInput=$('<input type="text" id="'+g+'" style="position: absolute; top: -100px; width: 0px;"/>'),this._dialogInput.keydown(this._doKeyDown),$("body").append(this._dialogInput),f=this._dialogInst=this._newInst(this._dialogInput,!1),f.settings={},$.data(this._dialogInput[0],PROP_NAME,f)}extendRemove(f.settings,d||{}),b=b&&b.constructor==Date?this._formatDate(f,b):b,this._dialogInput.val(b),this._pos=e?e.length?e:[e.pageX,e.pageY]:null;if(!this._pos){var h=document.documentElement.clientWidth,i=document.documentElement.clientHeight,j=document.documentElement.scrollLeft||document.body.scrollLeft,k=document.documentElement.scrollTop||document.body.scrollTop;this._pos=[h/2-100+j,i/2-150+k]}return this._dialogInput.css("left",this._pos[0]+20+"px").css("top",this._pos[1]+"px"),f.settings.onSelect=c,this._inDialog=!0,this.dpDiv.addClass(this._dialogClass),this._showDatepicker(this._dialogInput[0]),$.blockUI&&$.blockUI(this.dpDiv),$.data(this._dialogInput[0],PROP_NAME,f),this},_destroyDatepicker:function(a){var b=$(a),c=$.data(a,PROP_NAME);if(!b.hasClass(this.markerClassName))return;var d=a.nodeName.toLowerCase();$.removeData(a,PROP_NAME),d=="input"?(c.append.remove(),c.trigger.remove(),b.removeClass(this.markerClassName).unbind("focus",this._showDatepicker).unbind("keydown",this._doKeyDown).unbind("keypress",this._doKeyPress).unbind("keyup",this._doKeyUp)):(d=="div"||d=="span")&&b.removeClass(this.markerClassName).empty()},_enableDatepicker:function(a){var b=$(a),c=$.data(a,PROP_NAME);if(!b.hasClass(this.markerClassName))return;var d=a.nodeName.toLowerCase();if(d=="input")a.disabled=!1,c.trigger.filter("button").each(function(){this.disabled=!1}).end().filter("img").css({opacity:"1.0",cursor:""});else if(d=="div"||d=="span"){var e=b.children("."+this._inlineClass);e.children().removeClass("ui-state-disabled"),e.find("select.ui-datepicker-month, select.ui-datepicker-year").removeAttr("disabled")}this._disabledInputs=$.map(this._disabledInputs,function(b){return b==a?null:b})},_disableDatepicker:function(a){var b=$(a),c=$.data(a,PROP_NAME);if(!b.hasClass(this.markerClassName))return;var d=a.nodeName.toLowerCase();if(d=="input")a.disabled=!0,c.trigger.filter("button").each(function(){this.disabled=!0}).end().filter("img").css({opacity:"0.5",cursor:"default"});else if(d=="div"||d=="span"){var e=b.children("."+this._inlineClass);e.children().addClass("ui-state-disabled"),e.find("select.ui-datepicker-month, select.ui-datepicker-year").attr("disabled","disabled")}this._disabledInputs=$.map(this._disabledInputs,function(b){return b==a?null:b}),this._disabledInputs[this._disabledInputs.length]=a},_isDisabledDatepicker:function(a){if(!a)return!1;for(var b=0;b<this._disabledInputs.length;b++)if(this._disabledInputs[b]==a)return!0;return!1},_getInst:function(a){try{return $.data(a,PROP_NAME)}catch(b){throw"Missing instance data for this datepicker"}},_optionDatepicker:function(a,b,c){var d=this._getInst(a);if(arguments.length==2&&typeof b=="string")return b=="defaults"?$.extend({},$.datepicker._defaults):d?b=="all"?$.extend({},d.settings):this._get(d,b):null;var e=b||{};typeof b=="string"&&(e={},e[b]=c);if(d){this._curInst==d&&this._hideDatepicker();var f=this._getDateDatepicker(a,!0),g=this._getMinMaxDate(d,"min"),h=this._getMinMaxDate(d,"max");extendRemove(d.settings,e),g!==null&&e.dateFormat!==undefined&&e.minDate===undefined&&(d.settings.minDate=this._formatDate(d,g)),h!==null&&e.dateFormat!==undefined&&e.maxDate===undefined&&(d.settings.maxDate=this._formatDate(d,h)),this._attachments($(a),d),this._autoSize(d),this._setDate(d,f),this._updateAlternate(d),this._updateDatepicker(d)}},_changeDatepicker:function(a,b,c){this._optionDatepicker(a,b,c)},_refreshDatepicker:function(a){var b=this._getInst(a);b&&this._updateDatepicker(b)},_setDateDatepicker:function(a,b){var c=this._getInst(a);c&&(this._setDate(c,b),this._updateDatepicker(c),this._updateAlternate(c))},_getDateDatepicker:function(a,b){var c=this._getInst(a);return c&&!c.inline&&this._setDateFromField(c,b),c?this._getDate(c):null},_doKeyDown:function(a){var b=$.datepicker._getInst(a.target),c=!0,d=b.dpDiv.is(".ui-datepicker-rtl");b._keyEvent=!0;if($.datepicker._datepickerShowing)switch(a.keyCode){case 9:$.datepicker._hideDatepicker(),c=!1;break;case 13:var e=$("td."+$.datepicker._dayOverClass+":not(."+$.datepicker._currentClass+")",b.dpDiv);e[0]&&$.datepicker._selectDay(a.target,b.selectedMonth,b.selectedYear,e[0]);var f=$.datepicker._get(b,"onSelect");if(f){var g=$.datepicker._formatDate(b);f.apply(b.input?b.input[0]:null,[g,b])}else $.datepicker._hideDatepicker();return!1;case 27:$.datepicker._hideDatepicker();break;case 33:$.datepicker._adjustDate(a.target,a.ctrlKey?-$.datepicker._get(b,"stepBigMonths"):-$.datepicker._get(b,"stepMonths"),"M");break;case 34:$.datepicker._adjustDate(a.target,a.ctrlKey?+$.datepicker._get(b,"stepBigMonths"):+$.datepicker._get(b,"stepMonths"),"M");break;case 35:(a.ctrlKey||a.metaKey)&&$.datepicker._clearDate(a.target),c=a.ctrlKey||a.metaKey;break;case 36:(a.ctrlKey||a.metaKey)&&$.datepicker._gotoToday(a.target),c=a.ctrlKey||a.metaKey;break;case 37:(a.ctrlKey||a.metaKey)&&$.datepicker._adjustDate(a.target,d?1:-1,"D"),c=a.ctrlKey||a.metaKey,a.originalEvent.altKey&&$.datepicker._adjustDate(a.target,a.ctrlKey?-$.datepicker._get(b,"stepBigMonths"):-$.datepicker._get(b,"stepMonths"),"M");break;case 38:(a.ctrlKey||a.metaKey)&&$.datepicker._adjustDate(a.target,-7,"D"),c=a.ctrlKey||a.metaKey;break;case 39:(a.ctrlKey||a.metaKey)&&$.datepicker._adjustDate(a.target,d?-1:1,"D"),c=a.ctrlKey||a.metaKey,a.originalEvent.altKey&&$.datepicker._adjustDate(a.target,a.ctrlKey?+$.datepicker._get(b,"stepBigMonths"):+$.datepicker._get(b,"stepMonths"),"M");break;case 40:(a.ctrlKey||a.metaKey)&&$.datepicker._adjustDate(a.target,7,"D"),c=a.ctrlKey||a.metaKey;break;default:c=!1}else a.keyCode==36&&a.ctrlKey?$.datepicker._showDatepicker(this):c=!1;c&&(a.preventDefault(),a.stopPropagation())},_doKeyPress:function(a){var b=$.datepicker._getInst(a.target);if($.datepicker._get(b,"constrainInput")){var c=$.datepicker._possibleChars($.datepicker._get(b,"dateFormat")),d=String.fromCharCode(a.charCode==undefined?a.keyCode:a.charCode);return a.ctrlKey||a.metaKey||d<" "||!c||c.indexOf(d)>-1}},_doKeyUp:function(a){var b=$.datepicker._getInst(a.target);if(b.input.val()!=b.lastVal)try{var c=$.datepicker.parseDate($.datepicker._get(b,"dateFormat"),b.input?b.input.val():null,$.datepicker._getFormatConfig(b));c&&($.datepicker._setDateFromField(b),$.datepicker._updateAlternate(b),$.datepicker._updateDatepicker(b))}catch(d){$.datepicker.log(d)}return!0},_showDatepicker:function(a){a=a.target||a,a.nodeName.toLowerCase()!="input"&&(a=$("input",a.parentNode)[0]);if($.datepicker._isDisabledDatepicker(a)||$.datepicker._lastInput==a)return;var b=$.datepicker._getInst(a);$.datepicker._curInst&&$.datepicker._curInst!=b&&($.datepicker._curInst.dpDiv.stop(!0,!0),b&&$.datepicker._datepickerShowing&&$.datepicker._hideDatepicker($.datepicker._curInst.input[0]));var c=$.datepicker._get(b,"beforeShow"),d=c?c.apply(a,[a,b]):{};if(d===!1)return;extendRemove(b.settings,d),b.lastVal=null,$.datepicker._lastInput=a,$.datepicker._setDateFromField(b),$.datepicker._inDialog&&(a.value=""),$.datepicker._pos||($.datepicker._pos=$.datepicker._findPos(a),$.datepicker._pos[1]+=a.offsetHeight);var e=!1;$(a).parents().each(function(){return e|=$(this).css("position")=="fixed",!e}),e&&$.browser.opera&&($.datepicker._pos[0]-=document.documentElement.scrollLeft,$.datepicker._pos[1]-=document.documentElement.scrollTop);var f={left:$.datepicker._pos[0],top:$.datepicker._pos[1]};$.datepicker._pos=null,b.dpDiv.empty(),b.dpDiv.css({position:"absolute",display:"block",top:"-1000px"}),$.datepicker._updateDatepicker(b),f=$.datepicker._checkOffset(b,f,e),b.dpDiv.css({position:$.datepicker._inDialog&&$.blockUI?"static":e?"fixed":"absolute",display:"none",left:f.left+"px",top:f.top+"px"});if(!b.inline){var g=$.datepicker._get(b,"showAnim"),h=$.datepicker._get(b,"duration"),i=function(){var a=b.dpDiv.find("iframe.ui-datepicker-cover");if(!!a.length){var c=$.datepicker._getBorders(b.dpDiv);a.css({left:-c[0],top:-c[1],width:b.dpDiv.outerWidth(),height:b.dpDiv.outerHeight()})}};b.dpDiv.zIndex($(a).zIndex()+1),$.datepicker._datepickerShowing=!0,$.effects&&$.effects[g]?b.dpDiv.show(g,$.datepicker._get(b,"showOptions"),h,i):b.dpDiv[g||"show"](g?h:null,i),(!g||!h)&&i(),b.input.is(":visible")&&!b.input.is(":disabled")&&b.input.focus(),$.datepicker._curInst=b}},_updateDatepicker:function(a){var b=this;b.maxRows=4;var c=$.datepicker._getBorders(a.dpDiv);instActive=a,a.dpDiv.empty().append(this._generateHTML(a)),this._attachHandlers(a);var d=a.dpDiv.find("iframe.ui-datepicker-cover");!d.length||d.css({left:-c[0],top:-c[1],width:a.dpDiv.outerWidth(),height:a.dpDiv.outerHeight()}),a.dpDiv.find("."+this._dayOverClass+" a").mouseover();var e=this._getNumberOfMonths(a),f=e[1],g=17;a.dpDiv.removeClass("ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4").width(""),f>1&&a.dpDiv.addClass("ui-datepicker-multi-"+f).css("width",g*f+"em"),a.dpDiv[(e[0]!=1||e[1]!=1?"add":"remove")+"Class"]("ui-datepicker-multi"),a.dpDiv[(this._get(a,"isRTL")?"add":"remove")+"Class"]("ui-datepicker-rtl"),a==$.datepicker._curInst&&$.datepicker._datepickerShowing&&a.input&&a.input.is(":visible")&&!a.input.is(":disabled")&&a.input[0]!=document.activeElement&&a.input.focus();if(a.yearshtml){var h=a.yearshtml;setTimeout(function(){h===a.yearshtml&&a.yearshtml&&a.dpDiv.find("select.ui-datepicker-year:first").replaceWith(a.yearshtml),h=a.yearshtml=null},0)}},_getBorders:function(a){var b=function(a){return{thin:1,medium:2,thick:3}[a]||a};return[parseFloat(b(a.css("border-left-width"))),parseFloat(b(a.css("border-top-width")))]},_checkOffset:function(a,b,c){var d=a.dpDiv.outerWidth(),e=a.dpDiv.outerHeight(),f=a.input?a.input.outerWidth():0,g=a.input?a.input.outerHeight():0,h=document.documentElement.clientWidth+(c?0:$(document).scrollLeft()),i=document.documentElement.clientHeight+(c?0:$(document).scrollTop());return b.left-=this._get(a,"isRTL")?d-f:0,b.left-=c&&b.left==a.input.offset().left?$(document).scrollLeft():0,b.top-=c&&b.top==a.input.offset().top+g?$(document).scrollTop():0,b.left-=Math.min(b.left,b.left+d>h&&h>d?Math.abs(b.left+d-h):0),b.top-=Math.min(b.top,b.top+e>i&&i>e?Math.abs(e+g):0),b},_findPos:function(a){var b=this._getInst(a),c=this._get(b,"isRTL");while(a&&(a.type=="hidden"||a.nodeType!=1||$.expr.filters.hidden(a)))a=a[c?"previousSibling":"nextSibling"];var d=$(a).offset();return[d.left,d.top]},_hideDatepicker:function(a){var b=this._curInst;if(!b||a&&b!=$.data(a,PROP_NAME))return;if(this._datepickerShowing){var c=this._get(b,"showAnim"),d=this._get(b,"duration"),e=function(){$.datepicker._tidyDialog(b)};$.effects&&$.effects[c]?b.dpDiv.hide(c,$.datepicker._get(b,"showOptions"),d,e):b.dpDiv[c=="slideDown"?"slideUp":c=="fadeIn"?"fadeOut":"hide"](c?d:null,e),c||e(),this._datepickerShowing=!1;var f=this._get(b,"onClose");f&&f.apply(b.input?b.input[0]:null,[b.input?b.input.val():"",b]),this._lastInput=null,this._inDialog&&(this._dialogInput.css({position:"absolute",left:"0",top:"-100px"}),$.blockUI&&($.unblockUI(),$("body").append(this.dpDiv))),this._inDialog=!1}},_tidyDialog:function(a){a.dpDiv.removeClass(this._dialogClass).unbind(".ui-datepicker-calendar")},_checkExternalClick:function(a){if(!$.datepicker._curInst)return;var b=$(a.target),c=$.datepicker._getInst(b[0]);(b[0].id!=$.datepicker._mainDivId&&b.parents("#"+$.datepicker._mainDivId).length==0&&!b.hasClass($.datepicker.markerClassName)&&!b.closest("."+$.datepicker._triggerClass).length&&$.datepicker._datepickerShowing&&(!$.datepicker._inDialog||!$.blockUI)||b.hasClass($.datepicker.markerClassName)&&$.datepicker._curInst!=c)&&$.datepicker._hideDatepicker()},_adjustDate:function(a,b,c){var d=$(a),e=this._getInst(d[0]);if(this._isDisabledDatepicker(d[0]))return;this._adjustInstDate(e,b+(c=="M"?this._get(e,"showCurrentAtPos"):0),c),this._updateDatepicker(e)},_gotoToday:function(a){var b=$(a),c=this._getInst(b[0]);if(this._get(c,"gotoCurrent")&&c.currentDay)c.selectedDay=c.currentDay,c.drawMonth=c.selectedMonth=c.currentMonth,c.drawYear=c.selectedYear=c.currentYear;else{var d=new Date;c.selectedDay=d.getDate(),c.drawMonth=c.selectedMonth=d.getMonth(),c.drawYear=c.selectedYear=d.getFullYear()}this._notifyChange(c),this._adjustDate(b)},_selectMonthYear:function(a,b,c){var d=$(a),e=this._getInst(d[0]);e["selected"+(c=="M"?"Month":"Year")]=e["draw"+(c=="M"?"Month":"Year")]=parseInt(b.options[b.selectedIndex].value,10),this._notifyChange(e),this._adjustDate(d)},_selectDay:function(a,b,c,d){var e=$(a);if($(d).hasClass(this._unselectableClass)||this._isDisabledDatepicker(e[0]))return;var f=this._getInst(e[0]);f.selectedDay=f.currentDay=$("a",d).html(),f.selectedMonth=f.currentMonth=b,f.selectedYear=f.currentYear=c,this._selectDate(a,this._formatDate(f,f.currentDay,f.currentMonth,f.currentYear))},_clearDate:function(a){var b=$(a),c=this._getInst(b[0]);this._selectDate(b,"")},_selectDate:function(a,b){var c=$(a),d=this._getInst(c[0]);b=b!=null?b:this._formatDate(d),d.input&&d.input.val(b),this._updateAlternate(d);var e=this._get(d,"onSelect");e?e.apply(d.input?d.input[0]:null,[b,d]):d.input&&d.input.trigger("change"),d.inline?this._updateDatepicker(d):(this._hideDatepicker(),this._lastInput=d.input[0],typeof d.input[0]!="object"&&d.input.focus(),this._lastInput=null)},_updateAlternate:function(a){var b=this._get(a,"altField");if(b){var c=this._get(a,"altFormat")||this._get(a,"dateFormat"),d=this._getDate(a),e=this.formatDate(c,d,this._getFormatConfig(a));$(b).each(function(){$(this).val(e)})}},noWeekends:function(a){var b=a.getDay();return[b>0&&b<6,""]},iso8601Week:function(a){var b=new Date(a.getTime());b.setDate(b.getDate()+4-(b.getDay()||7));var c=b.getTime();return b.setMonth(0),b.setDate(1),Math.floor(Math.round((c-b)/864e5)/7)+1},parseDate:function(a,b,c){if(a==null||b==null)throw"Invalid arguments";b=typeof b=="object"?b.toString():b+"";if(b=="")return null;var d=(c?c.shortYearCutoff:null)||this._defaults.shortYearCutoff;d=typeof d!="string"?d:(new Date).getFullYear()%100+parseInt(d,10);var e=(c?c.dayNamesShort:null)||this._defaults.dayNamesShort,f=(c?c.dayNames:null)||this._defaults.dayNames,g=(c?c.monthNamesShort:null)||this._defaults.monthNamesShort,h=(c?c.monthNames:null)||this._defaults.monthNames,i=-1,j=-1,k=-1,l=-1,m=!1,n=function(b){var c=s+1<a.length&&a.charAt(s+1)==b;return c&&s++,c},o=function(a){var c=n(a),d=a=="@"?14:a=="!"?20:a=="y"&&c?4:a=="o"?3:2,e=new RegExp("^\\d{1,"+d+"}"),f=b.substring(r).match(e);if(!f)throw"Missing number at position "+r;return r+=f[0].length,parseInt(f[0],10)},p=function(a,c,d){var e=$.map(n(a)?d:c,function(a,b){return[[b,a]]}).sort(function(a,b){return-(a[1].length-b[1].length)}),f=-1;$.each(e,function(a,c){var d=c[1];if(b.substr(r,d.length).toLowerCase()==d.toLowerCase())return f=c[0],r+=d.length,!1});if(f!=-1)return f+1;throw"Unknown name at position "+r},q=function(){if(b.charAt(r)!=a.charAt(s))throw"Unexpected literal at position "+r;r++},r=0;for(var s=0;s<a.length;s++)if(m)a.charAt(s)=="'"&&!n("'")?m=!1:q();else switch(a.charAt(s)){case"d":k=o("d");break;case"D":p("D",e,f);break;case"o":l=o("o");break;case"m":j=o("m");break;case"M":j=p("M",g,h);break;case"y":i=o("y");break;case"@":var t=new Date(o("@"));i=t.getFullYear(),j=t.getMonth()+1,k=t.getDate();break;case"!":var t=new Date((o("!")-this._ticksTo1970)/1e4);i=t.getFullYear(),j=t.getMonth()+1,k=t.getDate();break;case"'":n("'")?q():m=!0;break;default:q()}if(r<b.length)throw"Extra/unparsed characters found in date: "+b.substring(r);i==-1?i=(new Date).getFullYear():i<100&&(i+=(new Date).getFullYear()-(new Date).getFullYear()%100+(i<=d?0:-100));if(l>-1){j=1,k=l;do{var u=this._getDaysInMonth(i,j-1);if(k<=u)break;j++,k-=u}while(!0)}var t=this._daylightSavingAdjust(new Date(i,j-1,k));if(t.getFullYear()!=i||t.getMonth()+1!=j||t.getDate()!=k)throw"Invalid date";return t},ATOM:"yy-mm-dd",COOKIE:"D, dd M yy",ISO_8601:"yy-mm-dd",RFC_822:"D, d M y",RFC_850:"DD, dd-M-y",RFC_1036:"D, d M y",RFC_1123:"D, d M yy",RFC_2822:"D, d M yy",RSS:"D, d M y",TICKS:"!",TIMESTAMP:"@",W3C:"yy-mm-dd",_ticksTo1970:(718685+Math.floor(492.5)-Math.floor(19.7)+Math.floor(4.925))*24*60*60*1e7,formatDate:function(a,b,c){if(!b)return"";var d=(c?c.dayNamesShort:null)||this._defaults.dayNamesShort,e=(c?c.dayNames:null)||this._defaults.dayNames,f=(c?c.monthNamesShort:null)||this._defaults.monthNamesShort,g=(c?c.monthNames:null)||this._defaults.monthNames,h=function(b){var c=m+1<a.length&&a.charAt(m+1)==b;return c&&m++,c},i=function(a,b,c){var d=""+b;if(h(a))while(d.length<c)d="0"+d;return d},j=function(a,b,c,d){return h(a)?d[b]:c[b]},k="",l=!1;if(b)for(var m=0;m<a.length;m++)if(l)a.charAt(m)=="'"&&!h("'")?l=!1:k+=a.charAt(m);else switch(a.charAt(m)){case"d":k+=i("d",b.getDate(),2);break;case"D":k+=j("D",b.getDay(),d,e);break;case"o":k+=i("o",Math.round(((new Date(b.getFullYear(),b.getMonth(),b.getDate())).getTime()-(new Date(b.getFullYear(),0,0)).getTime())/864e5),3);break;case"m":k+=i("m",b.getMonth()+1,2);break;case"M":k+=j("M",b.getMonth(),f,g);break;case"y":k+=h("y")?b.getFullYear():(b.getYear()%100<10?"0":"")+b.getYear()%100;break;case"@":k+=b.getTime();break;case"!":k+=b.getTime()*1e4+this._ticksTo1970;break;case"'":h("'")?k+="'":l=!0;break;default:k+=a.charAt(m)}return k},_possibleChars:function(a){var b="",c=!1,d=function(b){var c=e+1<a.length&&a.charAt(e+1)==b;return c&&e++,c};for(var e=0;e<a.length;e++)if(c)a.charAt(e)=="'"&&!d("'")?c=!1:b+=a.charAt(e);else switch(a.charAt(e)){case"d":case"m":case"y":case"@":b+="0123456789";break;case"D":case"M":return null;case"'":d("'")?b+="'":c=!0;break;default:b+=a.charAt(e)}return b},_get:function(a,b){return a.settings[b]!==undefined?a.settings[b]:this._defaults[b]},_setDateFromField:function(a,b){if(a.input.val()==a.lastVal)return;var c=this._get(a,"dateFormat"),d=a.lastVal=a.input?a.input.val():null,e,f;e=f=this._getDefaultDate(a);var g=this._getFormatConfig(a);try{e=this.parseDate(c,d,g)||f}catch(h){this.log(h),d=b?"":d}a.selectedDay=e.getDate(),a.drawMonth=a.selectedMonth=e.getMonth(),a.drawYear=a.selectedYear=e.getFullYear(),a.currentDay=d?e.getDate():0,a.currentMonth=d?e.getMonth():0,a.currentYear=d?e.getFullYear():0,this._adjustInstDate(a)},_getDefaultDate:function(a){return this._restrictMinMax(a,this._determineDate(a,this._get(a,"defaultDate"),new Date))},_determineDate:function(a,b,c){var d=function(a){var b=new Date;return b.setDate(b.getDate()+a),b},e=function(b){try{return $.datepicker.parseDate($.datepicker._get(a,"dateFormat"),b,$.datepicker._getFormatConfig(a))}catch(c){}var d=(b.toLowerCase().match(/^c/)?$.datepicker._getDate(a):null)||new Date,e=d.getFullYear(),f=d.getMonth(),g=d.getDate(),h=/([+-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g,i=h.exec(b);while(i){switch(i[2]||"d"){case"d":case"D":g+=parseInt(i[1],10);break;case"w":case"W":g+=parseInt(i[1],10)*7;break;case"m":case"M":f+=parseInt(i[1],10),g=Math.min(g,$.datepicker._getDaysInMonth(e,f));break;case"y":case"Y":e+=parseInt(i[1],10),g=Math.min(g,$.datepicker._getDaysInMonth(e,f))}i=h.exec(b)}return new Date(e,f,g)},f=b==null||b===""?c:typeof b=="string"?e(b):typeof b=="number"?isNaN(b)?c:d(b):new Date(b.getTime());return f=f&&f.toString()=="Invalid Date"?c:f,f&&(f.setHours(0),f.setMinutes(0),f.setSeconds(0),f.setMilliseconds(0)),this._daylightSavingAdjust(f)},_daylightSavingAdjust:function(a){return a?(a.setHours(a.getHours()>12?a.getHours()+2:0),a):null},_setDate:function(a,b,c){var d=!b,e=a.selectedMonth,f=a.selectedYear,g=this._restrictMinMax(a,this._determineDate(a,b,new Date));a.selectedDay=a.currentDay=g.getDate(),a.drawMonth=a.selectedMonth=a.currentMonth=g.getMonth(),a.drawYear=a.selectedYear=a.currentYear=g.getFullYear(),(e!=a.selectedMonth||f!=a.selectedYear)&&!c&&this._notifyChange(a),this._adjustInstDate(a),a.input&&a.input.val(d?"":this._formatDate(a))},_getDate:function(a){var b=!a.currentYear||a.input&&a.input.val()==""?null:this._daylightSavingAdjust(new Date(a.currentYear,a.currentMonth,a.currentDay));return b},_attachHandlers:function(a){var b=this._get(a,"stepMonths"),c="#"+a.id;a.dpDiv.find("[data-handler]").map(function(){var a={prev:function(){window["DP_jQuery_"+dpuuid].datepicker._adjustDate(c,-b,"M")},next:function(){window["DP_jQuery_"+dpuuid].datepicker._adjustDate(c,+b,"M")},hide:function(){window["DP_jQuery_"+dpuuid].datepicker._hideDatepicker()},today:function(){window["DP_jQuery_"+dpuuid].datepicker._gotoToday(c)},selectDay:function(){return window["DP_jQuery_"+dpuuid].datepicker._selectDay(c,+this.getAttribute("data-month"),+this.getAttribute("data-year"),this),!1},selectMonth:function(){return window["DP_jQuery_"+dpuuid].datepicker._selectMonthYear(c,this,"M"),!1},selectYear:function(){return window["DP_jQuery_"+dpuuid].datepicker._selectMonthYear(c,this,"Y"),!1}};$(this).bind(this.getAttribute("data-event"),a[this.getAttribute("data-handler")])})},_generateHTML:function(a){var b=new Date;b=this._daylightSavingAdjust(new Date(b.getFullYear(),b.getMonth(),b.getDate()));var c=this._get(a,"isRTL"),d=this._get(a,"showButtonPanel"),e=this._get(a,"hideIfNoPrevNext"),f=this._get(a,"navigationAsDateFormat"),g=this._getNumberOfMonths(a),h=this._get(a,"showCurrentAtPos"),i=this._get(a,"stepMonths"),j=g[0]!=1||g[1]!=1,k=this._daylightSavingAdjust(a.currentDay?new Date(a.currentYear,a.currentMonth,a.currentDay):new Date(9999,9,9)),l=this._getMinMaxDate(a,"min"),m=this._getMinMaxDate(a,"max"),n=a.drawMonth-h,o=a.drawYear;n<0&&(n+=12,o--);if(m){var p=this._daylightSavingAdjust(new Date(m.getFullYear(),m.getMonth()-g[0]*g[1]+1,m.getDate()));p=l&&p<l?l:p;while(this._daylightSavingAdjust(new Date(o,n,1))>p)n--,n<0&&(n=11,o--)}a.drawMonth=n,a.drawYear=o;var q=this._get(a,"prevText");q=f?this.formatDate(q,this._daylightSavingAdjust(new Date(o,n-i,1)),this._getFormatConfig(a)):q;var r=this._canAdjustMonth(a,-1,o,n)?'<a class="ui-datepicker-prev ui-corner-all" data-handler="prev" data-event="click" title="'+q+'"><span class="ui-icon ui-icon-circle-triangle-'+(c?"e":"w")+'">'+q+"</span></a>":e?"":'<a class="ui-datepicker-prev ui-corner-all ui-state-disabled" title="'+q+'"><span class="ui-icon ui-icon-circle-triangle-'+(c?"e":"w")+'">'+q+"</span></a>",s=this._get(a,"nextText");s=f?this.formatDate(s,this._daylightSavingAdjust(new Date(o,n+i,1)),this._getFormatConfig(a)):s;var t=this._canAdjustMonth(a,1,o,n)?'<a class="ui-datepicker-next ui-corner-all" data-handler="next" data-event="click" title="'+s+'"><span class="ui-icon ui-icon-circle-triangle-'+(c?"w":"e")+'">'+s+"</span></a>":e?"":'<a class="ui-datepicker-next ui-corner-all ui-state-disabled" title="'+s+'"><span class="ui-icon ui-icon-circle-triangle-'+(c?"w":"e")+'">'+s+"</span></a>",u=this._get(a,"currentText"),v=this._get(a,"gotoCurrent")&&a.currentDay?k:b;u=f?this.formatDate(u,v,this._getFormatConfig(a)):u;var w=a.inline?"":'<button type="button" class="ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all" data-handler="hide" data-event="click">'+this._get(a,"closeText")+"</button>",x=d?'<div class="ui-datepicker-buttonpane ui-widget-content">'+(c?w:"")+(this._isInRange(a,v)?'<button type="button" class="ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all" data-handler="today" data-event="click">'+u+"</button>":"")+(c?"":w)+"</div>":"",y=parseInt(this._get(a,"firstDay"),10);y=isNaN(y)?0:y;var z=this._get(a,"showWeek"),A=this._get(a,"dayNames"),B=this._get(a,"dayNamesShort"),C=this._get(a,"dayNamesMin"),D=this._get(a,"monthNames"),E=this._get(a,"monthNamesShort"),F=this._get(a,"beforeShowDay"),G=this._get(a,"showOtherMonths"),H=this._get(a,"selectOtherMonths"),I=this._get(a,"calculateWeek")||this.iso8601Week,J=this._getDefaultDate(a),K="";for(var L=0;L<g[0];L++){var M="";this.maxRows=4;for(var N=0;N<g[1];N++){var O=this._daylightSavingAdjust(new Date(o,n,a.selectedDay)),P=" ui-corner-all",Q="";if(j){Q+='<div class="ui-datepicker-group';if(g[1]>1)switch(N){case 0:Q+=" ui-datepicker-group-first",P=" ui-corner-"+(c?"right":"left");break;case g[1]-1:Q+=" ui-datepicker-group-last",P=" ui-corner-"+(c?"left":"right");break;default:Q+=" ui-datepicker-group-middle",P=""}Q+='">'}Q+='<div class="ui-datepicker-header ui-widget-header ui-helper-clearfix'+P+'">'+(/all|left/.test(P)&&L==0?c?t:r:"")+(/all|right/.test(P)&&L==0?c?r:t:"")+this._generateMonthYearHeader(a,n,o,l,m,L>0||N>0,D,E)+'</div><table class="ui-datepicker-calendar"><thead>'+"<tr>";var R=z?'<th class="ui-datepicker-week-col">'+this._get(a,"weekHeader")+"</th>":"";for(var S=0;S<7;S++){var T=(S+y)%7;R+="<th"+((S+y+6)%7>=5?' class="ui-datepicker-week-end"':"")+">"+'<span title="'+A[T]+'">'+C[T]+"</span></th>"}Q+=R+"</tr></thead><tbody>";var U=this._getDaysInMonth(o,n);o==a.selectedYear&&n==a.selectedMonth&&(a.selectedDay=Math.min(a.selectedDay,U));var V=(this._getFirstDayOfMonth(o,n)-y+7)%7,W=Math.ceil((V+U)/7),X=j?this.maxRows>W?this.maxRows:W:W;this.maxRows=X;var Y=this._daylightSavingAdjust(new Date(o,n,1-V));for(var Z=0;Z<X;Z++){Q+="<tr>";var _=z?'<td class="ui-datepicker-week-col">'+this._get(a,"calculateWeek")(Y)+"</td>":"";for(var S=0;S<7;S++){var ba=F?F.apply(a.input?a.input[0]:null,[Y]):[!0,""],bb=Y.getMonth()!=n,bc=bb&&!H||!ba[0]||l&&Y<l||m&&Y>m;_+='<td class="'+((S+y+6)%7>=5?" ui-datepicker-week-end":"")+(bb?" ui-datepicker-other-month":"")+(Y.getTime()==O.getTime()&&n==a.selectedMonth&&a._keyEvent||J.getTime()==Y.getTime()&&J.getTime()==O.getTime()?" "+this._dayOverClass:"")+(bc?" "+this._unselectableClass+" ui-state-disabled":"")+(bb&&!G?"":" "+ba[1]+(Y.getTime()==k.getTime()?" "+this._currentClass:"")+(Y.getTime()==b.getTime()?" ui-datepicker-today":""))+'"'+((!bb||G)&&ba[2]?' title="'+ba[2]+'"':"")+(bc?"":' data-handler="selectDay" data-event="click" data-month="'+Y.getMonth()+'" data-year="'+Y.getFullYear()+'"')+">"+(bb&&!G?"&#xa0;":bc?'<span class="ui-state-default">'+Y.getDate()+"</span>":'<a class="ui-state-default'+(Y.getTime()==b.getTime()?" ui-state-highlight":"")+(Y.getTime()==k.getTime()?" ui-state-active":"")+(bb?" ui-priority-secondary":"")+'" href="#">'+Y.getDate()+"</a>")+"</td>",Y.setDate(Y.getDate()+1),Y=this._daylightSavingAdjust(Y)}Q+=_+"</tr>"}n++,n>11&&(n=0,o++),Q+="</tbody></table>"+(j?"</div>"+(g[0]>0&&N==g[1]-1?'<div class="ui-datepicker-row-break"></div>':""):""),M+=Q}K+=M}return K+=x+($.browser.msie&&parseInt($.browser.version,10)<7&&!a.inline?'<iframe src="javascript:false;" class="ui-datepicker-cover" frameborder="0"></iframe>':""),a._keyEvent=!1,K},_generateMonthYearHeader:function(a,b,c,d,e,f,g,h){var i=this._get(a,"changeMonth"),j=this._get(a,"changeYear"),k=this._get(a,"showMonthAfterYear"),l='<div class="ui-datepicker-title">',m="";if(f||!i)m+='<span class="ui-datepicker-month">'+g[b]+"</span>";else{var n=d&&d.getFullYear()==c,o=e&&e.getFullYear()==c;m+='<select class="ui-datepicker-month" data-handler="selectMonth" data-event="change">';for(var p=0;p<12;p++)(!n||p>=d.getMonth())&&(!o||p<=e.getMonth())&&(m+='<option value="'+p+'"'+(p==b?' selected="selected"':"")+">"+h[p]+"</option>");m+="</select>"}k||(l+=m+(f||!i||!j?"&#xa0;":""));if(!a.yearshtml){a.yearshtml="";if(f||!j)l+='<span class="ui-datepicker-year">'+c+"</span>";else{var q=this._get(a,"yearRange").split(":"),r=(new Date).getFullYear(),s=function(a){var b=a.match(/c[+-].*/)?c+parseInt(a.substring(1),10):a.match(/[+-].*/)?r+parseInt(a,10):parseInt(a,10);return isNaN(b)?r:b},t=s(q[0]),u=Math.max(t,s(q[1]||""));t=d?Math.max(t,d.getFullYear()):t,u=e?Math.min(u,e.getFullYear()):u,a.yearshtml+='<select class="ui-datepicker-year" data-handler="selectYear" data-event="change">';for(;t<=u;t++)a.yearshtml+='<option value="'+t+'"'+(t==c?' selected="selected"':"")+">"+t+"</option>";a.yearshtml+="</select>",l+=a.yearshtml,a.yearshtml=null}}return l+=this._get(a,"yearSuffix"),k&&(l+=(f||!i||!j?"&#xa0;":"")+m),l+="</div>",l},_adjustInstDate:function(a,b,c){var d=a.drawYear+(c=="Y"?b:0),e=a.drawMonth+(c=="M"?b:0),f=Math.min(a.selectedDay,this._getDaysInMonth(d,e))+(c=="D"?b:0),g=this._restrictMinMax(a,this._daylightSavingAdjust(new Date(d,e,f)));a.selectedDay=g.getDate(),a.drawMonth=a.selectedMonth=g.getMonth(),a.drawYear=a.selectedYear=g.getFullYear(),(c=="M"||c=="Y")&&this._notifyChange(a)},_restrictMinMax:function(a,b){var c=this._getMinMaxDate(a,"min"),d=this._getMinMaxDate(a,"max"),e=c&&b<c?c:b;return e=d&&e>d?d:e,e},_notifyChange:function(a){var b=this._get(a,"onChangeMonthYear");b&&b.apply(a.input?a.input[0]:null,[a.selectedYear,a.selectedMonth+1,a])},_getNumberOfMonths:function(a){var b=this._get(a,"numberOfMonths");return b==null?[1,1]:typeof b=="number"?[1,b]:b},_getMinMaxDate:function(a,b){return this._determineDate(a,this._get(a,b+"Date"),null)},_getDaysInMonth:function(a,b){return 32-this._daylightSavingAdjust(new Date(a,b,32)).getDate()},_getFirstDayOfMonth:function(a,b){return(new Date(a,b,1)).getDay()},_canAdjustMonth:function(a,b,c,d){var e=this._getNumberOfMonths(a),f=this._daylightSavingAdjust(new Date(c,d+(b<0?b:e[0]*e[1]),1));return b<0&&f.setDate(this._getDaysInMonth(f.getFullYear(),f.getMonth())),this._isInRange(a,f)},_isInRange:function(a,b){var c=this._getMinMaxDate(a,"min"),d=this._getMinMaxDate(a,"max");return(!c||b.getTime()>=c.getTime())&&(!d||b.getTime()<=d.getTime())},_getFormatConfig:function(a){var b=this._get(a,"shortYearCutoff");return b=typeof b!="string"?b:(new Date).getFullYear()%100+parseInt(b,10),{shortYearCutoff:b,dayNamesShort:this._get(a,"dayNamesShort"),dayNames:this._get(a,"dayNames"),monthNamesShort:this._get(a,"monthNamesShort"),monthNames:this._get(a,"monthNames")}},_formatDate:function(a,b,c,d){b||(a.currentDay=a.selectedDay,a.currentMonth=a.selectedMonth,a.currentYear=a.selectedYear);var e=b?typeof b=="object"?b:this._daylightSavingAdjust(new Date(d,c,b)):this._daylightSavingAdjust(new Date(a.currentYear,a.currentMonth,a.currentDay));return this.formatDate(this._get(a,"dateFormat"),e,this._getFormatConfig(a))}}),$.fn.datepicker=function(a){if(!this.length)return this;$.datepicker.initialized||($(document).mousedown($.datepicker._checkExternalClick).find("body").append($.datepicker.dpDiv),$.datepicker.initialized=!0);var b=Array.prototype.slice.call(arguments,1);return typeof a!="string"||a!="isDisabled"&&a!="getDate"&&a!="widget"?a=="option"&&arguments.length==2&&typeof arguments[1]=="string"?$.datepicker["_"+a+"Datepicker"].apply($.datepicker,[this[0]].concat(b)):this.each(function(){typeof a=="string"?$.datepicker["_"+a+"Datepicker"].apply($.datepicker,[this].concat(b)):$.datepicker._attachDatepicker(this,a)}):$.datepicker["_"+a+"Datepicker"].apply($.datepicker,[this[0]].concat(b))},$.datepicker=new Datepicker,$.datepicker.initialized=!1,$.datepicker.uuid=(new Date).getTime(),$.datepicker.version="1.8.22",window["DP_jQuery_"+dpuuid]=$})(jQuery);;/*! jQuery UI - v1.8.22 - 2012-07-24
* https://github.com/jquery/jquery-ui
* Includes: jquery.ui.progressbar.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function(a,b){a.widget("ui.progressbar",{options:{value:0,max:100},min:0,_create:function(){this.element.addClass("ui-progressbar ui-widget ui-widget-content ui-corner-all").attr({role:"progressbar","aria-valuemin":this.min,"aria-valuemax":this.options.max,"aria-valuenow":this._value()}),this.valueDiv=a("<div class='ui-progressbar-value ui-widget-header ui-corner-left'></div>").appendTo(this.element),this.oldValue=this._value(),this._refreshValue()},destroy:function(){this.element.removeClass("ui-progressbar ui-widget ui-widget-content ui-corner-all").removeAttr("role").removeAttr("aria-valuemin").removeAttr("aria-valuemax").removeAttr("aria-valuenow"),this.valueDiv.remove(),a.Widget.prototype.destroy.apply(this,arguments)},value:function(a){return a===b?this._value():(this._setOption("value",a),this)},_setOption:function(b,c){b==="value"&&(this.options.value=c,this._refreshValue(),this._value()===this.options.max&&this._trigger("complete")),a.Widget.prototype._setOption.apply(this,arguments)},_value:function(){var a=this.options.value;return typeof a!="number"&&(a=0),Math.min(this.options.max,Math.max(this.min,a))},_percentage:function(){return 100*this._value()/this.options.max},_refreshValue:function(){var a=this.value(),b=this._percentage();this.oldValue!==a&&(this.oldValue=a,this._trigger("change")),this.valueDiv.toggle(a>this.min).toggleClass("ui-corner-right",a===this.options.max).width(b.toFixed(0)+"%"),this.element.attr("aria-valuenow",a)}}),a.extend(a.ui.progressbar,{version:"1.8.22"})})(jQuery);;
/*
 * jQuery Easing v1.3 - http://gsgd.co.uk/sandbox/jquery/easing/
 *
 * Uses the built in easing capabilities added In jQuery 1.1
 * to offer multiple easing options
 *
 * TERMS OF USE - jQuery Easing
 * 
 * Open source under the BSD License. 
 * 
 * Copyright © 2008 George McGinley Smith
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without modification, 
 * are permitted provided that the following conditions are met:
 * 
 * Redistributions of source code must retain the above copyright notice, this list of 
 * conditions and the following disclaimer.
 * Redistributions in binary form must reproduce the above copyright notice, this list 
 * of conditions and the following disclaimer in the documentation and/or other materials 
 * provided with the distribution.
 * 
 * Neither the name of the author nor the names of contributors may be used to endorse 
 * or promote products derived from this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY 
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 *  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
 *  GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED 
 * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 *  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED 
 * OF THE POSSIBILITY OF SUCH DAMAGE. 
 *
*/

// t: current time, b: begInnIng value, c: change In value, d: duration
jQuery.easing['jswing'] = jQuery.easing['swing'];

jQuery.extend( jQuery.easing,
{
	def: 'easeOutQuad',
	swing: function (x, t, b, c, d) {
		//alert(jQuery.easing.default);
		return jQuery.easing[jQuery.easing.def](x, t, b, c, d);
	},
	easeInQuad: function (x, t, b, c, d) {
		return c*(t/=d)*t + b;
	},
	easeOutQuad: function (x, t, b, c, d) {
		return -c *(t/=d)*(t-2) + b;
	},
	easeInOutQuad: function (x, t, b, c, d) {
		if ((t/=d/2) < 1) return c/2*t*t + b;
		return -c/2 * ((--t)*(t-2) - 1) + b;
	},
	easeInCubic: function (x, t, b, c, d) {
		return c*(t/=d)*t*t + b;
	},
	easeOutCubic: function (x, t, b, c, d) {
		return c*((t=t/d-1)*t*t + 1) + b;
	},
	easeInOutCubic: function (x, t, b, c, d) {
		if ((t/=d/2) < 1) return c/2*t*t*t + b;
		return c/2*((t-=2)*t*t + 2) + b;
	},
	easeInQuart: function (x, t, b, c, d) {
		return c*(t/=d)*t*t*t + b;
	},
	easeOutQuart: function (x, t, b, c, d) {
		return -c * ((t=t/d-1)*t*t*t - 1) + b;
	},
	easeInOutQuart: function (x, t, b, c, d) {
		if ((t/=d/2) < 1) return c/2*t*t*t*t + b;
		return -c/2 * ((t-=2)*t*t*t - 2) + b;
	},
	easeInQuint: function (x, t, b, c, d) {
		return c*(t/=d)*t*t*t*t + b;
	},
	easeOutQuint: function (x, t, b, c, d) {
		return c*((t=t/d-1)*t*t*t*t + 1) + b;
	},
	easeInOutQuint: function (x, t, b, c, d) {
		if ((t/=d/2) < 1) return c/2*t*t*t*t*t + b;
		return c/2*((t-=2)*t*t*t*t + 2) + b;
	},
	easeInSine: function (x, t, b, c, d) {
		return -c * Math.cos(t/d * (Math.PI/2)) + c + b;
	},
	easeOutSine: function (x, t, b, c, d) {
		return c * Math.sin(t/d * (Math.PI/2)) + b;
	},
	easeInOutSine: function (x, t, b, c, d) {
		return -c/2 * (Math.cos(Math.PI*t/d) - 1) + b;
	},
	easeInExpo: function (x, t, b, c, d) {
		return (t==0) ? b : c * Math.pow(2, 10 * (t/d - 1)) + b;
	},
	easeOutExpo: function (x, t, b, c, d) {
		return (t==d) ? b+c : c * (-Math.pow(2, -10 * t/d) + 1) + b;
	},
	easeInOutExpo: function (x, t, b, c, d) {
		if (t==0) return b;
		if (t==d) return b+c;
		if ((t/=d/2) < 1) return c/2 * Math.pow(2, 10 * (t - 1)) + b;
		return c/2 * (-Math.pow(2, -10 * --t) + 2) + b;
	},
	easeInCirc: function (x, t, b, c, d) {
		return -c * (Math.sqrt(1 - (t/=d)*t) - 1) + b;
	},
	easeOutCirc: function (x, t, b, c, d) {
		return c * Math.sqrt(1 - (t=t/d-1)*t) + b;
	},
	easeInOutCirc: function (x, t, b, c, d) {
		if ((t/=d/2) < 1) return -c/2 * (Math.sqrt(1 - t*t) - 1) + b;
		return c/2 * (Math.sqrt(1 - (t-=2)*t) + 1) + b;
	},
	easeInElastic: function (x, t, b, c, d) {
		var s=1.70158;var p=0;var a=c;
		if (t==0) return b;  if ((t/=d)==1) return b+c;  if (!p) p=d*.3;
		if (a < Math.abs(c)) { a=c; var s=p/4; }
		else var s = p/(2*Math.PI) * Math.asin (c/a);
		return -(a*Math.pow(2,10*(t-=1)) * Math.sin( (t*d-s)*(2*Math.PI)/p )) + b;
	},
	easeOutElastic: function (x, t, b, c, d) {
		var s=1.70158;var p=0;var a=c;
		if (t==0) return b;  if ((t/=d)==1) return b+c;  if (!p) p=d*.3;
		if (a < Math.abs(c)) { a=c; var s=p/4; }
		else var s = p/(2*Math.PI) * Math.asin (c/a);
		return a*Math.pow(2,-10*t) * Math.sin( (t*d-s)*(2*Math.PI)/p ) + c + b;
	},
	easeInOutElastic: function (x, t, b, c, d) {
		var s=1.70158;var p=0;var a=c;
		if (t==0) return b;  if ((t/=d/2)==2) return b+c;  if (!p) p=d*(.3*1.5);
		if (a < Math.abs(c)) { a=c; var s=p/4; }
		else var s = p/(2*Math.PI) * Math.asin (c/a);
		if (t < 1) return -.5*(a*Math.pow(2,10*(t-=1)) * Math.sin( (t*d-s)*(2*Math.PI)/p )) + b;
		return a*Math.pow(2,-10*(t-=1)) * Math.sin( (t*d-s)*(2*Math.PI)/p )*.5 + c + b;
	},
	easeInBack: function (x, t, b, c, d, s) {
		if (s == undefined) s = 1.70158;
		return c*(t/=d)*t*((s+1)*t - s) + b;
	},
	easeOutBack: function (x, t, b, c, d, s) {
		if (s == undefined) s = 1.70158;
		return c*((t=t/d-1)*t*((s+1)*t + s) + 1) + b;
	},
	easeInOutBack: function (x, t, b, c, d, s) {
		if (s == undefined) s = 1.70158; 
		if ((t/=d/2) < 1) return c/2*(t*t*(((s*=(1.525))+1)*t - s)) + b;
		return c/2*((t-=2)*t*(((s*=(1.525))+1)*t + s) + 2) + b;
	},
	easeInBounce: function (x, t, b, c, d) {
		return c - jQuery.easing.easeOutBounce (x, d-t, 0, c, d) + b;
	},
	easeOutBounce: function (x, t, b, c, d) {
		if ((t/=d) < (1/2.75)) {
			return c*(7.5625*t*t) + b;
		} else if (t < (2/2.75)) {
			return c*(7.5625*(t-=(1.5/2.75))*t + .75) + b;
		} else if (t < (2.5/2.75)) {
			return c*(7.5625*(t-=(2.25/2.75))*t + .9375) + b;
		} else {
			return c*(7.5625*(t-=(2.625/2.75))*t + .984375) + b;
		}
	},
	easeInOutBounce: function (x, t, b, c, d) {
		if (t < d/2) return jQuery.easing.easeInBounce (x, t*2, 0, c, d) * .5 + b;
		return jQuery.easing.easeOutBounce (x, t*2-d, 0, c, d) * .5 + c*.5 + b;
	}
});

/*
 *
 * TERMS OF USE - EASING EQUATIONS
 * 
 * Open source under the BSD License. 
 * 
 * Copyright © 2001 Robert Penner
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without modification, 
 * are permitted provided that the following conditions are met:
 * 
 * Redistributions of source code must retain the above copyright notice, this list of 
 * conditions and the following disclaimer.
 * Redistributions in binary form must reproduce the above copyright notice, this list 
 * of conditions and the following disclaimer in the documentation and/or other materials 
 * provided with the distribution.
 * 
 * Neither the name of the author nor the names of contributors may be used to endorse 
 * or promote products derived from this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY 
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 *  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
 *  GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED 
 * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 *  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED 
 * OF THE POSSIBILITY OF SUCH DAMAGE. 
 *
 */
/*
 * jQuery FlexSlider v2.2.0
 * Copyright 2012 WooThemes
 * Contributing Author: Tyler Smith
 */
;
(function ($) {

    //FlexSlider: Object Instance
    $.flexslider = function (el, options) {
        var slider = $(el);

        // making variables public
        slider.vars = $.extend({}, $.flexslider.defaults, options);

        var namespace = slider.vars.namespace,
            msGesture = window.navigator && window.navigator.msPointerEnabled && window.MSGesture,
            touch = (("ontouchstart" in window) || msGesture || window.DocumentTouch && document instanceof DocumentTouch) && slider.vars.touch,
            // depricating this idea, as devices are being released with both of these events
            //eventType = (touch) ? "touchend" : "click",
            eventType = "click touchend MSPointerUp",
            watchedEvent = "",
            watchedEventClearTimer,
            vertical = slider.vars.direction === "vertical",
            reverse = slider.vars.reverse,
            carousel = (slider.vars.itemWidth > 0),
            fade = slider.vars.animation === "fade",
            asNav = slider.vars.asNavFor !== "",
            methods = {},
            focused = true;

        // Store a reference to the slider object
        $.data(el, "flexslider", slider);

        // Private slider methods
        methods = {
            init: function () {
                slider.animating = false;
                // Get current slide and make sure it is a number
                slider.currentSlide = parseInt((slider.vars.startAt ? slider.vars.startAt : 0));
                if (isNaN(slider.currentSlide)) slider.currentSlide = 0;
                slider.animatingTo = slider.currentSlide;
                slider.atEnd = (slider.currentSlide === 0 || slider.currentSlide === slider.last);
                slider.containerSelector = slider.vars.selector.substr(0, slider.vars.selector.search(' '));
                slider.slides = $(slider.vars.selector, slider);
                slider.container = $(slider.containerSelector, slider);
                slider.count = slider.slides.length;
                // SYNC:
                slider.syncExists = $(slider.vars.sync).length > 0;
                // SLIDE:
                if (slider.vars.animation === "slide") slider.vars.animation = "swing";
                slider.prop = (vertical) ? "top" : "marginLeft";
                slider.args = {};
                // SLIDESHOW:
                slider.manualPause = false;
                slider.stopped = false;
                slider.playing = false;
                slider.islast = false;
                //PAUSE WHEN INVISIBLE
                slider.started = false;
                slider.startTimeout = null;
                // TOUCH/USECSS:
                slider.transitions = !slider.vars.video && !fade && slider.vars.useCSS && (function () {
                    var obj = document.createElement('div'),
                        props = ['perspectiveProperty', 'WebkitPerspective', 'MozPerspective', 'OPerspective', 'msPerspective'];
                    for (var i in props) {
                        if (obj.style[props[i]] !== undefined) {
                            slider.pfx = props[i].replace('Perspective', '').toLowerCase();
                            slider.prop = "-" + slider.pfx + "-transform";
                            return true;
                        }
                    }
                    return false;
                }());
                // CONTROLSCONTAINER:
                if (slider.vars.controlsContainer !== "") slider.controlsContainer = $(slider.vars.controlsContainer).length > 0 && $(slider.vars.controlsContainer);
                // MANUAL:
                if (slider.vars.manualControls !== "") slider.manualControls = $(slider.vars.manualControls).length > 0 && $(slider.vars.manualControls);

                // RANDOMIZE:
                if (slider.vars.randomize) {
                    slider.slides.sort(function () { return (Math.round(Math.random()) - 0.5); });
                    slider.container.empty().append(slider.slides);
                }

                slider.doMath();

                // INIT
                slider.setup("init");

                // CONTROLNAV:
                if (slider.vars.controlNav) methods.controlNav.setup();

                // DIRECTIONNAV:
                if (slider.vars.directionNav) methods.directionNav.setup();

                // KEYBOARD:
                if (slider.vars.keyboard && ($(slider.containerSelector).length === 1 || slider.vars.multipleKeyboard)) {
                    $(document).bind('keyup', function (event) {
                        var keycode = event.keyCode;
                        if (!slider.animating && (keycode === 39 || keycode === 37)) {
                            var target = (keycode === 39) ? slider.getTarget('next') :
                                         (keycode === 37) ? slider.getTarget('prev') : false;
                            slider.flexAnimate(target, slider.vars.pauseOnAction);
                        }
                    });
                }
                // MOUSEWHEEL:
                if (slider.vars.mousewheel) {
                    slider.bind('mousewheel', function (event, delta, deltaX, deltaY) {
                        event.preventDefault();
                        var target = (delta < 0) ? slider.getTarget('next') : slider.getTarget('prev');
                        slider.flexAnimate(target, slider.vars.pauseOnAction);
                    });
                }

                // PAUSEPLAY
                if (slider.vars.pausePlay) methods.pausePlay.setup();

                //PAUSE WHEN INVISIBLE
                if (slider.vars.slideshow && slider.vars.pauseInvisible) methods.pauseInvisible.init();

                // SLIDSESHOW
                if (slider.vars.slideshow) {
                    if (slider.vars.pauseOnHover) {
                        slider.hover(function () {
                            if (!slider.manualPlay && !slider.manualPause) slider.pause();
                        }, function () {
                            if (!slider.manualPause && !slider.manualPlay && !slider.stopped) slider.play();
                        });
                    }
                    // initialize animation
                    //If we're visible, or we don't use PageVisibility API
                    if (slider.vars.autoStart) {
                        if (!slider.vars.pauseInvisible || !methods.pauseInvisible.isHidden()) {
                            (slider.vars.initDelay > 0) ? slider.startTimeout = setTimeout(slider.play, slider.vars.initDelay) : slider.play();
                        }
                    }
                }

                // ASNAV:
                if (asNav) methods.asNav.setup();

                // TOUCH
                if (touch && slider.vars.touch) methods.touch();

                // FADE&&SMOOTHHEIGHT || SLIDE:
                if (!fade || (fade && slider.vars.smoothHeight)) $(window).bind("resize orientationchange focus", methods.resize);

                slider.find("img").attr("draggable", "false");

                // API: start() Callback
                setTimeout(function () {
                    slider.vars.start(slider);
                }, 200);
            },
            asNav: {
                setup: function () {
                    slider.asNav = true;
                    slider.animatingTo = Math.floor(slider.currentSlide / slider.move);
                    slider.currentItem = slider.currentSlide;
                    slider.slides.removeClass(namespace + "active-slide").eq(slider.currentItem).addClass(namespace + "active-slide");
                    if (!msGesture) {
                        slider.slides.click(function (e) {
                            e.preventDefault();
                            var $slide = $(this),
                                target = $slide.index();
                            var posFromLeft = $slide.offset().left - $(slider).scrollLeft(); // Find position of slide relative to left of slider container
                            if (posFromLeft <= 0 && $slide.hasClass(namespace + 'active-slide')) {
                                slider.flexAnimate(slider.getTarget("prev"), true);
                            } else if (!$(slider.vars.asNavFor).data('flexslider').animating && !$slide.hasClass(namespace + "active-slide")) {
                                slider.direction = (slider.currentItem < target) ? "next" : "prev";
                                slider.flexAnimate(target, slider.vars.pauseOnAction, false, true, true);
                            }
                        });
                    } else {
                        el._slider = slider;
                        slider.slides.each(function () {
                            var that = this;
                            that._gesture = new MSGesture();
                            that._gesture.target = that;
                            that.addEventListener("MSPointerDown", function (e) {
                                e.preventDefault();
                                if (e.currentTarget._gesture)
                                    e.currentTarget._gesture.addPointer(e.pointerId);
                            }, false);
                            that.addEventListener("MSGestureTap", function (e) {
                                e.preventDefault();
                                var $slide = $(this),
                                    target = $slide.index();
                                if (!$(slider.vars.asNavFor).data('flexslider').animating && !$slide.hasClass('active')) {
                                    slider.direction = (slider.currentItem < target) ? "next" : "prev";
                                    slider.flexAnimate(target, slider.vars.pauseOnAction, false, true, true);
                                }
                            });
                        });
                    }
                }
            },
            controlNav: {
                setup: function () {
                    if (!slider.manualControls) {
                        methods.controlNav.setupPaging();
                    } else { // MANUALCONTROLS:
                        methods.controlNav.setupManual();
                    }
                },
                setupPaging: function () {
                    var type = (slider.vars.controlNav === "thumbnails") ? 'control-thumbs' : 'control-paging',
                        j = 1,
                        item,
                        slide;

                    slider.controlNavScaffold = $('<ol class="' + namespace + 'control-nav ' + namespace + type + '"></ol>');

                    if (slider.pagingCount > 1) {
                        for (var i = 0; i < slider.pagingCount; i++) {
                            slide = slider.slides.eq(i);
                            item = (slider.vars.controlNav === "thumbnails") ? '<img src="' + slide.attr('data-thumb') + '"/>' : '<a class=\"ecomSliderBottomButton\"></a>';
                            if ('thumbnails' === slider.vars.controlNav && true === slider.vars.thumbCaptions) {
                                var captn = slide.attr('data-thumbcaption');
                                if ('' != captn && undefined != captn) item += '<span class="' + namespace + 'caption">' + captn + '</span>';
                            }
                            slider.controlNavScaffold.append('<li class="ecomSliderBottomPanel">' + item + '</li>');
                            j++;
                        }
                    }

                    // CONTROLSCONTAINER:
                    (slider.controlsContainer) ? $(slider.controlsContainer).append(slider.controlNavScaffold) : slider.append(slider.controlNavScaffold);
                    methods.controlNav.set();

                    methods.controlNav.active();

                    slider.controlNavScaffold.delegate('a, img', eventType, function (event) {
                        event.preventDefault();

                        if (watchedEvent === "" || watchedEvent === event.type) {
                            var $this = $(this),
                                target = slider.controlNav.index($this);

                            if (!$this.hasClass(namespace + 'active')) {
                                slider.direction = (target > slider.currentSlide) ? "next" : "prev";
                                slider.flexAnimate(target, slider.vars.pauseOnAction);
                            }
                        }

                        // setup flags to prevent event duplication
                        if (watchedEvent === "") {
                            watchedEvent = event.type;
                        }
                        methods.setToClearWatchedEvent();

                    });
                },
                setupManual: function () {
                    slider.controlNav = slider.manualControls;
                    methods.controlNav.active();

                    slider.controlNav.bind(eventType, function (event) {
                        event.preventDefault();

                        if (watchedEvent === "" || watchedEvent === event.type) {
                            var $this = $(this),
                                target = slider.controlNav.index($this);

                            if (!$this.hasClass(namespace + 'active')) {
                                (target > slider.currentSlide) ? slider.direction = "next" : slider.direction = "prev";
                                slider.flexAnimate(target, slider.vars.pauseOnAction);
                            }
                        }

                        // setup flags to prevent event duplication
                        if (watchedEvent === "") {
                            watchedEvent = event.type;
                        }
                        methods.setToClearWatchedEvent();
                    });
                },
                set: function () {
                    var selector = (slider.vars.controlNav === "thumbnails") ? 'img' : 'a';
                    slider.controlNav = $('.' + namespace + 'control-nav li ' + selector, (slider.controlsContainer) ? slider.controlsContainer : slider);
                },
                active: function () {
                    slider.controlNav.removeClass("ecomSliderBottomButtonActive").eq(slider.animatingTo).addClass("ecomSliderBottomButtonActive");
                },
                update: function (action, pos) {
                    if (slider.pagingCount > 1 && action === "add") {
                        slider.controlNavScaffold.append($('<li><a>' + slider.count + '</a></li>'));
                    } else if (slider.pagingCount === 1) {
                        slider.controlNavScaffold.find('li').remove();
                    } else {
                        slider.controlNav.eq(pos).closest('li').remove();
                    }
                    methods.controlNav.set();
                    (slider.pagingCount > 1 && slider.pagingCount !== slider.controlNav.length) ? slider.update(pos, action) : methods.controlNav.active();
                }
            },
            directionNav: {
                setup: function () {
                    var directionNavScaffold = $('<ul class="' + namespace + 'direction-nav"><li><a class="ecomSliderRightButton" href="#"></a></li><li><a class="ecomSliderLeftButton" href="#"></a></li></ul>');

                    // CONTROLSCONTAINER:
                    if (slider.controlsContainer) {
                        $(slider.controlsContainer).append(directionNavScaffold);
                        slider.directionNav = $('.' + namespace + 'direction-nav li a', slider.controlsContainer);
                    } else {
                        slider.append(directionNavScaffold);
                        slider.directionNav = $('.' + namespace + 'direction-nav li a', slider);
                    }

                    methods.directionNav.update();

                    slider.directionNav.bind(eventType, function (event) {
                        event.preventDefault();
                        var target;

                        if (watchedEvent === "" || watchedEvent === event.type) {
                            target = ($(this).hasClass('ecomSliderRightButton')) ? slider.getTarget('next') : slider.getTarget('prev');
                            slider.flexAnimate(target, slider.vars.pauseOnAction);
                        }

                        // setup flags to prevent event duplication
                        if (watchedEvent === "") {
                            watchedEvent = event.type;
                        }
                        methods.setToClearWatchedEvent();
                    });
                },
                update: function () {
                    var disabledClass = namespace + 'disabled';
                    if (slider.pagingCount === 1) {
                        slider.directionNav.addClass(disabledClass).attr('tabindex', '-1');
                    } else if (!slider.vars.animationLoop) {
                        if (slider.animatingTo === 0) {
                            slider.directionNav.removeClass(disabledClass).filter('.' + namespace + "prev").addClass(disabledClass).attr('tabindex', '-1');
                        } else if (slider.animatingTo === slider.last) {
                            slider.directionNav.removeClass(disabledClass).filter('.' + namespace + "next").addClass(disabledClass).attr('tabindex', '-1');
                        } else {
                            slider.directionNav.removeClass(disabledClass).removeAttr('tabindex');
                        }
                    } else {
                        slider.directionNav.removeClass(disabledClass).removeAttr('tabindex');
                    }
                }
            },
            pausePlay: {
                setup: function () {
                    var pausePlayScaffold = $('<div class="' + namespace + 'pauseplay"><a></a></div>');

                    // CONTROLSCONTAINER:
                    if (slider.controlsContainer) {
                        slider.controlsContainer.append(pausePlayScaffold);
                        slider.pausePlay = $('.' + namespace + 'pauseplay a', slider.controlsContainer);
                    } else {
                        slider.append(pausePlayScaffold);
                        slider.pausePlay = $('.' + namespace + 'pauseplay a', slider);
                    }

                    methods.pausePlay.update((slider.vars.slideshow) ? namespace + 'pause' : namespace + 'play');

                    slider.pausePlay.bind(eventType, function (event) {
                        event.preventDefault();

                        if (watchedEvent === "" || watchedEvent === event.type) {
                            if ($(this).hasClass(namespace + 'pause')) {
                                slider.manualPause = true;
                                slider.manualPlay = false;
                                slider.pause();
                            } else {
                                slider.manualPause = false;
                                slider.manualPlay = true;
                                slider.play();
                            }
                        }

                        // setup flags to prevent event duplication
                        if (watchedEvent === "") {
                            watchedEvent = event.type;
                        }
                        methods.setToClearWatchedEvent();
                    });
                },
                update: function (state) {
                    (state === "play") ? slider.pausePlay.removeClass(namespace + 'pause').addClass(namespace + 'play').html(slider.vars.playText) : slider.pausePlay.removeClass(namespace + 'play').addClass(namespace + 'pause').html(slider.vars.pauseText);
                }
            },
            touch: function () {
                var startX,
                  startY,
                  offset,
                  cwidth,
                  dx,
                  startT,
                  scrolling = false,
                  localX = 0,
                  localY = 0,
                  accDx = 0;

                if (!msGesture) {
                    el.addEventListener('touchstart', onTouchStart, false);

                    function onTouchStart(e) {
                        if (slider.animating) {
                            e.preventDefault();
                        } else if ((window.navigator.msPointerEnabled) || e.touches.length === 1) {
                            slider.pause();
                            // CAROUSEL:
                            cwidth = (vertical) ? slider.h : slider.w;
                            startT = Number(new Date());
                            // CAROUSEL:

                            // Local vars for X and Y points.
                            localX = e.touches[0].pageX;
                            localY = e.touches[0].pageY;

                            offset = (carousel && reverse && slider.animatingTo === slider.last) ? 0 :
                                     (carousel && reverse) ? slider.limit - (((slider.itemW + slider.vars.itemMargin) * slider.move) * slider.animatingTo) :
                                     (carousel && slider.currentSlide === slider.last) ? slider.limit :
                                     (carousel) ? ((slider.itemW + slider.vars.itemMargin) * slider.move) * slider.currentSlide :
                                     (reverse) ? (slider.last - slider.currentSlide + slider.cloneOffset) * cwidth : (slider.currentSlide + slider.cloneOffset) * cwidth;
                            startX = (vertical) ? localY : localX;
                            startY = (vertical) ? localX : localY;

                            el.addEventListener('touchmove', onTouchMove, false);
                            el.addEventListener('touchend', onTouchEnd, false);
                        }
                    }

                    function onTouchMove(e) {
                        // Local vars for X and Y points.

                        localX = e.touches[0].pageX;
                        localY = e.touches[0].pageY;

                        dx = (vertical) ? startX - localY : startX - localX;
                        scrolling = (vertical) ? (Math.abs(dx) < Math.abs(localX - startY)) : (Math.abs(dx) < Math.abs(localY - startY));

                        var fxms = 500;

                        if (!scrolling || Number(new Date()) - startT > fxms) {
                            e.preventDefault();
                            if (!fade && slider.transitions) {
                                if (!slider.vars.animationLoop) {
                                    dx = dx / ((slider.currentSlide === 0 && dx < 0 || slider.currentSlide === slider.last && dx > 0) ? (Math.abs(dx) / cwidth + 2) : 1);
                                }
                                slider.setProps(offset + dx, "setTouch");
                            }
                        }
                    }

                    function onTouchEnd(e) {
                        // finish the touch by undoing the touch session
                        el.removeEventListener('touchmove', onTouchMove, false);

                        if (slider.animatingTo === slider.currentSlide && !scrolling && !(dx === null)) {
                            var updateDx = (reverse) ? -dx : dx,
                                target = (updateDx > 0) ? slider.getTarget('next') : slider.getTarget('prev');

                            if (slider.canAdvance(target) && (Number(new Date()) - startT < 550 && Math.abs(updateDx) > 50 || Math.abs(updateDx) > cwidth / 2)) {
                                slider.flexAnimate(target, slider.vars.pauseOnAction);
                            } else {
                                if (!fade) slider.flexAnimate(slider.currentSlide, slider.vars.pauseOnAction, true);
                            }
                        }
                        el.removeEventListener('touchend', onTouchEnd, false);

                        startX = null;
                        startY = null;
                        dx = null;
                        offset = null;
                    }
                } else {
                    el.style.msTouchAction = "none";
                    el._gesture = new MSGesture();
                    el._gesture.target = el;
                    el.addEventListener("MSPointerDown", onMSPointerDown, false);
                    el._slider = slider;
                    el.addEventListener("MSGestureChange", onMSGestureChange, false);
                    el.addEventListener("MSGestureEnd", onMSGestureEnd, false);

                    function onMSPointerDown(e) {
                        e.stopPropagation();
                        if (slider.animating) {
                            e.preventDefault();
                        } else {
                            slider.pause();
                            el._gesture.addPointer(e.pointerId);
                            accDx = 0;
                            cwidth = (vertical) ? slider.h : slider.w;
                            startT = Number(new Date());
                            // CAROUSEL:

                            offset = (carousel && reverse && slider.animatingTo === slider.last) ? 0 :
                                (carousel && reverse) ? slider.limit - (((slider.itemW + slider.vars.itemMargin) * slider.move) * slider.animatingTo) :
                                    (carousel && slider.currentSlide === slider.last) ? slider.limit :
                                        (carousel) ? ((slider.itemW + slider.vars.itemMargin) * slider.move) * slider.currentSlide :
                                            (reverse) ? (slider.last - slider.currentSlide + slider.cloneOffset) * cwidth : (slider.currentSlide + slider.cloneOffset) * cwidth;
                        }
                    }

                    function onMSGestureChange(e) {
                        e.stopPropagation();
                        var slider = e.target._slider;
                        if (!slider) {
                            return;
                        }
                        var transX = -e.translationX,
                            transY = -e.translationY;

                        //Accumulate translations.
                        accDx = accDx + ((vertical) ? transY : transX);
                        dx = accDx;
                        scrolling = (vertical) ? (Math.abs(accDx) < Math.abs(-transX)) : (Math.abs(accDx) < Math.abs(-transY));

                        if (e.detail === e.MSGESTURE_FLAG_INERTIA) {
                            setImmediate(function () {
                                el._gesture.stop();
                            });

                            return;
                        }

                        if (!scrolling || Number(new Date()) - startT > 500) {
                            e.preventDefault();
                            if (!fade && slider.transitions) {
                                if (!slider.vars.animationLoop) {
                                    dx = accDx / ((slider.currentSlide === 0 && accDx < 0 || slider.currentSlide === slider.last && accDx > 0) ? (Math.abs(accDx) / cwidth + 2) : 1);
                                }
                                slider.setProps(offset + dx, "setTouch");
                            }
                        }
                    }

                    function onMSGestureEnd(e) {
                        e.stopPropagation();
                        var slider = e.target._slider;
                        if (!slider) {
                            return;
                        }
                        if (slider.animatingTo === slider.currentSlide && !scrolling && !(dx === null)) {
                            var updateDx = (reverse) ? -dx : dx,
                                target = (updateDx > 0) ? slider.getTarget('next') : slider.getTarget('prev');

                            if (slider.canAdvance(target) && (Number(new Date()) - startT < 550 && Math.abs(updateDx) > 50 || Math.abs(updateDx) > cwidth / 2)) {
                                slider.flexAnimate(target, slider.vars.pauseOnAction);
                            } else {
                                if (!fade) slider.flexAnimate(slider.currentSlide, slider.vars.pauseOnAction, true);
                            }
                        }

                        startX = null;
                        startY = null;
                        dx = null;
                        offset = null;
                        accDx = 0;
                    }
                }
            },
            resize: function () {
                if (!slider.animating && slider.is(':visible')) {
                    if (!carousel) slider.doMath();

                    if (fade) {
                        // SMOOTH HEIGHT:
                        methods.smoothHeight();
                    } else if (carousel) { //CAROUSEL:
                        slider.slides.width(slider.computedW);
                        slider.update(slider.pagingCount);
                        slider.setProps();
                    }
                    else if (vertical) { //VERTICAL:
                        slider.viewport.height(slider.h);
                        slider.setProps(slider.h, "setTotal");
                    } else {
                        // SMOOTH HEIGHT:
                        if (slider.vars.smoothHeight) methods.smoothHeight();
                        slider.newSlides.width(slider.computedW);
                        slider.setProps(slider.computedW, "setTotal");
                    }
                }
            },
            smoothHeight: function (dur) {
                if (!vertical || fade) {
                    var $obj = (fade) ? slider : slider.viewport;
                    (dur) ? $obj.animate({ "height": slider.slides.eq(slider.animatingTo).height() }, dur) : $obj.height(slider.slides.eq(slider.animatingTo).height());
                }
            },
            sync: function (action) {
                var $obj = $(slider.vars.sync).data("flexslider"),
                    target = slider.animatingTo;

                switch (action) {
                    case "animate": $obj.flexAnimate(target, slider.vars.pauseOnAction, false, true); break;
                    case "play": if (!$obj.playing && !$obj.asNav) { $obj.play(); } break;
                    case "pause": $obj.pause(); break;
                }
            },
            pauseInvisible: {
                visProp: null,
                init: function () {
                    var prefixes = ['webkit', 'moz', 'ms', 'o'];

                    if ('hidden' in document) return 'hidden';
                    for (var i = 0; i < prefixes.length; i++) {
                        if ((prefixes[i] + 'Hidden') in document)
                            methods.pauseInvisible.visProp = prefixes[i] + 'Hidden';
                    }
                    if (methods.pauseInvisible.visProp) {
                        var evtname = methods.pauseInvisible.visProp.replace(/[H|h]idden/, '') + 'visibilitychange';
                        document.addEventListener(evtname, function () {
                            if (methods.pauseInvisible.isHidden()) {
                                if (slider.startTimeout) clearTimeout(slider.startTimeout); //If clock is ticking, stop timer and prevent from starting while invisible
                                else slider.pause(); //Or just pause
                            }
                            else {
                                if (slider.started) slider.play(); //Initiated before, just play
                                else (slider.vars.initDelay > 0) ? setTimeout(slider.play, slider.vars.initDelay) : slider.play(); //Didn't init before: simply init or wait for it
                            }
                        });
                    }
                },
                isHidden: function () {
                    return document[methods.pauseInvisible.visProp] || false;
                }
            },
            setToClearWatchedEvent: function () {
                clearTimeout(watchedEventClearTimer);
                watchedEventClearTimer = setTimeout(function () {
                    watchedEvent = "";
                }, 3000);
            }
        }
        // public methods
        slider.flexAnimate = function (target, pause, override, withSync, fromNav) {
            if (!slider.vars.animationLoop && target !== slider.currentSlide) {
                slider.direction = (target > slider.currentSlide) ? "next" : "prev";
            }

            if (asNav && slider.pagingCount === 1) slider.direction = (slider.currentItem < target) ? "next" : "prev";

            if (!slider.animating && (slider.canAdvance(target, fromNav) || override) && slider.is(":visible")) {
                if (asNav && withSync) {
                    var master = $(slider.vars.asNavFor).data('flexslider');
                    slider.atEnd = target === 0 || target === slider.count - 1;
                    master.flexAnimate(target, true, false, true, fromNav);
                    slider.direction = (slider.currentItem < target) ? "next" : "prev";
                    master.direction = slider.direction;

                    if (Math.ceil((target + 1) / slider.visible) - 1 !== slider.currentSlide && target !== 0) {
                        slider.currentItem = target;
                        slider.slides.removeClass(namespace + "active-slide").eq(target).addClass(namespace + "active-slide");
                        target = Math.floor(target / slider.visible);
                    } else {
                        slider.currentItem = target;
                        slider.slides.removeClass(namespace + "active-slide").eq(target).addClass(namespace + "active-slide");
                        return false;
                    }
                }

                slider.animating = true;
                slider.animatingTo = target;

                // SLIDESHOW:
                if (pause) slider.pause();

                // API: before() animation Callback
                slider.vars.before(slider);

                // SYNC:
                if (slider.syncExists && !fromNav) methods.sync("animate");

                // CONTROLNAV
                if (slider.vars.controlNav) methods.controlNav.active();

                // !CAROUSEL:
                // CANDIDATE: slide active class (for add/remove slide)
                if (!carousel) slider.slides.removeClass(namespace + 'active-slide').eq(target).addClass(namespace + 'active-slide');

                // INFINITE LOOP:
                // CANDIDATE: atEnd
                slider.atEnd = target === 0 || target === slider.last;

                // DIRECTIONNAV:
                if (slider.vars.directionNav) methods.directionNav.update();

                if (target === slider.last) {
                    // API: end() of cycle Callback
                    slider.vars.end(slider);
                    // SLIDESHOW && !INFINITE LOOP:
                    if (!slider.vars.animationLoop) slider.pause();
                }

                // SLIDE:
                if (!fade) {
                    var dimension = (vertical) ? slider.slides.filter(':first').height() : slider.computedW,
                        margin, slideString, calcNext;

                    // INFINITE LOOP / REVERSE:
                    if (carousel) {
                        //margin = (slider.vars.itemWidth > slider.w) ? slider.vars.itemMargin * 2 : slider.vars.itemMargin;
                        margin = slider.vars.itemMargin;
                        calcNext = ((slider.itemW + margin) * slider.move) * slider.animatingTo;
                        slideString = (calcNext > slider.limit && slider.visible !== 1) ? slider.limit : calcNext;
                    } else if (slider.currentSlide === 0 && target === slider.count - 1 && slider.vars.animationLoop && slider.direction !== "next") {
                        slideString = (reverse) ? (slider.count + slider.cloneOffset) * dimension : 0;
                    } else if (slider.currentSlide === slider.last && target === 0 && slider.vars.animationLoop && slider.direction !== "prev") {
                        slideString = (reverse) ? 0 : (slider.count + 1) * dimension;
                    } else {
                        slideString = (reverse) ? ((slider.count - 1) - target + slider.cloneOffset) * dimension : (target + slider.cloneOffset) * dimension;
                    }
                    slider.setProps(slideString, "", slider.vars.animationSpeed);
                    if (slider.transitions) {
                        slider.islast = (slider.animatingTo === slider.last);
                        if (!slider.vars.animationLoop || !slider.atEnd) {
                            slider.animating = false;
                            slider.currentSlide = slider.animatingTo;
                        }
                        if (slider.vars.animationLoop || !slider.islast) {
                            slider.container.unbind("webkitTransitionEnd transitionend");
                            slider.container.bind("webkitTransitionEnd transitionend", function () {
                                slider.wrapup(dimension);
                            });
                        }
                        else {
                            slider.islast = false;
                            slider.currentSlide = slider.animatingTo;
                            slider.animating = false;
                            slider.stop();
                        }
                    } else {
                        if (!slider.vars.animationLoop || !slider.islast) {
                            slider.container.animate(slider.args, slider.vars.animationSpeed, slider.vars.easing, function () {
                                slider.wrapup(dimension);
                                slider.islast = (slider.animatingTo === slider.last);
                            });
                        }
                        else {
                            slider.islast = false;
                            slider.animating = false;
                            slider.stop();
                        }
                    }
                } else { // FADE:
                    if (!touch) {
                        //slider.slides.eq(slider.currentSlide).fadeOut(slider.vars.animationSpeed, slider.vars.easing);
                        //slider.slides.eq(target).fadeIn(slider.vars.animationSpeed, slider.vars.easing, slider.wrapup);
                        if (!slider.vars.animationLoop || !slider.islast) {
                            slider.slides.eq(slider.currentSlide).css({ "zIndex": 1 }).animate({ "opacity": 0 }, slider.vars.animationSpeed, slider.vars.easing);
                            slider.slides.eq(target).css({ "zIndex": 2 }).animate({ "opacity": 1 }, slider.vars.animationSpeed, slider.vars.easing, slider.wrapup);

                            slider.islast = (slider.animatingTo === slider.last);
                        }
                        else {
                            slider.islast = false;
                            slider.animating = false;
                            slider.stop();
                        }
                    } else {
                        slider.slides.eq(slider.currentSlide).css({ "opacity": 0, "zIndex": 1 });
                        slider.slides.eq(target).css({ "opacity": 1, "zIndex": 2 });
                        slider.wrapup(dimension);
                    }
                }
                // SMOOTH HEIGHT:
                if (slider.vars.smoothHeight) methods.smoothHeight(slider.vars.animationSpeed);
            }
        }
        slider.wrapup = function (dimension) {
            // SLIDE:
            if (!fade && !carousel) {
                if (slider.currentSlide === 0 && slider.animatingTo === slider.last && slider.vars.animationLoop) {
                    slider.setProps(dimension, "jumpEnd");
                } else if (slider.currentSlide === slider.last && slider.animatingTo === 0 && slider.vars.animationLoop) {
                    slider.setProps(dimension, "jumpStart");
                }
            }
            slider.animating = false;
            slider.currentSlide = slider.animatingTo;
            // API: after() animation Callback
            slider.vars.after(slider);
        }
        // SLIDESHOW:
        slider.animateSlides = function () {
            if (!slider.animating && focused) {
                slider.flexAnimate(slider.getTarget("next"));
            }
        }
        // SLIDESHOW:
        slider.pause = function () {
            clearInterval(slider.animatedSlides);
            slider.animatedSlides = null;
            slider.playing = false;
            // PAUSEPLAY:
            if (slider.vars.pausePlay) methods.pausePlay.update("play");
            // SYNC:
            if (slider.syncExists) methods.sync("pause");
        }
        // SLIDESHOW:
        slider.play = function () {
            if (slider.playing) clearInterval(slider.animatedSlides);
            slider.animatedSlides = slider.animatedSlides || setInterval(slider.animateSlides, slider.vars.slideshowSpeed);
            slider.started = slider.playing = true;
            // PAUSEPLAY:
            if (slider.vars.pausePlay) methods.pausePlay.update("pause");
            // SYNC:
            if (slider.syncExists) methods.sync("play");
        }
        // STOP:
        slider.stop = function () {
            slider.pause();
            slider.stopped = true;
        }
        slider.canAdvance = function (target, fromNav) {
            // ASNAV:
            var last = (asNav) ? slider.pagingCount - 1 : slider.last;
            return (fromNav) ? true :
                   (asNav && slider.currentItem === slider.count - 1 && target === 0 && slider.direction === "prev") ? true :
                   (asNav && slider.currentItem === 0 && target === slider.pagingCount - 1 && slider.direction !== "next") ? false :
                   (target === slider.currentSlide && !asNav) ? false :
                   (slider.vars.animationLoop) ? true :
                   (slider.atEnd && slider.currentSlide === 0 && target === last && slider.direction !== "next") ? false :
                   (slider.atEnd && slider.currentSlide === last && target === 0 && slider.direction === "next") ? false :
                   true;
        }
        slider.getTarget = function (dir) {
            slider.direction = dir;
            if (dir === "next") {
                return (slider.currentSlide === slider.last) ? 0 : slider.currentSlide + 1;
            } else {
                return (slider.currentSlide === 0) ? slider.last : slider.currentSlide - 1;
            }
        }
        slider.destroy = function () {
            slider.pause(); // pause the timer
            slider.transitions = false; // kill transitions
            if (slider.vars.controlNav && slider.vars.manualControls == "") slider.controlNav.closest('.flex-control-nav').remove();
            if (slider.vars.directionNav) slider.directionNav.closest('.flex-direction-nav').remove();
            if (slider.vars.pausePlay) slider.pausePlay.closest('.flex-pauseplay').remove();
            if (slider.vars.keyboardNav && $('ul.slides').length == 1) $(document).unbind('keyup', keyboardMove);
            if (slider.vars.mousewheel) slider.unbind(slider.mousewheelEvent);
            if (slider.vars.animationLoop) slider.find('.clone').remove();
            if (slider.vertical) slider.height("auto");
            slider.find('.flex-viewport ul').unwrap(); // removes the .flex-viewport div
            slider.find('.slides').removeAttr('style').find('li').removeAttr('style');
            slider.removeData('flexslider');
            $(window).unbind("resize.flexslider-" + slider.id + " focus.flexslider-" + slider.id)
        }
        // SLIDE:
        slider.setProps = function (pos, special, dur) {
            var target = (function () {
                var posCheck = (pos) ? pos : ((slider.itemW + slider.vars.itemMargin) * slider.move) * slider.animatingTo,
                    posCalc = (function () {
                        if (carousel) {
                            return (special === "setTouch") ? pos :
                                   (reverse && slider.animatingTo === slider.last) ? 0 :
                                   (reverse) ? slider.limit - (((slider.itemW + slider.vars.itemMargin) * slider.move) * slider.animatingTo) :
                                   (slider.animatingTo === slider.last) ? slider.limit : posCheck;
                        } else {
                            switch (special) {
                                case "setTotal": return (reverse) ? ((slider.count - 1) - slider.currentSlide + slider.cloneOffset) * pos : (slider.currentSlide + slider.cloneOffset) * pos;
                                case "setTouch": return (reverse) ? pos : pos;
                                case "jumpEnd": return (reverse) ? pos : slider.count * pos;
                                case "jumpStart": return (reverse) ? slider.count * pos : pos;
                                default: return pos;
                            }
                        }
                    }());

                return (posCalc * -1) + "px";
            }());

            if (slider.transitions) {
                target = (vertical) ? "translate3d(0," + target + ",0)" : "translate3d(" + target + ",0,0)";
                dur = (dur !== undefined) ? (dur / 1000) + "s" : "0s";
                slider.container.css("-" + slider.pfx + "-transition-duration", dur);
            }

            slider.args[slider.prop] = target;
            if (slider.transitions || dur === undefined) slider.container.css(slider.args);
        }
        slider.setup = function (type) {
            // SLIDE:
            if (!fade) {
                var sliderOffset, arr;

                if (type === "init") {
                    slider.viewport = $('<div class="' + namespace + 'viewport"></div>').css({ "overflow": "hidden", "position": "relative" }).appendTo(slider).append(slider.container);
                    // INFINITE LOOP:
                    slider.cloneCount = 0;
                    slider.cloneOffset = 0;
                    // REVERSE:
                    if (reverse) {
                        arr = $.makeArray(slider.slides).reverse();
                        slider.slides = $(arr);
                        slider.container.empty().append(slider.slides);
                    }
                }
                // INFINITE LOOP && !CAROUSEL:
                if (slider.vars.animationLoop && !carousel) {
                    slider.cloneCount = 2;
                    slider.cloneOffset = 1;
                    // clear out old clones
                    if (type !== "init") slider.container.find('.clone').remove();
                    slider.container.append(slider.slides.first().clone().addClass('clone').attr('aria-hidden', 'true')).prepend(slider.slides.last().clone().addClass('clone').attr('aria-hidden', 'true'));
                }
                slider.newSlides = $(slider.vars.selector, slider);

                sliderOffset = (reverse) ? slider.count - 1 - slider.currentSlide + slider.cloneOffset : slider.currentSlide + slider.cloneOffset;
                // VERTICAL:
                if (vertical && !carousel) {
                    slider.container.height((slider.count + slider.cloneCount) * 200 + "%").css("position", "absolute").width("100%");
                    setTimeout(function () {
                        slider.newSlides.css({ "display": "block" });
                        slider.doMath();
                        slider.viewport.height(slider.h);
                        slider.setProps(sliderOffset * slider.h, "init");
                    }, (type === "init") ? 100 : 0);
                } else {
                    slider.container.width((slider.count + slider.cloneCount) * 200 + "%");
                    slider.setProps(sliderOffset * slider.computedW, "init");
                    setTimeout(function () {
                        slider.doMath();
                        slider.newSlides.css({ "width": slider.computedW, "float": "left", "display": "block" });
                        // SMOOTH HEIGHT:
                        if (slider.vars.smoothHeight) methods.smoothHeight();
                    }, (type === "init") ? 100 : 0);
                }
            } else { // FADE:
                slider.slides.css({ "width": "100%", "float": "left", "marginRight": "-100%", "position": "relative" });
                if (type === "init") {
                    if (!touch) {
                        //slider.slides.eq(slider.currentSlide).fadeIn(slider.vars.animationSpeed, slider.vars.easing);
                        slider.slides.css({ "opacity": 0, "display": "block", "zIndex": 1 }).eq(slider.currentSlide).css({ "zIndex": 2 }).animate({ "opacity": 1 }, slider.vars.animationSpeed, slider.vars.easing);
                    } else {
                        slider.slides.css({ "opacity": 0, "display": "block", "webkitTransition": "opacity " + slider.vars.animationSpeed / 1000 + "s ease", "zIndex": 1 }).eq(slider.currentSlide).css({ "opacity": 1, "zIndex": 2 });
                    }
                }
                // SMOOTH HEIGHT:
                if (slider.vars.smoothHeight) methods.smoothHeight();
            }
            // !CAROUSEL:
            // CANDIDATE: active slide
            if (!carousel) slider.slides.removeClass(namespace + "active-slide").eq(slider.currentSlide).addClass(namespace + "active-slide");
        }
        slider.doMath = function () {
            var slide = slider.slides.first(),
                slideMargin = slider.vars.itemMargin,
                minItems = slider.vars.minItems,
                maxItems = slider.vars.maxItems;

            slider.w = (slider.viewport === undefined) ? slider.width() : slider.viewport.width();
            slider.h = slide.height();
            slider.boxPadding = slide.outerWidth() - slide.width();

            // CAROUSEL:
            if (carousel) {
                slider.itemT = slider.vars.itemWidth + slideMargin;
                slider.minW = (minItems) ? minItems * slider.itemT : slider.w;
                slider.maxW = (maxItems) ? (maxItems * slider.itemT) - slideMargin : slider.w;
                slider.itemW = (slider.minW > slider.w) ? (slider.w - (slideMargin * (minItems - 1))) / minItems :
                               (slider.maxW < slider.w) ? (slider.w - (slideMargin * (maxItems - 1))) / maxItems :
                               (slider.vars.itemWidth > slider.w) ? slider.w : slider.vars.itemWidth;

                slider.visible = Math.floor(slider.w / (slider.itemW));
                slider.move = (slider.vars.move > 0 && slider.vars.move < slider.visible) ? slider.vars.move : slider.visible;
                slider.pagingCount = Math.ceil(((slider.count - slider.visible) / slider.move) + 1);
                slider.last = slider.pagingCount - 1;
                slider.limit = (slider.pagingCount === 1) ? 0 :
                               (slider.vars.itemWidth > slider.w) ? (slider.itemW * (slider.count - 1)) + (slideMargin * (slider.count - 1)) : ((slider.itemW + slideMargin) * slider.count) - slider.w - slideMargin;
            } else {
                slider.itemW = slider.w;
                slider.pagingCount = slider.count;
                slider.last = slider.count - 1;
            }
            slider.computedW = slider.itemW - slider.boxPadding;
        }
        slider.update = function (pos, action) {
            slider.doMath();

            // update currentSlide and slider.animatingTo if necessary
            if (!carousel) {
                if (pos < slider.currentSlide) {
                    slider.currentSlide += 1;
                } else if (pos <= slider.currentSlide && pos !== 0) {
                    slider.currentSlide -= 1;
                }
                slider.animatingTo = slider.currentSlide;
            }

            // update controlNav
            if (slider.vars.controlNav && !slider.manualControls) {
                if ((action === "add" && !carousel) || slider.pagingCount > slider.controlNav.length) {
                    methods.controlNav.update("add");
                } else if ((action === "remove" && !carousel) || slider.pagingCount < slider.controlNav.length) {
                    if (carousel && slider.currentSlide > slider.last) {
                        slider.currentSlide -= 1;
                        slider.animatingTo -= 1;
                    }
                    methods.controlNav.update("remove", slider.last);
                }
            }
            // update directionNav
            if (slider.vars.directionNav) methods.directionNav.update();

        }
        slider.addSlide = function (obj, pos) {
            var $obj = $(obj);

            slider.count += 1;
            slider.last = slider.count - 1;

            // append new slide
            if (vertical && reverse) {
                (pos !== undefined) ? slider.slides.eq(slider.count - pos).after($obj) : slider.container.prepend($obj);
            } else {
                (pos !== undefined) ? slider.slides.eq(pos).before($obj) : slider.container.append($obj);
            }

            // update currentSlide, animatingTo, controlNav, and directionNav
            slider.update(pos, "add");

            // update slider.slides
            slider.slides = $(slider.vars.selector + ':not(.clone)', slider);
            // re-setup the slider to accomdate new slide
            slider.setup();

            //FlexSlider: added() Callback
            slider.vars.added(slider);
        }
        slider.removeSlide = function (obj) {
            var pos = (isNaN(obj)) ? slider.slides.index($(obj)) : obj;

            // update count
            slider.count -= 1;
            slider.last = slider.count - 1;

            // remove slide
            if (isNaN(obj)) {
                $(obj, slider.slides).remove();
            } else {
                (vertical && reverse) ? slider.slides.eq(slider.last).remove() : slider.slides.eq(obj).remove();
            }

            // update currentSlide, animatingTo, controlNav, and directionNav
            slider.doMath();
            slider.update(pos, "remove");

            // update slider.slides
            slider.slides = $(slider.vars.selector + ':not(.clone)', slider);
            // re-setup the slider to accomdate new slide
            slider.setup();

            // FlexSlider: removed() Callback
            slider.vars.removed(slider);
        }

        //FlexSlider: Initialize
        methods.init();
    }

    // Ensure the slider isn't focussed if the window loses focus.
    $(window).blur(function (e) {
        focused = false;
    }).focus(function (e) {
        focused = true;
    });

    //FlexSlider: Default Settings
    $.flexslider.defaults = {
        namespace: "flex-",             //{NEW} String: Prefix string attached to the class of every element generated by the plugin
        selector: ".slides > li",       //{NEW} Selector: Must match a simple pattern. '{container} > {slide}' -- Ignore pattern at your own peril
        animation: "fade",              //String: Select your animation type, "fade" or "slide"
        easing: "swing",                //{NEW} String: Determines the easing method used in jQuery transitions. jQuery easing plugin is supported!
        direction: "horizontal",        //String: Select the sliding direction, "horizontal" or "vertical"
        reverse: false,                 //{NEW} Boolean: Reverse the animation direction
        animationLoop: true,            //Boolean: Should the animation loop? If false, directionNav will received "disable" classes at either end
        smoothHeight: false,            //{NEW} Boolean: Allow height of the slider to animate smoothly in horizontal mode
        startAt: 0,                     //Integer: The slide that the slider should start on. Array notation (0 = first slide)
        slideshow: true,                //Boolean: Animate slider automatically
        slideshowSpeed: 7000,           //Integer: Set the speed of the slideshow cycling, in milliseconds
        animationSpeed: 600,            //Integer: Set the speed of animations, in milliseconds
        initDelay: 0,                   //{NEW} Integer: Set an initialization delay, in milliseconds
        randomize: false,               //Boolean: Randomize slide order
        thumbCaptions: false,           //Boolean: Whether or not to put captions on thumbnails when using the "thumbnails" controlNav.
        autoStart: true,                //Start the slideshow straight away?

        // Usability features
        pauseOnAction: true,            //Boolean: Pause the slideshow when interacting with control elements, highly recommended.
        pauseOnHover: false,            //Boolean: Pause the slideshow when hovering over slider, then resume when no longer hovering
        pauseInvisible: false,   		//{NEW} Boolean: Pause the slideshow when tab is invisible, resume when visible. Provides better UX, lower CPU usage.
        useCSS: true,                   //{NEW} Boolean: Slider will use CSS3 transitions if available
        touch: true,                    //{NEW} Boolean: Allow touch swipe navigation of the slider on touch-enabled devices
        video: false,                   //{NEW} Boolean: If using video in the slider, will prevent CSS3 3D Transforms to avoid graphical glitches

        // Primary Controls
        controlNav: true,               //Boolean: Create navigation for paging control of each clide? Note: Leave true for manualControls usage
        directionNav: true,             //Boolean: Create navigation for previous/next navigation? (true/false)
        prevText: "Previous",           //String: Set the text for the "previous" directionNav item
        nextText: "Next",               //String: Set the text for the "next" directionNav item

        // Secondary Navigation
        keyboard: true,                 //Boolean: Allow slider navigating via keyboard left/right keys
        multipleKeyboard: false,        //{NEW} Boolean: Allow keyboard navigation to affect multiple sliders. Default behavior cuts out keyboard navigation with more than one slider present.
        mousewheel: false,              //{UPDATED} Boolean: Requires jquery.mousewheel.js (https://github.com/brandonaaron/jquery-mousewheel) - Allows slider navigating via mousewheel
        pausePlay: false,               //Boolean: Create pause/play dynamic element
        pauseText: "Pause",             //String: Set the text for the "pause" pausePlay item
        playText: "Play",               //String: Set the text for the "play" pausePlay item

        // Special properties
        controlsContainer: "",          //{UPDATED} jQuery Object/Selector: Declare which container the navigation elements should be appended too. Default container is the FlexSlider element. Example use would be $(".flexslider-container"). Property is ignored if given element is not found.
        manualControls: "",             //{UPDATED} jQuery Object/Selector: Declare custom control navigation. Examples would be $(".flex-control-nav li") or "#tabs-nav li img", etc. The number of elements in your controlNav should match the number of slides/tabs.
        sync: "",                       //{NEW} Selector: Mirror the actions performed on this slider with another slider. Use with care.
        asNavFor: "",                   //{NEW} Selector: Internal property exposed for turning the slider into a thumbnail navigation for another slider

        // Carousel Options
        itemWidth: 0,                   //{NEW} Integer: Box-model width of individual carousel items, including horizontal borders and padding.
        itemMargin: 0,                  //{NEW} Integer: Margin between carousel items.
        minItems: 1,                    //{NEW} Integer: Minimum number of carousel items that should be visible. Items will resize fluidly when below this.
        maxItems: 0,                    //{NEW} Integer: Maxmimum number of carousel items that should be visible. Items will resize fluidly when above this limit.
        move: 0,                        //{NEW} Integer: Number of carousel items that should move on animation. If 0, slider will move all visible items.
        allowOneSlide: true,           //{NEW} Boolean: Whether or not to allow a slider comprised of a single slide

        // Callback API
        start: function () { },            //Callback: function(slider) - Fires when the slider loads the first slide
        before: function () { },           //Callback: function(slider) - Fires asynchronously with each slider animation
        after: function () { },            //Callback: function(slider) - Fires after each slider animation completes
        end: function () { },              //Callback: function(slider) - Fires when the slider reaches the last slide (asynchronous)
        added: function () { },            //{NEW} Callback: function(slider) - Fires after a slide is added
        removed: function () { }           //{NEW} Callback: function(slider) - Fires after a slide is removed
    }


    //FlexSlider: Plugin Function
    $.fn.flexslider = function (options) {
        if (options === undefined) options = {};

        if (options === "playing") {
            var $slider = $(this).data('flexslider');
            return $slider.playing;
        }
        else if (typeof options === "object") {
            return this.each(function () {
                var $this = $(this),
                    selector = (options.selector) ? options.selector : ".slides > li",
                    $slides = $this.find(selector);

                if (($slides.length === 1 && options.allowOneSlide === true) || $slides.length === 0) {
                    $slides.fadeIn(400);
                    if (options.start) options.start($this);
                } else if ($this.data('flexslider') === undefined) {
                    new $.flexslider(this, options);
                }
            });
        }
        else {
            // Helper strings to quickly perform functions on the slider
            var $slider = $(this).data('flexslider');
            switch (options) {
                case "play": $slider.play(); break;
                case "pause": $slider.pause(); break;
                case "stop": $slider.stop(); break;
                case "next": $slider.flexAnimate($slider.getTarget("next"), true); break;
                case "prev":
                case "previous": $slider.flexAnimate($slider.getTarget("prev"), true); break;
                case "destroy": $slider.destroy(); break;
                default: if (typeof options === "number") $slider.flexAnimate(options, true);
            }
        }
    }
})(jQuery);

/*	
 *	jQuery dotdotdot 1.6.7
 *	
 *	Copyright (c) 2013 Fred Heusschen
 *	www.frebsite.nl
 *
 *	Plugin website:
 *	dotdotdot.frebsite.nl
 *
 *	Dual licensed under the MIT and GPL licenses.
 *	http://en.wikipedia.org/wiki/MIT_License
 *	http://en.wikipedia.org/wiki/GNU_General_Public_License
 */

(function ($, undef) {
    if ($.fn.dotdotdot) {
        return;
    }

    $.fn.dotdotdot = function (o) {
        if (this.length == 0) {
            if (!o || o.debug !== false) {
                debug(true, 'No element found for "' + this.selector + '".');
            }
            return this;
        }
        if (this.length > 1) {
            return this.each(
				function () {
				    $(this).dotdotdot(o);
				}
			);
        }


        var $dot = this;

        if ($dot.data('dotdotdot')) {
            $dot.trigger('destroy.dot');
        }

        $dot.data('dotdotdot-style', $dot.attr('style') || '');
        $dot.css('word-wrap', 'break-word');
        if ($dot.css('white-space') === 'nowrap') {
            $dot.css('white-space', 'normal');
        }

        $dot.bind_events = function () {
            $dot.bind(
				'update.dot',
				function (e, c) {
				    e.preventDefault();
				    e.stopPropagation();

				    opts.maxHeight = (typeof opts.height == 'number')
						? opts.height
						: getTrueInnerHeight($dot);

				    opts.maxHeight += opts.tolerance;

				    if (typeof c != 'undefined') {
				        if (typeof c == 'string' || c instanceof HTMLElement) {
				            c = $('<div />').append(c).contents();
				        }
				        if (c instanceof $) {
				            orgContent = c;
				        }
				    }

				    $inr = $dot.wrapInner('<div class="dotdotdot" />').children();
				    $inr.empty()
						.append(orgContent.clone(true))
						.find('br').replaceWith('  <br />  ').end()
						.css({
						    'height': 'auto',
						    'width': 'auto',
						    'border': 'none',
						    'padding': 0,
						    'margin': 0
						});

				    var after = false,
						trunc = false;

				    if (conf.afterElement) {
				        after = conf.afterElement.clone(true);
				        after.show();
				        conf.afterElement.remove();
				    }
				    if (test($inr, opts)) {
				        if (opts.wrap == 'children') {
				            trunc = children($inr, opts, after);
				        }
				        else {
				            trunc = ellipsis($inr, $dot, $inr, opts, after);
				        }
				    }
				    $inr.replaceWith($inr.contents());
				    $inr = null;

				    if ($.isFunction(opts.callback)) {
				        opts.callback.call($dot[0], trunc, orgContent);
				    }

				    conf.isTruncated = trunc;
				    return trunc;
				}

			).bind(
				'isTruncated.dot',
				function (e, fn) {
				    e.preventDefault();
				    e.stopPropagation();

				    if (typeof fn == 'function') {
				        fn.call($dot[0], conf.isTruncated);
				    }
				    return conf.isTruncated;
				}

			).bind(
				'originalContent.dot',
				function (e, fn) {
				    e.preventDefault();
				    e.stopPropagation();

				    if (typeof fn == 'function') {
				        fn.call($dot[0], orgContent);
				    }
				    return orgContent;
				}

			).bind(
				'destroy.dot',
				function (e) {
				    e.preventDefault();
				    e.stopPropagation();

				    $dot.unwatch()
						.unbind_events()
						.empty()
						.append(orgContent)
						.attr('style', $dot.data('dotdotdot-style') || '')
						.data('dotdotdot', false);
				}
			);
            return $dot;
        };	//	/bind_events

        $dot.unbind_events = function () {
            $dot.unbind('.dot');
            return $dot;
        };	//	/unbind_events

        $dot.watch = function () {
            $dot.unwatch();
            if (opts.watch == 'window') {
                var $window = $(window),
					_wWidth = $window.width(),
					_wHeight = $window.height();

                $window.bind(
					'resize.dot' + conf.dotId,
					function () {
					    if (_wWidth != $window.width() || _wHeight != $window.height() || !opts.windowResizeFix) {
					        _wWidth = $window.width();
					        _wHeight = $window.height();

					        if (watchInt) {
					            clearInterval(watchInt);
					        }
					        watchInt = setTimeout(
								function () {
								    $dot.trigger('update.dot');
								}, 10
							);
					    }
					}
				);
            }
            else {
                watchOrg = getSizes($dot);
                watchInt = setInterval(
					function () {
					    var watchNew = getSizes($dot);
					    if (watchOrg.width != watchNew.width ||
							 watchOrg.height != watchNew.height) {
					        $dot.trigger('update.dot');
					        watchOrg = getSizes($dot);
					    }
					}, 100
				);
            }
            return $dot;
        };
        $dot.unwatch = function () {
            $(window).unbind('resize.dot' + conf.dotId);
            if (watchInt) {
                clearInterval(watchInt);
            }
            return $dot;
        };

        var orgContent = $dot.contents(),
			opts = $.extend(true, {}, $.fn.dotdotdot.defaults, o),
			conf = {},
			watchOrg = {},
			watchInt = null,
			$inr = null;


        if (!(opts.lastCharacter.remove instanceof Array)) {
            opts.lastCharacter.remove = $.fn.dotdotdot.defaultArrays.lastCharacter.remove;
        }
        if (!(opts.lastCharacter.noEllipsis instanceof Array)) {
            opts.lastCharacter.noEllipsis = $.fn.dotdotdot.defaultArrays.lastCharacter.noEllipsis;
        }


        conf.afterElement = getElement(opts.after, $dot);
        conf.isTruncated = false;
        conf.dotId = dotId++;


        $dot.data('dotdotdot', true)
			.bind_events()
			.trigger('update.dot');

        if (opts.watch) {
            $dot.watch();
        }

        return $dot;
    };


    //	public
    $.fn.dotdotdot.defaults = {
        'ellipsis': '... ',
        'wrap': 'word',
        'fallbackToLetter': true,
        'lastCharacter': {},
        'tolerance': 0,
        'callback': null,
        'after': null,
        'height': null,
        'watch': false,
        'windowResizeFix': true,
        'debug': false
    };
    $.fn.dotdotdot.defaultArrays = {
        'lastCharacter': {
            'remove': [' ', '\u3000', ',', ';', '.', '!', '?'],
            'noEllipsis': []
        }
    };


    //	private
    var dotId = 1;

    function children($elem, o, after) {
        var $elements = $elem.children(),
			isTruncated = false;

        $elem.empty();

        for (var a = 0, l = $elements.length; a < l; a++) {
            var $e = $elements.eq(a);
            $elem.append($e);
            if (after) {
                $elem.append(after);
            }
            if (test($elem, o)) {
                $e.remove();
                isTruncated = true;
                break;
            }
            else {
                if (after) {
                    after.detach();
                }
            }
        }
        return isTruncated;
    }
    function ellipsis($elem, $d, $i, o, after) {
        var $elements = $elem.contents(),
			isTruncated = false;

        $elem.empty();

        var notx = 'table, thead, tbody, tfoot, tr, col, colgroup, object, embed, param, ol, ul, dl, blockquote, select, optgroup, option, textarea, script, style';
        for (var a = 0, l = $elements.length; a < l; a++) {

            if (isTruncated) {
                break;
            }

            var e = $elements[a],
				$e = $(e);

            if (typeof e == 'undefined' || (e.nodeType == 3 && $.trim(e.data).length == 0)) {
                continue;
            }

            $elem.append($e);
            if (after) {
                $elem[$elem.is(notx) ? 'after' : 'append'](after);
            }
            if (test($i, o)) {
                if (e.nodeType == 3) // node is TEXT
                {
                    isTruncated = ellipsisElement($e, $d, $i, o, after);
                }
                else {
                    isTruncated = ellipsis($e, $d, $i, o, after);
                }

                if (!isTruncated) {
                    $e.remove();
                    isTruncated = true;
                }
            }

            if (!isTruncated) {
                if (after) {
                    after.detach();
                }
            }
        }
        return isTruncated;
    }
    function ellipsisElement($e, $d, $i, o, after) {
        var e = $e[0];

        if (!e) {
            return false;
        }

        var txt = getTextContent(e),
			space = (txt.indexOf(' ') !== -1) ? ' ' : '\u3000',
			separator = (o.wrap == 'letter') ? '' : space,
			textArr = txt.split(separator),
			position = -1,
			midPos = -1,
			startPos = 0,
			endPos = textArr.length - 1;

        if (o.fallbackToLetter && endPos == 0 && endPos == startPos) {
            separator = '';
            textArr = txt.split(separator);
            endPos = textArr.length - 1;
        }

        while (startPos <= endPos && !(startPos == 0 && endPos == 0)) {
            var m = Math.floor((startPos + endPos) / 2);
            if (m == midPos) {
                break;
            }
            midPos = m;

            setTextContent(e, textArr.slice(0, midPos + 1).join(separator) + o.ellipsis);

            if (!test($i, o)) {
                position = midPos;
                startPos = midPos;
            }
            else {
                endPos = midPos;
            }
        }

        if (position != -1 && !(textArr.length == 1 && textArr[0].length == 0)) {
            txt = addEllipsis(textArr.slice(0, position + 1).join(separator), o);
            setTextContent(e, txt);
        }
        else {
            var $w = $e.parent();
            $e.remove();

            var afterLength = (after && after.closest($w).length) ? after.length : 0;

            if ($w.contents().length > afterLength) {
                e = findLastTextNode($w.contents().eq(-1 - afterLength), $d);
            }
            else {
                e = findLastTextNode($w, $d, true);
                if (!afterLength) {
                    $w.remove();
                }
            }
            if (e) {
                txt = addEllipsis(getTextContent(e), o);
                setTextContent(e, txt);
                if (afterLength && after) {
                    $(e).parent().append(after);
                }
            }
        }

        return true;
    }
    function test($i, o) {
        return $i.innerHeight() > o.maxHeight;
    }
    function addEllipsis(txt, o) {
        while ($.inArray(txt.slice(-1), o.lastCharacter.remove) > -1) {
            txt = txt.slice(0, -1);
        }
        if ($.inArray(txt.slice(-1), o.lastCharacter.noEllipsis) < 0) {
            txt += o.ellipsis;
        }
        return txt;
    }
    function getSizes($d) {
        return {
            'width': $d.innerWidth(),
            'height': $d.innerHeight()
        };
    }
    function setTextContent(e, content) {
        if (e.innerText) {
            e.innerText = content;
        }
        else if (e.nodeValue) {
            e.nodeValue = content;
        }
        else if (e.textContent) {
            e.textContent = content;
        }

    }
    function getTextContent(e) {
        if (e.innerText) {
            return e.innerText;
        }
        else if (e.nodeValue) {
            return e.nodeValue;
        }
        else if (e.textContent) {
            return e.textContent;
        }
        else {
            return "";
        }
    }
    function getPrevNode(n) {
        do {
            n = n.previousSibling;
        }
        while (n && n.nodeType !== 1 && n.nodeType !== 3);

        return n;
    }
    function findLastTextNode($el, $top, excludeCurrent) {
        var e = $el && $el[0], p;
        if (e) {
            if (!excludeCurrent) {
                if (e.nodeType === 3) {
                    return e;
                }
                if ($.trim($el.text())) {
                    return findLastTextNode($el.contents().last(), $top);
                }
            }
            p = getPrevNode(e);
            while (!p) {
                $el = $el.parent();
                if ($el.is($top) || !$el.length) {
                    return false;
                }
                p = getPrevNode($el[0]);
            }
            if (p) {
                return findLastTextNode($(p), $top);
            }
        }
        return false;
    }
    function getElement(e, $i) {
        if (!e) {
            return false;
        }
        if (typeof e === 'string') {
            e = $(e, $i);
            return (e.length)
				? e
				: false;
        }
        return !e.jquery
			? false
			: e;
    }
    function getTrueInnerHeight($el) {
        var h = $el.innerHeight(),
			a = ['paddingTop', 'paddingBottom'];

        for (var z = 0, l = a.length; z < l; z++) {
            var m = parseInt($el.css(a[z]), 10);
            if (isNaN(m)) {
                m = 0;
            }
            h -= m;
        }
        return h;
    }
    function debug(d, m) {
        if (!d) {
            return false;
        }
        if (typeof m == 'string') {
            m = 'dotdotdot: ' + m;
        }
        else {
            m = ['dotdotdot:', m];
        }

        if (typeof window.console != 'undefined') {
            if (typeof window.console.log != 'undefined') {
                window.console.log(m);
            }
        }
        return false;
    }


    //	override jQuery.html
    var _orgHtml = $.fn.html;
    $.fn.html = function (str) {
        if (str != undef && !$.isFunction(str) && this.data('dotdotdot')) {
            return this.trigger('update', [str]);
        }
        return _orgHtml.apply(this, arguments);
    };


    //	override jQuery.text
    var _orgText = $.fn.text;
    $.fn.text = function (str) {
        if (str != undef && !$.isFunction(str) && this.data('dotdotdot')) {
            str = $('<div />').text(str).html();
            return this.trigger('update', [str]);
        }
        return _orgText.apply(this, arguments);
    };


})(jQuery);

/* #region Menu */

function LLUMenu(elem) {
    this.lluMenuBar = elem;
    this.isVertical = (this.lluMenuBar.firstChild.getAttribute("orient") == "vertical");
    this.rootHeight = this.lluMenuBar.offsetHeight;
    this.rootWidth = this.lluMenuBar.offsetWidth;
    this.subLevelOneWidth = 0;
    if (this.isVertical) {
        this.lluMenuBar.firstChild.style.width = "100%";
    }
    for (var i = 0; i < this.lluMenuBar.firstChild.childNodes.length; i++) {
        var elem = this.lluMenuBar.firstChild.childNodes[i];
        if (elem.nodeType != 3) {
            if (elem.tagName.toLowerCase() == "li") {
                if (this.rootHeight == 0) {
                    if (this.isVertical) {
                        this.rootHeight = elem.parentNode.offsetHeight;
                    }
                    else {
                        this.rootWidth = elem.offsetWidth;
                    }
                }
                if (this.isVertical) {
                    elem.style.width = "100%";;
                    for (var k = 0; k < elem.childNodes.length; k++) {
                        if (elem.childNodes[k].nodeType != 3) {
                            if (elem.childNodes[k].tagName.toLowerCase() == "a") {
                                elem.childNodes[k].style.padding = "0px";
                                elem.childNodes[k].style.width = "100%";
                            }
                        }
                    }
                }
                if (elem.innerHTML.indexOf("lluNavGroupSub") > -1) {
                    for (var m = 0; m < elem.childNodes.length; m++) {
                        var nextLevel = elem.childNodes[m];
                        if (nextLevel.nodeType != 3) {
                            if (nextLevel.tagName.toLowerCase() == "ul") {
                                if (this.isVertical) {
                                    nextLevel.style.top = "0px";
                                    nextLevel.style.left = this.rootWidth + "px";
                                }
                                else {
                                    nextLevel.style.top = this.rootHeight + "px";
                                    nextLevel.style.left = "0px";
                                }
                                if (this.subLevelOneWidth == 0) {
                                    this.subLevelOneWidth = nextLevel.offsetWidth;
                                }
                                lluMenuBuilder(this, nextLevel);
                            }
                        }
                    }
                }
            }
        }
    }
}

function lluMenuBuilder(menu, elem) {
    var panelWidth = elem.offsetWidth + "px";
    for (var j = 0; j < elem.childNodes.length; j++) {
        var elem2 = elem.childNodes[j];
        if (elem2.nodeType != 3) {
            if (elem2.tagName.toLowerCase() == "li") {
                for (var l = 0; l < elem2.childNodes.length; l++) {
                    if (elem2.childNodes[l].nodeType != 3) {
                        if (elem2.childNodes[l].tagName.toLowerCase() == "a") {
                            elem2.childNodes[l].style.width = "100%";
                        }
                    }
                }
                if (elem2.innerHTML.indexOf("lluNavGroupSub") > -1) {
                    for (var n = 0; n < elem2.childNodes.length; n++) {
                        var nextLevel2 = elem2.childNodes[n];
                        if (nextLevel2.nodeType != 3) {
                            if (nextLevel2.tagName.toLowerCase() == "ul") {
                                nextLevel2.style.top = "0px";
                                nextLevel2.style.left = menu.subLevelOneWidth + "px";
                                lluMenuBuilder(menu, nextLevel2);
                            }
                        }
                    }
                }
            }
        }
    }
}

function showSubMenu(elem) {
    elem.style.overflow = "visible";
}

function fixOnMouseOutNav(element, event) {
    var current_mouse_target = null;
    if (event.toElement) {
        current_mouse_target = event.toElement;
    } else if (event.relatedTarget) {
        current_mouse_target = event.relatedTarget;
    }
    if (!isChildOfNav(element, current_mouse_target) && element != current_mouse_target) {
        element.style.overflow = "hidden";
    }
}

function isChildOfNav(parent, child) {
    if (child != null) {
        while (child.parentNode) {
            if ((child = child.parentNode) == parent) {
                return true;
            }
        }
    }
    return false;
}

/* #endregion */
/*! Copyright (c) 2011 Brandon Aaron (http://brandonaaron.net)
 * Licensed under the MIT License (LICENSE.txt).
 *
 * Thanks to: http://adomas.org/javascript-mouse-wheel/ for some pointers.
 * Thanks to: Mathias Bank(http://www.mathias-bank.de) for a scope bug fix.
 * Thanks to: Seamus Leahy for adding deltaX and deltaY
 *
 * Version: 3.0.6
 * 
 * Requires: 1.2.2+
 */

(function($) {

var types = ['DOMMouseScroll', 'mousewheel'];

if ($.event.fixHooks) {
    for ( var i=types.length; i; ) {
        $.event.fixHooks[ types[--i] ] = $.event.mouseHooks;
    }
}

$.event.special.mousewheel = {
    setup: function() {
        if ( this.addEventListener ) {
            for ( var i=types.length; i; ) {
                this.addEventListener( types[--i], handler, false );
            }
        } else {
            this.onmousewheel = handler;
        }
    },
    
    teardown: function() {
        if ( this.removeEventListener ) {
            for ( var i=types.length; i; ) {
                this.removeEventListener( types[--i], handler, false );
            }
        } else {
            this.onmousewheel = null;
        }
    }
};

$.fn.extend({
    mousewheel: function(fn) {
        return fn ? this.bind("mousewheel", fn) : this.trigger("mousewheel");
    },
    
    unmousewheel: function(fn) {
        return this.unbind("mousewheel", fn);
    }
});


function handler(event) {
    var orgEvent = event || window.event, args = [].slice.call( arguments, 1 ), delta = 0, returnValue = true, deltaX = 0, deltaY = 0;
    event = $.event.fix(orgEvent);
    event.type = "mousewheel";
    
    // Old school scrollwheel delta
    if ( orgEvent.wheelDelta ) { delta = orgEvent.wheelDelta/120; }
    if ( orgEvent.detail     ) { delta = -orgEvent.detail/3; }
    
    // New school multidimensional scroll (touchpads) deltas
    deltaY = delta;
    
    // Gecko
    if ( orgEvent.axis !== undefined && orgEvent.axis === orgEvent.HORIZONTAL_AXIS ) {
        deltaY = 0;
        deltaX = -1*delta;
    }
    
    // Webkit
    if ( orgEvent.wheelDeltaY !== undefined ) { deltaY = orgEvent.wheelDeltaY/120; }
    if ( orgEvent.wheelDeltaX !== undefined ) { deltaX = -1*orgEvent.wheelDeltaX/120; }
    
    // Add event and delta to the front of the arguments
    args.unshift(event, delta, deltaX, deltaY);
    
    return ($.event.dispatch || $.event.handle).apply(this, args);
}

})(jQuery);

/* 
== malihu jquery custom scrollbars plugin == 
version: 2.1 
author: malihu (http://manos.malihu.gr) 
plugin home: http://manos.malihu.gr/jquery-custom-content-scroller 
*/
(function($){
	var methods={
		init:function(options){
			var defaults={ 
				set_width:false, /*optional element width: boolean, pixels, percentage*/
				set_height:false, /*optional element height: boolean, pixels, percentage*/
				horizontalScroll:false, /*scroll horizontally: boolean*/
				scrollInertia:550, /*scrolling inertia: integer (milliseconds)*/
				scrollEasing:"easeOutCirc", /*scrolling easing: string*/
				mouseWheel:"auto", /*mousewheel support and velocity: boolean, "auto", integer*/
				autoDraggerLength:true, /*auto-adjust scrollbar dragger length: boolean*/
				scrollButtons:{ /*scroll buttons*/
					enable:false, /*scroll buttons support: boolean*/
					scrollType:"continuous", /*scroll buttons scrolling type: "continuous", "pixels"*/
					scrollSpeed:20, /*scroll buttons continuous scrolling speed: integer*/
					scrollAmount:40 /*scroll buttons pixels scroll amount: integer (pixels)*/
				},
				advanced:{
					updateOnBrowserResize:true, /*update scrollbars on browser resize (for layouts based on percentages): boolean*/
					updateOnContentResize:false, /*auto-update scrollbars on content resize (for dynamic content): boolean*/
					autoExpandHorizontalScroll:false /*auto-expand width for horizontal scrolling: boolean*/
				},
				callbacks:{
					onScroll:function(){}, /*user custom callback function on scroll event*/
					onTotalScroll:function(){}, /*user custom callback function on scroll end reached event*/
					onTotalScrollOffset:0 /*scroll end reached offset: integer (pixels)*/
				}
			},
			options=$.extend(true,defaults,options);
			/*check for touch device*/
			$(document).data("mCS-is-touch-device",false);
			if(is_touch_device()){
				$(document).data("mCS-is-touch-device",true);
			}
			function is_touch_device(){
				return !!("ontouchstart" in window) ? 1 : 0;
			}
			return this.each(function(){
				var $this=$(this);
				/*set element width/height, create markup for custom scrollbars, add classes*/
				if(options.set_width){
					$this.css("width",options.set_width);
				}
				if(options.set_height){
					$this.css("height",options.set_height);
				}
				if(!$(document).data("mCustomScrollbar-index")){
					$(document).data("mCustomScrollbar-index","1");
				}else{
					var mCustomScrollbarIndex=parseInt($(document).data("mCustomScrollbar-index"));
					$(document).data("mCustomScrollbar-index",mCustomScrollbarIndex+1);
				}
				$this.wrapInner("<div class='mCustomScrollBox' id='mCSB_"+$(document).data("mCustomScrollbar-index")+"' style='position:relative; height:100%; overflow:hidden; max-width:100%;' />").addClass("mCustomScrollbar _mCS_"+$(document).data("mCustomScrollbar-index"));
				var mCustomScrollBox=$this.children(".mCustomScrollBox");
				if(options.horizontalScroll){
					mCustomScrollBox.addClass("mCSB_horizontal").wrapInner("<div class='mCSB_h_wrapper' style='position:relative; left:0; width:999999px;' />");
					var mCSB_h_wrapper=mCustomScrollBox.children(".mCSB_h_wrapper");
					mCSB_h_wrapper.wrapInner("<div class='mCSB_container' style='position:absolute; left:0;' />").children(".mCSB_container").css({"width":mCSB_h_wrapper.children().outerWidth(),"position":"relative"}).unwrap();
				}else{
					mCustomScrollBox.wrapInner("<div class='mCSB_container' style='position:relative; top:0;' />");
				}
				var mCSB_container=mCustomScrollBox.children(".mCSB_container");
				if(!$(document).data("mCS-is-touch-device")){ /*not touch device - apply custom scrollbars functionality*/
					mCSB_container.after("<div class='mCSB_scrollTools' style='position:absolute;'><div class='mCSB_draggerContainer' style='position:relative;'><div class='mCSB_dragger' style='position:absolute;'><div class='mCSB_dragger_bar' style='position:relative;'></div></div><div class='mCSB_draggerRail'></div></div></div>");
					var mCSB_scrollTools=mCustomScrollBox.children(".mCSB_scrollTools"),
						mCSB_draggerContainer=mCSB_scrollTools.children(".mCSB_draggerContainer"),
						mCSB_dragger=mCSB_draggerContainer.children(".mCSB_dragger");
					if(options.horizontalScroll){
						mCSB_dragger.data("minDraggerWidth",mCSB_dragger.width());
					}else{
						mCSB_dragger.data("minDraggerHeight",mCSB_dragger.height());
					}
					if(options.scrollButtons.enable){
						if(options.horizontalScroll){
							mCSB_scrollTools.prepend("<a class='mCSB_buttonLeft' style='display:block; position:relative;'></a>").append("<a class='mCSB_buttonRight' style='display:block; position:relative;'></a>");
						}else{
							mCSB_scrollTools.prepend("<a class='mCSB_buttonUp' style='display:block; position:relative;'></a>").append("<a class='mCSB_buttonDown' style='display:block; position:relative;'></a>");
						}
					}
					/*mCustomScrollBox scrollTop and scrollLeft is always 0 to prevent browser focus scrolling*/
					mCustomScrollBox.bind("scroll",function(){
						mCustomScrollBox.scrollTop(0).scrollLeft(0);
					});
					/*store element options and update element*/
					$this.data({
						"horizontalScroll":options.horizontalScroll,
						"scrollInertia":options.scrollInertia,
						"scrollEasing":options.scrollEasing,
						"mouseWheel":options.mouseWheel,
						"autoDraggerLength":options.autoDraggerLength,
						"scrollButtons-enable":options.scrollButtons.enable,
						"scrollButtons-scrollType":options.scrollButtons.scrollType,
						"scrollButtons-scrollSpeed":options.scrollButtons.scrollSpeed,
						"scrollButtons-scrollAmount":options.scrollButtons.scrollAmount,
						"autoExpandHorizontalScroll":options.advanced.autoExpandHorizontalScroll,
						"onScroll-Callback":options.callbacks.onScroll,
						"onTotalScroll-Callback":options.callbacks.onTotalScroll,
						"onTotalScroll-Offset":options.callbacks.onTotalScrollOffset
					}).mCustomScrollbar("update");
					/*window resize fn (for layouts based on percentages)*/
					if(options.advanced.updateOnBrowserResize){
						var mCSB_resizeTimeout;
						$(window).resize(function(){
							if(mCSB_resizeTimeout){
								clearTimeout(mCSB_resizeTimeout);
							}
							mCSB_resizeTimeout=setTimeout(function(){
								$this.mCustomScrollbar("update");
							},150);
						});
					}
				}else{ /*is touch device*/
					/*check for mobile os/browser not supporting overflow:auto (Android 2.xx)*/
					var ua=navigator.userAgent;
					if(ua.indexOf("Android")!=-1){ 
						var androidversion=parseFloat(ua.slice(ua.indexOf("Android")+8));
						if(androidversion<3){
							touchScroll("mCSB_"+$(document).data("mCustomScrollbar-index")); /*non overflow:auto fn*/
						}else{
							mCustomScrollBox.css({"overflow":"auto","-webkit-overflow-scrolling":"touch"});
						}
					}else{
						mCustomScrollBox.css({"overflow":"auto","-webkit-overflow-scrolling":"touch"});
					}
					mCSB_container.addClass("mCS_no_scrollbar mCS_touch");
					$this.data({
						"horizontalScroll":options.horizontalScroll,
						"scrollInertia":options.scrollInertia,
						"scrollEasing":options.scrollEasing,
						"autoExpandHorizontalScroll":options.advanced.autoExpandHorizontalScroll,
						"onScroll-Callback":options.callbacks.onScroll,
						"onTotalScroll-Callback":options.callbacks.onTotalScroll,
						"onTotalScroll-Offset":options.callbacks.onTotalScrollOffset
					});
					mCustomScrollBox.scroll(function(){
						$this.mCustomScrollbar("callbacks",mCustomScrollBox,mCSB_container); /*user custom callback functions*/
					});
					/*non overflow:auto fn 
					(source: http://chris-barr.com/index.php/entry/scrolling_a_overflowauto_element_on_a_touch_screen_device/)*/
					function touchScroll(id){
						var el=document.getElementById(id),
							scrollStartPosY=0,
							scrollStartPosX=0;
						document.getElementById(id).addEventListener("touchstart",function(event){
							scrollStartPosY=this.scrollTop+event.touches[0].pageY;
							scrollStartPosX=this.scrollLeft+event.touches[0].pageX;
							/*event.preventDefault(); // Keep this remarked so you can click on buttons and links in the div*/
						},false);
						document.getElementById(id).addEventListener("touchmove",function(event){
							/*These if statements allow the full page to scroll (not just the div) if they are
							at the top of the div scroll or the bottom of the div scroll
							The -5 and +5 below are in case they are trying to scroll the page sideways
							but their finger moves a few pixels down or up.  The event.preventDefault() function
							will not be called in that case so that the whole page can scroll.*/
							if((this.scrollTop<this.scrollHeight-this.offsetHeight && this.scrollTop+event.touches[0].pageY<scrollStartPosY-5) || (this.scrollTop!=0 && this.scrollTop+event.touches[0].pageY>scrollStartPosY+5))
								event.preventDefault();	
							if((this.scrollLeft<this.scrollWidth-this.offsetWidth && this.scrollLeft+event.touches[0].pageX < scrollStartPosX-5) || (this.scrollLeft!=0&&this.scrollLeft+event.touches[0].pageX>scrollStartPosX+5))
								event.preventDefault();	
							this.scrollTop=scrollStartPosY-event.touches[0].pageY;
							this.scrollLeft=scrollStartPosX-event.touches[0].pageX;
						},false);
					}
				}
				/*content resize fn (for dynamically generated content)*/
				if(options.advanced.updateOnContentResize){
					var mCSB_onContentResize;
					if(options.horizontalScroll){
						var mCSB_containerOldSize=mCSB_container.outerWidth();
						if(is_touch_device()){
							/*disable iOS webkit inertia for smooth scrolling*/
							mCustomScrollBox.css({"-webkit-overflow-scrolling":"auto"});
						}
					}else{
						var mCSB_containerOldSize=mCSB_container.outerHeight();
					}
					mCSB_onContentResize=setInterval(function(){
						if(options.horizontalScroll){
							if(options.advanced.autoExpandHorizontalScroll){
								mCSB_container.css({"position":"absolute","width":"auto"}).wrap("<div class='mCSB_h_wrapper' style='position:relative; left:0; width:999999px;' />").css({"width":mCSB_container.outerWidth(),"position":"relative"}).unwrap();
							}
							var mCSB_containerNewSize=mCSB_container.outerWidth();
						}else{
							var mCSB_containerNewSize=mCSB_container.outerHeight();
						}
						if(mCSB_containerNewSize!=mCSB_containerOldSize){
							$this.mCustomScrollbar("update");
							mCSB_containerOldSize=mCSB_containerNewSize;
						}
					},300);
				}
			});
		},
		update:function(){
			var $this=$(this),
				mCustomScrollBox=$this.children(".mCustomScrollBox"),
				mCSB_container=mCustomScrollBox.children(".mCSB_container");
			if(!$(document).data("mCS-is-touch-device")){
				mCSB_container.removeClass("mCS_no_scrollbar");
			}
			var mCSB_scrollTools=mCustomScrollBox.children(".mCSB_scrollTools"),
				mCSB_draggerContainer=mCSB_scrollTools.children(".mCSB_draggerContainer"),
				mCSB_dragger=mCSB_draggerContainer.children(".mCSB_dragger");
			if($this.data("horizontalScroll")){
				var mCSB_buttonLeft=mCSB_scrollTools.children(".mCSB_buttonLeft"),
					mCSB_buttonRight=mCSB_scrollTools.children(".mCSB_buttonRight"),
					mCustomScrollBoxW=mCustomScrollBox.width();
				if($this.data("autoExpandHorizontalScroll")){
					mCSB_container.css({"position":"absolute","width":"auto"}).wrap("<div class='mCSB_h_wrapper' style='position:relative; left:0; width:999999px;' />").css({"width":mCSB_container.outerWidth(),"position":"relative"}).unwrap();
				}
				var mCSB_containerW=mCSB_container.outerWidth();
			}else{
				var mCSB_buttonUp=mCSB_scrollTools.children(".mCSB_buttonUp"),
					mCSB_buttonDown=mCSB_scrollTools.children(".mCSB_buttonDown"),
					mCustomScrollBoxH=mCustomScrollBox.height(),
					mCSB_containerH=mCSB_container.outerHeight();
			}
			if(mCSB_containerH>mCustomScrollBoxH && !$this.data("horizontalScroll") && !$(document).data("mCS-is-touch-device")){ /*content needs vertical scrolling*/
				mCSB_scrollTools.css("display","block");
				var mCSB_draggerContainerH=mCSB_draggerContainer.height();
				/*auto adjust scrollbar dragger length analogous to content*/
				if($this.data("autoDraggerLength")){
					var draggerH=Math.round(mCustomScrollBoxH/mCSB_containerH*mCSB_draggerContainerH),
						minDraggerH=mCSB_dragger.data("minDraggerHeight");
					if(draggerH<=minDraggerH){ /*min dragger height*/
						mCSB_dragger.css({"height":minDraggerH});
					}else if(draggerH>=mCSB_draggerContainerH-10){ /*max dragger height*/
						var mCSB_draggerContainerMaxH=mCSB_draggerContainerH-10;
						mCSB_dragger.css({"height":mCSB_draggerContainerMaxH});
					}else{
						mCSB_dragger.css({"height":draggerH});
					}
					mCSB_dragger.children(".mCSB_dragger_bar").css({"line-height":mCSB_dragger.height()+"px"});
				}
				var mCSB_draggerH=mCSB_dragger.height(),
				/*calculate and store scroll amount*/
					scrollAmount=(mCSB_containerH-mCustomScrollBoxH)/(mCSB_draggerContainerH-mCSB_draggerH);
				$this.data("scrollAmount",scrollAmount);
				/*add scrolling*/
				$this.mCustomScrollbar("scrolling",mCustomScrollBox,mCSB_container,mCSB_draggerContainer,mCSB_dragger,mCSB_buttonUp,mCSB_buttonDown,mCSB_buttonLeft,mCSB_buttonRight);
				/*scroll*/
				var mCSB_containerP=Math.abs(Math.round(mCSB_container.position().top));
				$this.mCustomScrollbar("scrollTo",mCSB_containerP,{callback:false});
			}else if(mCSB_containerW>mCustomScrollBoxW && $this.data("horizontalScroll") && !$(document).data("mCS-is-touch-device")){ /*content needs horizontal scrolling*/
				mCSB_scrollTools.css("display","block");
				var mCSB_draggerContainerW=mCSB_draggerContainer.width();
				/*auto adjust scrollbar dragger length analogous to content*/
				if($this.data("autoDraggerLength")){
					var draggerW=Math.round(mCustomScrollBoxW/mCSB_containerW*mCSB_draggerContainerW),
						minDraggerW=mCSB_dragger.data("minDraggerWidth");
					if(draggerW<=minDraggerW){ /*min dragger height*/
						mCSB_dragger.css({"width":minDraggerW});
					}else if(draggerW>=mCSB_draggerContainerW-10){ /*max dragger height*/
						var mCSB_draggerContainerMaxW=mCSB_draggerContainerW-10;
						mCSB_dragger.css({"width":mCSB_draggerContainerMaxW});
					}else{
						mCSB_dragger.css({"width":draggerW});
					}
				}
				var mCSB_draggerW=mCSB_dragger.width(),
				/*calculate and store scroll amount*/
					scrollAmount=(mCSB_containerW-mCustomScrollBoxW)/(mCSB_draggerContainerW-mCSB_draggerW);
				$this.data("scrollAmount",scrollAmount);
				/*add scrolling*/
				$this.mCustomScrollbar("scrolling",mCustomScrollBox,mCSB_container,mCSB_draggerContainer,mCSB_dragger,mCSB_buttonUp,mCSB_buttonDown,mCSB_buttonLeft,mCSB_buttonRight);
				/*scroll*/
				var mCSB_containerP=Math.abs(Math.round(mCSB_container.position().left));
				$this.mCustomScrollbar("scrollTo",mCSB_containerP,{callback:false});
			}else{ /*content does not need scrolling*/
				/*unbind events, reset content position, hide scrollbars, remove classes*/
				mCustomScrollBox.unbind("mousewheel");
				mCustomScrollBox.unbind("focusin");
				if($this.data("horizontalScroll")){
					mCSB_dragger.add(mCSB_container).css("left",0);
				}else{
					mCSB_dragger.add(mCSB_container).css("top",0);
				}
				mCSB_scrollTools.css("display","none");
				mCSB_container.addClass("mCS_no_scrollbar");
			}
		},
		scrolling:function(mCustomScrollBox,mCSB_container,mCSB_draggerContainer,mCSB_dragger,mCSB_buttonUp,mCSB_buttonDown,mCSB_buttonLeft,mCSB_buttonRight){
			var $this=$(this);
			/*drag scrolling*/
			if(!mCSB_dragger.hasClass("ui-draggable")){ /*apply drag function once*/
				if($this.data("horizontalScroll")){
					var draggableAxis="x";
				}else{
					var draggableAxis="y";
				}
				mCSB_dragger.draggable({ 
					axis:draggableAxis,
					containment:"parent",
					drag:function(event,ui){
						$this.mCustomScrollbar("scroll");
						mCSB_dragger.addClass("mCSB_dragger_onDrag");
					},
					stop:function(event,ui){
						mCSB_dragger.removeClass("mCSB_dragger_onDrag");	
					}
				});
			}
			mCSB_draggerContainer.unbind("click").bind("click",function(e){
				if($this.data("horizontalScroll")){
					var mouseCoord=(e.pageX-mCSB_draggerContainer.offset().left);
					if(mouseCoord<mCSB_dragger.position().left || mouseCoord>(mCSB_dragger.position().left+mCSB_dragger.width())){
						var scrollToPos=mouseCoord;
						if(scrollToPos>=mCSB_draggerContainer.width()-mCSB_dragger.width()){ /*max dragger position is bottom*/
							scrollToPos=mCSB_draggerContainer.width()-mCSB_dragger.width();
						}
						mCSB_dragger.css("left",scrollToPos);
						$this.mCustomScrollbar("scroll");
					}
				}else{
					var mouseCoord=(e.pageY-mCSB_draggerContainer.offset().top);
					if(mouseCoord<mCSB_dragger.position().top || mouseCoord>(mCSB_dragger.position().top+mCSB_dragger.height())){
						var scrollToPos=mouseCoord;
						if(scrollToPos>=mCSB_draggerContainer.height()-mCSB_dragger.height()){ /*max dragger position is bottom*/
							scrollToPos=mCSB_draggerContainer.height()-mCSB_dragger.height();
						}
						mCSB_dragger.css("top",scrollToPos);
						$this.mCustomScrollbar("scroll");
					}
				}
			});
			/*mousewheel scrolling*/
			if($this.data("mouseWheel")){
				var mousewheelVel=$this.data("mouseWheel");
				if($this.data("mouseWheel")==="auto"){
					mousewheelVel=8; /*default mousewheel velocity*/
					/*check for safari browser on mac osx to lower mousewheel velocity*/
					var os=navigator.userAgent;
					if(os.indexOf("Mac")!=-1 && os.indexOf("Safari")!=-1 && os.indexOf("AppleWebKit")!=-1 && os.indexOf("Chrome")==-1){ 
						mousewheelVel=1;
					}
				}
				mCustomScrollBox.unbind("mousewheel").bind("mousewheel",function(event,delta){
					event.preventDefault();
					var vel=Math.abs(delta*mousewheelVel);
					if($this.data("horizontalScroll")){
						var posX=mCSB_dragger.position().left-(delta*vel);
						mCSB_dragger.css("left",posX);
						if(mCSB_dragger.position().left<0){
							mCSB_dragger.css("left",0);
						}
						var mCSB_draggerContainerW=mCSB_draggerContainer.width(),
							mCSB_draggerW=mCSB_dragger.width();
						if(mCSB_dragger.position().left>mCSB_draggerContainerW-mCSB_draggerW){
							mCSB_dragger.css("left",mCSB_draggerContainerW-mCSB_draggerW);
						}
					}else{
						var posY=mCSB_dragger.position().top-(delta*vel);
						mCSB_dragger.css("top",posY);
						if(mCSB_dragger.position().top<0){
							mCSB_dragger.css("top",0);
						}
						var mCSB_draggerContainerH=mCSB_draggerContainer.height(),
							mCSB_draggerH=mCSB_dragger.height();
						if(mCSB_dragger.position().top>mCSB_draggerContainerH-mCSB_draggerH){
							mCSB_dragger.css("top",mCSB_draggerContainerH-mCSB_draggerH);
						}
					}
					$this.mCustomScrollbar("scroll");
				});
			}
			/*buttons scrolling*/
			if($this.data("scrollButtons-enable")){
				if($this.data("scrollButtons-scrollType")==="pixels"){ /*scroll by pixels*/
					var pixelsScrollTo;
					if($.browser.msie && parseInt($.browser.version)<9){ /*stupid ie8*/
						$this.data("scrollInertia",0);
					}
					if($this.data("horizontalScroll")){
						mCSB_buttonRight.add(mCSB_buttonLeft).unbind("click mousedown mouseup mouseout",mCSB_buttonRight_stop,mCSB_buttonLeft_stop);
						/*scroll right*/
						mCSB_buttonRight.bind("click",function(e){
							e.preventDefault();
							if(!mCSB_container.is(":animated")){
								pixelsScrollTo=Math.abs(mCSB_container.position().left)+$this.data("scrollButtons-scrollAmount");
								$this.mCustomScrollbar("scrollTo",pixelsScrollTo);
							}
						});
						/*scroll left*/
						mCSB_buttonLeft.bind("click",function(e){
							e.preventDefault();
							if(!mCSB_container.is(":animated")){
								pixelsScrollTo=Math.abs(mCSB_container.position().left)-$this.data("scrollButtons-scrollAmount");
								if(mCSB_container.position().left>=-$this.data("scrollButtons-scrollAmount")){
									pixelsScrollTo="left";
								}
								$this.mCustomScrollbar("scrollTo",pixelsScrollTo);
							}
						});
					}else{
						mCSB_buttonDown.add(mCSB_buttonUp).unbind("click mousedown mouseup mouseout",mCSB_buttonDown_stop,mCSB_buttonUp_stop);
						/*scroll down*/
						mCSB_buttonDown.bind("click",function(e){
							e.preventDefault();
							if(!mCSB_container.is(":animated")){
								pixelsScrollTo=Math.abs(mCSB_container.position().top)+$this.data("scrollButtons-scrollAmount");
								$this.mCustomScrollbar("scrollTo",pixelsScrollTo);
							}
						});
						/*scroll up*/
						mCSB_buttonUp.bind("click",function(e){
							e.preventDefault();
							if(!mCSB_container.is(":animated")){
								pixelsScrollTo=Math.abs(mCSB_container.position().top)-$this.data("scrollButtons-scrollAmount");
								if(mCSB_container.position().top>=-$this.data("scrollButtons-scrollAmount")){
									pixelsScrollTo="top";
								}
								$this.mCustomScrollbar("scrollTo",pixelsScrollTo);
							}
						});
					}
				}else{ /*continuous scrolling*/
					if($this.data("horizontalScroll")){
						mCSB_buttonRight.add(mCSB_buttonLeft).unbind("click mousedown mouseup mouseout",mCSB_buttonRight_stop,mCSB_buttonLeft_stop);
						/*scroll right*/
						var mCSB_buttonScrollRight,
							mCSB_draggerContainerW=mCSB_draggerContainer.width(),
							mCSB_draggerW=mCSB_dragger.width();
						mCSB_buttonRight.bind("mousedown",function(e){
							e.preventDefault();
							var draggerScrollTo=mCSB_draggerContainerW-mCSB_draggerW;
							mCSB_buttonScrollRight=setInterval(function(){
								var scrollToSpeed=Math.abs(mCSB_dragger.position().left-draggerScrollTo)*(100/$this.data("scrollButtons-scrollSpeed"));
								mCSB_dragger.stop().animate({left:draggerScrollTo},scrollToSpeed,"linear");
								$this.mCustomScrollbar("scroll");
							},20);
						});
						var mCSB_buttonRight_stop=function(e){
							e.preventDefault();
							clearInterval(mCSB_buttonScrollRight);
							mCSB_dragger.stop();
						}
						mCSB_buttonRight.bind("mouseup mouseout",mCSB_buttonRight_stop);
						/*scroll left*/
						var mCSB_buttonScrollLeft;
						mCSB_buttonLeft.bind("mousedown",function(e){
							e.preventDefault();
							var draggerScrollTo=0;
							mCSB_buttonScrollLeft=setInterval(function(){
								var scrollToSpeed=Math.abs(mCSB_dragger.position().left-draggerScrollTo)*(100/$this.data("scrollButtons-scrollSpeed"));
								mCSB_dragger.stop().animate({left:draggerScrollTo},scrollToSpeed,"linear");
								$this.mCustomScrollbar("scroll");
							},20);
						});	
						var mCSB_buttonLeft_stop=function(e){
							e.preventDefault();
							clearInterval(mCSB_buttonScrollLeft);
							mCSB_dragger.stop();
						}
						mCSB_buttonLeft.bind("mouseup mouseout",mCSB_buttonLeft_stop);
					}else{
						mCSB_buttonDown.add(mCSB_buttonUp).unbind("click mousedown mouseup mouseout",mCSB_buttonDown_stop,mCSB_buttonUp_stop);
						/*scroll down*/
						var mCSB_buttonScrollDown,
							mCSB_draggerContainerH=mCSB_draggerContainer.height(),
							mCSB_draggerH=mCSB_dragger.height();
						mCSB_buttonDown.bind("mousedown",function(e){
							e.preventDefault();
							var draggerScrollTo=mCSB_draggerContainerH-mCSB_draggerH;
							mCSB_buttonScrollDown=setInterval(function(){
								var scrollToSpeed=Math.abs(mCSB_dragger.position().top-draggerScrollTo)*(100/$this.data("scrollButtons-scrollSpeed"));
								mCSB_dragger.stop().animate({top:draggerScrollTo},scrollToSpeed,"linear");
								$this.mCustomScrollbar("scroll");
							},20);
						});
						var mCSB_buttonDown_stop=function(e){
							e.preventDefault();
							clearInterval(mCSB_buttonScrollDown);
							mCSB_dragger.stop();
						}
						mCSB_buttonDown.bind("mouseup mouseout",mCSB_buttonDown_stop);
						/*scroll up*/
						var mCSB_buttonScrollUp;
						mCSB_buttonUp.bind("mousedown",function(e){
							e.preventDefault();
							var draggerScrollTo=0;
							mCSB_buttonScrollUp=setInterval(function(){
								var scrollToSpeed=Math.abs(mCSB_dragger.position().top-draggerScrollTo)*(100/$this.data("scrollButtons-scrollSpeed"));
								mCSB_dragger.stop().animate({top:draggerScrollTo},scrollToSpeed,"linear");
								$this.mCustomScrollbar("scroll");
							},20);
						});	
						var mCSB_buttonUp_stop=function(e){
							e.preventDefault();
							clearInterval(mCSB_buttonScrollUp);
							mCSB_dragger.stop();
						}
						mCSB_buttonUp.bind("mouseup mouseout",mCSB_buttonUp_stop);
					}
				}
			}
			/*scrolling on element focus (e.g. via TAB key)*/
			mCustomScrollBox.unbind("focusin").bind("focusin",function(){
				mCustomScrollBox.scrollTop(0).scrollLeft(0);
				var focusedElem=$(document.activeElement);
				if(focusedElem.is("input,textarea,select,button,a[tabindex],area,object")){
					if($this.data("horizontalScroll")){
						var mCSB_containerX=mCSB_container.position().left,
							focusedElemX=focusedElem.position().left,
							mCustomScrollBoxW=mCustomScrollBox.width(),
							focusedElemW=focusedElem.outerWidth();
						if(mCSB_containerX+focusedElemX>=0 && mCSB_containerX+focusedElemX<=mCustomScrollBoxW-focusedElemW){
							/*just focus...*/
						}else{ /*scroll, then focus*/
							var moveDragger=focusedElemX/$this.data("scrollAmount");
							if(moveDragger>=mCSB_draggerContainer.width()-mCSB_dragger.width()){ /*max dragger position is bottom*/
								moveDragger=mCSB_draggerContainer.width()-mCSB_dragger.width();
							}
							mCSB_dragger.css("left",moveDragger);
							$this.mCustomScrollbar("scroll");
						}
					}else{
						var mCSB_containerY=mCSB_container.position().top,
							focusedElemY=focusedElem.position().top,
							mCustomScrollBoxH=mCustomScrollBox.height(),
							focusedElemH=focusedElem.outerHeight();
						if(mCSB_containerY+focusedElemY>=0 && mCSB_containerY+focusedElemY<=mCustomScrollBoxH-focusedElemH){
							/*just focus...*/
						}else{ /*scroll, then focus*/
							var moveDragger=focusedElemY/$this.data("scrollAmount");
							if(moveDragger>=mCSB_draggerContainer.height()-mCSB_dragger.height()){ /*max dragger position is bottom*/
								moveDragger=mCSB_draggerContainer.height()-mCSB_dragger.height();
							}
							mCSB_dragger.css("top",moveDragger);
							$this.mCustomScrollbar("scroll");
						}
					}
				}
			});
		},
		scroll:function(updated){
			var $this=$(this),
				mCSB_dragger=$this.find(".mCSB_dragger"),
				mCSB_container=$this.find(".mCSB_container"),
				mCustomScrollBox=$this.find(".mCustomScrollBox");
			if($this.data("horizontalScroll")){
				var draggerX=mCSB_dragger.position().left,
					targX=-draggerX*$this.data("scrollAmount"),
					thisX=mCSB_container.position().left,
					posX=Math.round(thisX-targX);
			}else{
				var draggerY=mCSB_dragger.position().top,
					targY=-draggerY*$this.data("scrollAmount"),
					thisY=mCSB_container.position().top,
					posY=Math.round(thisY-targY);
			}
			if($.browser.webkit){ /*fix webkit zoom and jquery animate*/
				var screenCssPixelRatio=(window.outerWidth-8)/window.innerWidth,
					isZoomed=(screenCssPixelRatio<.98 || screenCssPixelRatio>1.02);
			}
			if($this.data("scrollInertia")===0 || isZoomed){
				if($this.data("horizontalScroll")){
					mCSB_container.css("left",targX);
				}else{
					mCSB_container.css("top",targY);
				}
				if(!updated){
					$this.mCustomScrollbar("callbacks",mCustomScrollBox,mCSB_container); /*user custom callback functions*/
				}
			}else{
				if($this.data("horizontalScroll")){
					mCSB_container.stop().animate({left: "-="+posX},$this.data("scrollInertia"),$this.data("scrollEasing"),function(){
						if(!updated){
							$this.mCustomScrollbar("callbacks",mCustomScrollBox,mCSB_container); /*user custom callback functions*/
						}
					});
				}else{
					mCSB_container.stop().animate({top: "-="+posY},$this.data("scrollInertia"),$this.data("scrollEasing"),function(){
						if(!updated){
							$this.mCustomScrollbar("callbacks",mCustomScrollBox,mCSB_container); /*user custom callback functions*/
						}
					});
				}
			}
		},
		scrollTo:function(scrollTo,options){
			var defaults={
				moveDragger:false,
				callback:true
			},
				options=$.extend(defaults,options),
				$this=$(this),
				scrollToPos,
				mCustomScrollBox=$this.find(".mCustomScrollBox"),
				mCSB_container=mCustomScrollBox.children(".mCSB_container");
			if(!$(document).data("mCS-is-touch-device")){
				var mCSB_draggerContainer=$this.find(".mCSB_draggerContainer"),
					mCSB_dragger=mCSB_draggerContainer.children(".mCSB_dragger");
			}
			var targetPos;
			if(scrollTo){
				if(typeof(scrollTo)==="number"){ /*if integer, scroll by number of pixels*/
					if(options.moveDragger){ /*scroll dragger*/
						scrollToPos=scrollTo;
					}else{ /*scroll content by default*/
						targetPos=scrollTo;
						scrollToPos=Math.round(targetPos/$this.data("scrollAmount"));
					}
				}else if(typeof(scrollTo)==="string"){ /*if string, scroll by element position*/
					var target;
					if(scrollTo==="top"){ /*scroll to top*/
						target=0;
					}else if(scrollTo==="bottom" && !$this.data("horizontalScroll")){ /*scroll to bottom*/
						target=mCSB_container.outerHeight()-mCustomScrollBox.height();
					}else if(scrollTo==="left"){ /*scroll to left*/
						target=0;
					}else if(scrollTo==="right" && $this.data("horizontalScroll")){ /*scroll to right*/
						target=mCSB_container.outerWidth()-mCustomScrollBox.width();
					}else if(scrollTo==="first"){ /*scroll to first element position*/
						target=$this.find(".mCSB_container").find(":first");
					}else if(scrollTo==="last"){ /*scroll to last element position*/
						target=$this.find(".mCSB_container").find(":last");
					}else{ /*scroll to element position*/
						target=$this.find(scrollTo);
					}
					if(target.length===1){ /*if such unique element exists, scroll to it*/
						if($this.data("horizontalScroll")){
							targetPos=target.position().left;
						}else{
							targetPos=target.position().top;
						}
						if($(document).data("mCS-is-touch-device")){
							scrollToPos=targetPos;
						}else{
							scrollToPos=Math.ceil(targetPos/$this.data("scrollAmount"));
						}
					}else{
						scrollToPos=target;
					}
				}
				/*scroll to*/
				if($(document).data("mCS-is-touch-device")){ /*is touch device*/
					if($this.data("horizontalScroll")){
						mCustomScrollBox.stop().animate({scrollLeft:scrollToPos},$this.data("scrollInertia"),$this.data("scrollEasing"),function(){
							if(options.callback){
								$this.mCustomScrollbar("callbacks",mCustomScrollBox,mCSB_container);
							}
						});
					}else{
						mCustomScrollBox.stop().animate({scrollTop:scrollToPos},$this.data("scrollInertia"),$this.data("scrollEasing"),function(){
							if(options.callback){
								$this.mCustomScrollbar("callbacks",mCustomScrollBox,mCSB_container);
							}
						});
					}
				}else{ /*not touch device*/
					if($this.data("horizontalScroll")){
						if(scrollToPos>=mCSB_draggerContainer.width()-mCSB_dragger.width()){ /*max dragger position is bottom*/
							scrollToPos=mCSB_draggerContainer.width()-mCSB_dragger.width();
						}
						mCSB_dragger.css("left",scrollToPos);
					}else{
						if(scrollToPos>=mCSB_draggerContainer.height()-mCSB_dragger.height()){ /*max dragger position is bottom*/
							scrollToPos=mCSB_draggerContainer.height()-mCSB_dragger.height();
						}
						mCSB_dragger.css("top",scrollToPos);
					}
					if(options.callback){
						$this.mCustomScrollbar("scroll");
					}else{
						$this.mCustomScrollbar("scroll",true);
					}
				}
					
			}
		},
		callbacks:function(mCustomScrollBox,mCSB_container){
			var $this=$(this);
			if(!$(document).data("mCS-is-touch-device")){ /*not touch device*/
				if($this.data("horizontalScroll")){
					var mCSB_containerX=Math.round(mCSB_container.position().left);
					if(mCSB_containerX<0 && mCSB_containerX<=mCustomScrollBox.width()-mCSB_container.outerWidth()+$this.data("onTotalScroll-Offset")){
						$this.data("onTotalScroll-Callback").call();
					}else{
						$this.data("onScroll-Callback").call();
					}
				}else{
					var mCSB_containerY=Math.round(mCSB_container.position().top);
					if(mCSB_containerY<0 && mCSB_containerY<=mCustomScrollBox.height()-mCSB_container.outerHeight()+$this.data("onTotalScroll-Offset")){
						$this.data("onTotalScroll-Callback").call();
					}else{
						$this.data("onScroll-Callback").call();
					}
				}
			}else{ /*is touch device*/
				if($this.data("horizontalScroll")){
					var mCustomScrollBoxX=Math.round(mCustomScrollBox.scrollLeft());
					if(mCustomScrollBoxX>0 && mCustomScrollBoxX>=mCSB_container.outerWidth()-$this.width()-$this.data("onTotalScroll-Offset")){
						$this.data("onTotalScroll-Callback").call();
					}else{
						$this.data("onScroll-Callback").call();
					}
				}else{
					var mCustomScrollBoxY=Math.round(mCustomScrollBox.scrollTop());
					if(mCustomScrollBoxY>0 && mCustomScrollBoxY>=mCSB_container.outerHeight()-$this.height()-$this.data("onTotalScroll-Offset")){
						$this.data("onTotalScroll-Callback").call();
					}else{
						$this.data("onScroll-Callback").call();
					}
				}
			}
		}
	}
	$.fn.mCustomScrollbar=function(method){
		if(methods[method]){
			return methods[method].apply(this,Array.prototype.slice.call(arguments,1));
		}else if(typeof method==="object" || !method){
			return methods.init.apply(this,arguments);
		}else{
			$.error("Method "+method+" does not exist");
		}
	};
})(jQuery);  
/*!
 * jQuery Selectbox plugin 0.2
 *
 * Copyright 2011-2012, Dimitar Ivanov (http://www.bulgaria-web-developers.com/projects/javascript/selectbox/)
 * Licensed under the MIT (http://www.opensource.org/licenses/mit-license.php) license.
 * 
 * Date: Tue Jul 17 19:58:36 2012 +0300
 */
(function ($, undefined) {
    var PROP_NAME = 'selectbox',
		FALSE = false,
		TRUE = true;
    /**
	 * Selectbox manager.
	 * Use the singleton instance of this class, $.selectbox, to interact with the select box.
	 * Settings for (groups of) select boxes are maintained in an instance object,
	 * allowing multiple different settings on the same page
	 */
    function Selectbox() {
        this._state = [];
        this._defaults = { // Global defaults for all the select box instances
            classHolder: "sbHolder",
            classHolderDisabled: "sbHolderDisabled",
            classSelector: "sbSelector",
            classOptions: "sbOptions",
            classGroup: "sbGroup",
            classDisabled: "sbDisabled",
            classToggleOpen: "sbToggleOpen",
            classToggle: "sbToggle",
            classFocus: "sbFocus",
            theme: "Light",
            wrap: false,
            height: 32,
            onChange: null, //Define a callback function when the selectbox is changed
            onOpen: null, //Define a callback function when the selectbox is open
            onClose: null //Define a callback function when the selectbox is closed
        };
    }

    $.extend(Selectbox.prototype, {
        /**
		 * Is the first field in a jQuery collection open as a selectbox
		 * 
		 * @param {Object} target
		 * @return {Boolean}
		 */
        _isOpenSelectbox: function (target) {
            if (!target) {
                return FALSE;
            }
            var inst = this._getInst(target);
            return inst.isOpen;
        },
        /**
		 * Is the first field in a jQuery collection disabled as a selectbox
		 * 
		 * @param {HTMLElement} target
		 * @return {Boolean}
		 */
        _isDisabledSelectbox: function (target) {
            if (!target) {
                return FALSE;
            }
            var inst = this._getInst(target);
            return inst.isDisabled;
        },
        /**
		 * Attach the select box to a jQuery selection.
		 * 
		 * @param {HTMLElement} target
		 * @param {Object} settings
		 */
        _attachSelectbox: function (target, settings) {
            if (this._getInst(target)) {
                return FALSE;
            }
            var $target = $(target),
				self = this,
				inst = self._newInst($target),
				sbHolder, sbSelector, sbToggle, sbOptionsWrapper, sbOptions,
				s = FALSE, optGroup = $target.find("optgroup"), opts = $target.find("option"), olen = opts.length;

            $target.attr("sb", inst.uid);

            $.extend(inst.settings, self._defaults, settings);
            self._state[inst.uid] = FALSE;
            $target.css('visibility', 'hidden');

            function closeOthers() {
                var key, sel,
					uid = this.attr("id").split("_")[1];
                for (key in self._state) {
                    if (key !== uid) {
                        if (self._state.hasOwnProperty(key)) {
                            sel = $("select[sb='" + key + "']")[0];
                            if (sel) {
                                self._closeSelectbox(sel);
                            }
                        }
                    }
                }
            }

            sbHolder = $("<div>", {
                "id": "sbHolder_" + inst.uid,
                "class": inst.settings.classHolder + inst.settings.theme,
                "tabindex": $target.attr("tabindex"),
                "css": {
                    "top": target.offsetTop,
                    "left": target.offsetLeft,
                    "width": target.offsetWidth,
                    "height": inst.settings.height,
                    "line-height": inst.settings.height + "px",
                    "overflow": "hidden"
                }
            });

            sbSelector = $("<div>", {
                "id": "sbSelector_" + inst.uid,
                "class": inst.settings.classSelector + inst.settings.theme,
                "click": function (e) {
                    e.preventDefault();
                    closeOthers.apply($(this), []);
                    var uid = $(this).attr("id").split("_")[1];
                    if (self._state[uid]) {
                        self._closeSelectbox(target);
                    } else {
                        self._openSelectbox(target);
                    }
                },
                "css": {
                    "width": (target.offsetWidth - 30),
                    "height": inst.settings.height,
                    "line-height": inst.settings.height + "px"
                }
            });

            sbToggle = $("<div>", {
                "id": "sbToggle_" + inst.uid,
                "class": inst.settings.classToggle + inst.settings.theme,
                "click": function (e) {
                    e.preventDefault();
                    closeOthers.apply($(this), []);
                    var uid = $(this).attr("id").split("_")[1];
                    if (self._state[uid]) {
                        self._closeSelectbox(target);
                    } else {
                        self._openSelectbox(target);
                    }
                },
                "css": {
                    "height": inst.settings.height
                }
            });
            sbToggle.appendTo(sbHolder);

            sbOptionsWrapper = $("<div>", {
                "id": "sbOptionsWrapper_" + inst.uid,
                "class": "sbOptionsWrapper" + inst.settings.theme,
                "css": {
                    "top": sbHolder.offsetHeight,
                    "width": target.offsetWidth
                }
            });

            sbOptions = $("<ul>", {
                "id": "sbOptions_" + inst.uid,
                "class": inst.settings.classOptions + inst.settings.theme
            });

            $target.children().each(function (i) {
                var that = $(this), li, config = {};
                if (that.is("option")) {
                    getOptions(that);
                } else if (that.is("optgroup")) {
                    li = $("<li>");
                    $("<span>", {
                        "text": that.attr("label")
                    }).addClass(inst.settings.classGroup + inst.settings.theme).appendTo(li);
                    li.appendTo(sbOptions);
                    if (that.is(":disabled")) {
                        config.disabled = true;
                    }
                    config.sub = true;
                    getOptions(that.find("option"), config);
                }
            });

            function getOptions() {
                var sub = arguments[1] && arguments[1].sub ? true : false,
					disabled = arguments[1] && arguments[1].disabled ? true : false;
                arguments[0].each(function (i) {
                    var liTag = "";
                    if (inst.settings.wrap) {
                        liTag = "font-family:'" + this.innerHTML + "';"
                    }
                    var that = $(this),
						li = $("<li>", {
						    "css": {
						        "width": (target.offsetWidth - 24)
						    }
						}),
						child;
                    if (inst.settings.theme != "Ecom") {
                        li.css({
                            "height": inst.settings.height,
                            "line-height": inst.settings.height + "px"
                        });
                    }
                    if (that.is(":selected")) {
                        sbSelector.text(that.text());
                        s = TRUE;
                    }
                    if (i === olen - 1) {
                        li.addClass("last");
                    }
                    var tt = that.val();
                    if (!that.is(":disabled") && !disabled) {
                        child = $("<a>", {
                            "rel": that.val(),
                            "style": liTag
                        }).text(that.text()).bind("click.sb", function (e) {
                            if (e && e.preventDefault) {
                                e.preventDefault();
                            }
                            var t = sbToggle,
							 	$this = $(this),
								uid = t.attr("id").split("_")[1];
                            self._changeSelectbox(target, $this.attr("rel"), $this.text(), $this.attr('class'));
                            self._closeSelectbox(target);
                        }).bind("mouseover.sb", function () {
                            var $this = $(this);
                            $this.parent().siblings().find("a").removeClass(inst.settings.classFocus + inst.settings.theme);
                            $this.addClass(inst.settings.classFocus + inst.settings.theme);
                        }).bind("mouseout.sb", function () {
                            $(this).removeClass(inst.settings.classFocus + inst.settings.theme);
                        });
                        if (sub) {
                            child.addClass(inst.settings.classSub + inst.settings.theme);
                        }
                        if (that.is(":selected")) {
                            child.addClass(inst.settings.classFocus + inst.settings.theme);
                        }
                        child.appendTo(li);
                    } else {
                        child = $("<span>", {
                            "rel": that.val(),
                            "text": that.text(),
                            "style": liTag
                        }).text(that.text()).bind("click.sb", function (e) {
                            if (e && e.preventDefault) {
                                e.preventDefault();
                            }
                            var t = sbToggle,
							 	$this = $(this),
								uid = t.attr("id").split("_")[1];
                            self._changeSelectbox(target, $this.attr("rel"), $this.text(), $this.attr('class'));
                            self._closeSelectbox(target);
                        }).bind("mouseover.sb", function () {
                            var $this = $(this);
                            $this.parent().siblings().find("a").removeClass(inst.settings.classFocus + inst.settings.theme);
                            $this.addClass(inst.settings.classFocus + inst.settings.theme);
                        }).bind("mouseout.sb", function () {
                            $(this).removeClass(inst.settings.classFocus + inst.settings.theme);
                        }).addClass(inst.settings.classDisabled + inst.settings.theme);
                        if (sub) {
                            child.addClass(inst.settings.classSub + inst.settings.theme);
                        }
                        child.appendTo(li);
                    }
                    li.appendTo(sbOptions);
                });
            }

            if (!s) {
                sbSelector.text(opts.first().text());
            }

            $.data(target, PROP_NAME, inst);

            sbHolder.data("uid", inst.uid).bind("keydown.sb", function (e) {
                var key = e.charCode ? e.charCode : e.keyCode ? e.keyCode : 0,
					$this = $(this),
					uid = $this.data("uid"),
					inst = $this.siblings("select[sb='" + uid + "']").data(PROP_NAME),
					trgt = $this.siblings(["select[sb='", uid, "']"].join("")).get(0),
					$f = $this.find("ul").find("a." + inst.settings.classFocus + inst.settings.theme);
                switch (key) {
                    case 37: //Arrow Left
                    case 38: //Arrow Up
                        if ($f.length > 0) {
                            var $next;
                            $("a", $this).removeClass(inst.settings.classFocus + inst.settings.theme);
                            $next = $f.parent().prevAll("li:has(a)").eq(0).find("a");
                            if ($next.length > 0) {
                                $next.addClass(inst.settings.classFocus + inst.settings.theme).focus();
                                $("#sbSelector_" + uid).text($next.text());
                            }
                        }
                        break;
                    case 39: //Arrow Right
                    case 40: //Arrow Down
                        var $next;
                        $("a", $this).removeClass(inst.settings.classFocus + inst.settings.theme);
                        if ($f.length > 0) {
                            $next = $f.parent().nextAll("li:has(a)").eq(0).find("a");
                        } else {
                            $next = $this.find("ul").find("a").eq(0);
                        }
                        if ($next.length > 0) {
                            $next.addClass(inst.settings.classFocus + inst.settings.theme).focus();
                            $("#sbSelector_" + uid).text($next.text());
                        }
                        break;
                    case 13: //Enter
                        if ($f.length > 0) {
                            self._changeSelectbox(trgt, $f.attr("rel"), $f.text());
                        }
                        self._closeSelectbox(trgt);
                        break;
                    case 9: //Tab
                        if (trgt) {
                            var inst = self._getInst(trgt);
                            if (inst/* && inst.isOpen*/) {
                                if ($f.length > 0) {
                                    self._changeSelectbox(trgt, $f.attr("rel"), $f.text());
                                }
                                self._closeSelectbox(trgt);
                            }
                        }
                        var i = parseInt($this.attr("tabindex"), 10);
                        if (!e.shiftKey) {
                            i++;
                        } else {
                            i--;
                        }
                        $("*[tabindex='" + i + "']").focus();
                        break;
                    case 27: //Escape
                        self._closeSelectbox(trgt);
                        break;
                }
                e.stopPropagation();
                return false;
            }).delegate("a", "mouseover", function (e) {
                $(this).addClass(inst.settings.classFocus + inst.settings.theme);
            }).delegate("a", "mouseout", function (e) {
                $(this).removeClass(inst.settings.classFocus + inst.settings.theme);
            });

            sbSelector.appendTo(sbHolder);
            sbOptionsWrapper.appendTo(sbHolder);
            sbOptions.appendTo(sbOptionsWrapper);
            sbHolder.insertAfter($target);

            var scrollTheme = inst.settings.theme;
            if (scrollTheme == "Ecom") {
                scrollTheme = checkScrollColour($(sbOptionsWrapper).css("backgroundColor"));
            }
            else if (scrollTheme == "Dark" || scrollTheme == "Market") {
                scrollTheme = "lightScroll";
            }
            else if (scrollTheme == "Light") {
                scrollTheme = "darkScroll";
            }

            document.getElementById("sbOptionsWrapper_" + inst.uid).className = document.getElementById("sbOptionsWrapper_" + inst.uid).className + " " + scrollTheme;

            $("#sbOptionsWrapper_" + inst.uid).mCustomScrollbar({ scrollButtons: { enable: true } });

            $("html").on('mousedown', function (e) {
                //e.stopPropagation();
                $("select").selectbox('close');
            });
            $([".", inst.settings.classHolder + inst.settings.theme, ", .", inst.settings.classSelector + inst.settings.theme].join("")).mousedown(function (e) {
                e.stopPropagation();
            });
        },
        /**
		 * Remove the selectbox functionality completely. This will return the element back to its pre-init state.
		 * 
		 * @param {HTMLElement} target
		 */
        _detachSelectbox: function (target) {
            var inst = this._getInst(target);
            if (!inst) {
                return FALSE;
            }
            $("#sbHolder_" + inst.uid).remove();
            $.data(target, PROP_NAME, null);
            $(target).css('visibility', 'visible');
        },
        /**
		 * Change selected attribute of the selectbox.
		 * 
		 * @param {HTMLElement} target
		 * @param {String} value
		 * @param {String} text
		 */
        _changeSelectbox: function (target, value, text, clsName) {
            var sBoxCanChange = true;
            if (clsName) {
                if (clsName.indexOf("Disabled") > -1) {
                    sBoxCanChange = false;
                }
            }
            if (sBoxCanChange) {
                var onChange,
                    inst = this._getInst(target);
                if (inst) {
                    onChange = this._get(inst, 'onChange');
                    $("#sbSelector_" + inst.uid).text(text);
                }
                value = value.replace(/\'/g, "\\'");
                $(target).find("option").attr("selected", FALSE);
                $(target).find("option[value='" + value + "']").attr("selected", TRUE);
                $(target).attr("selectedIndex", $(target).find("option[value='" + value + "']").index());
                if (inst && onChange) {
                    onChange.apply((inst.input ? inst.input[0] : null), [value, inst, clsName, text]);
                } else if (inst && inst.input) {
                    inst.input.trigger('change');
                }
            }
        },
        /**
		 * Enable the selectbox.
		 * 
		 * @param {HTMLElement} target
		 */
        _enableSelectbox: function (target) {
            var inst = this._getInst(target);
            if (!inst || !inst.isDisabled) {
                return FALSE;
            }
            $("#sbHolder_" + inst.uid).removeClass(inst.settings.classHolderDisabled + inst.settings.theme);
            inst.isDisabled = FALSE;
            $.data(target, PROP_NAME, inst);
        },
        /**
		 * Disable the selectbox.
		 * 
		 * @param {HTMLElement} target
		 */
        _disableSelectbox: function (target) {
            var inst = this._getInst(target);
            if (!inst || inst.isDisabled) {
                return FALSE;
            }
            $("#sbHolder_" + inst.uid).addClass(inst.settings.classHolderDisabled + inst.settings.theme);
            inst.isDisabled = TRUE;
            $.data(target, PROP_NAME, inst);
        },
        /**
		 * Get or set any selectbox option. If no value is specified, will act as a getter.
		 * 
		 * @param {HTMLElement} target
		 * @param {String} name
		 * @param {Object} value
		 */
        _optionSelectbox: function (target, name, value) {
            var inst = this._getInst(target);
            if (!inst) {
                return FALSE;
            }
            //TODO check name
            inst[name] = value;
            $.data(target, PROP_NAME, inst);
        },
        /**
		 * Call up attached selectbox
		 * 
		 * @param {HTMLElement} target
		 */
        _openSelectbox: function (target) {
            var inst = this._getInst(target);
            //if (!inst || this._state[inst.uid] || inst.isDisabled) {
            if (!inst || inst.isOpen || inst.isDisabled) {
                return;
            }
            var el;
            try{
                if (isMobileV2 && isLiveSite) {
                    el = $("#sbOptionsWrapper_" + inst.uid),
                        viewportHeight = parseInt($('body').height(), 10),
                        offset = $("#sbHolder_" + inst.uid).offset(),
                        scrollTop = $(window).scrollTop(),
                        height = el.prev().height(),
                        diff = viewportHeight - (offset.top - scrollTop) - height / 2,
                        onOpen = this._get(inst, 'onOpen');
                }
                else {
                    el = $("#sbOptionsWrapper_" + inst.uid),
                        viewportHeight = parseInt($(window).height(), 10),
                        offset = $("#sbHolder_" + inst.uid).offset(),
                        scrollTop = $(window).scrollTop(),
                        height = el.prev().height(),
                        diff = viewportHeight - (offset.top - scrollTop) - height / 2,
                        onOpen = this._get(inst, 'onOpen');
                }
            }
            catch (e) {
                el = $("#sbOptionsWrapper_" + inst.uid),
                        viewportHeight = parseInt($(window).height(), 10),
                        offset = $("#sbHolder_" + inst.uid).offset(),
                        scrollTop = $(window).scrollTop(),
                        height = el.prev().height(),
                        diff = viewportHeight - (offset.top - scrollTop) - height / 2,
                        onOpen = this._get(inst, 'onOpen');
            }

            var newMax = (diff - height) - 20;
            var chkHeight = document.getElementById("sbOptions_" + inst.uid).offsetHeight;
            if (chkHeight > newMax) {
                chkHeight = newMax;
            }
            $("#sbHolder_" + inst.uid).css({
                "overflow": "visible"
            });
            el.css({
                "top": height + "px"
            });
            $("#sbOptionsWrapper_" + inst.uid).css('visibility', 'visible');
            $("#sbOptionsWrapper_" + inst.uid).animate({ height: chkHeight + "px" }, 100, function () {
                $("#sbOptionsWrapper_" + inst.uid).mCustomScrollbar("update");
            });

            $("#sbToggle_" + inst.uid).addClass(inst.settings.classToggleOpen + inst.settings.theme);
            this._state[inst.uid] = TRUE;
            inst.isOpen = TRUE;
            if (onOpen) {
                onOpen.apply((inst.input ? inst.input[0] : null), [inst]);
            }
            $.data(target, PROP_NAME, inst);
            try{
                if (isMobileV2 && isLiveSite) {
                    $('html, body').animate({ scrollTop: offset.top }, 1000);
                }
            }
            catch (e) { }
        },
        /**
		 * Close opened selectbox
		 * 
		 * @param {HTMLElement} target
		 */
        _closeSelectbox: function (target) {
            var inst = this._getInst(target);
            //if (!inst || !this._state[inst.uid]) {
            if (!inst || !inst.isOpen) {
                return;
            }
            var onClose = this._get(inst, 'onClose');
            $("#sbOptionsWrapper_" + inst.uid).css('visibility', 'hidden');
            $("#sbOptionsWrapper_" + inst.uid).animate({ height: "0px" }, 100);
            $("#sbToggle_" + inst.uid).removeClass(inst.settings.classToggleOpen + inst.settings.theme);
            this._state[inst.uid] = FALSE;
            inst.isOpen = FALSE;
            if (onClose) {
                onClose.apply((inst.input ? inst.input[0] : null), [inst]);
            }
            $("#sbHolder_" + inst.uid).css({
                "overflow": "hidden"
            });
            $.data(target, PROP_NAME, inst);
        },
        /**
		 * Create a new instance object
		 * 
		 * @param {HTMLElement} target
		 * @return {Object}
		 */
        _newInst: function (target) {
            var id = target[0].id.replace(/([^A-Za-z0-9_-])/g, '\\\\$1');
            return {
                id: id,
                input: target,
                uid: Math.floor(Math.random() * 99999999),
                isOpen: FALSE,
                isDisabled: FALSE,
                settings: {}
            };
        },
        /**
		 * Retrieve the instance data for the target control.
		 * 
		 * @param {HTMLElement} target
		 * @return {Object} - the associated instance data
		 * @throws error if a jQuery problem getting data
		 */
        _getInst: function (target) {
            try {
                return $.data(target, PROP_NAME);
            }
            catch (err) {
                throw 'Missing instance data for this selectbox';
            }
        },
        /**
		 * Get a setting value, defaulting if necessary
		 * 
		 * @param {Object} inst
		 * @param {String} name
		 * @return {Mixed}
		 */
        _get: function (inst, name) {
            return inst.settings[name] !== undefined ? inst.settings[name] : this._defaults[name];
        }
    });

    /**
	 * Invoke the selectbox functionality.
	 * 
	 * @param {Object|String} options
	 * @return {Object}
	 */
    $.fn.selectbox = function (options) {

        var otherArgs = Array.prototype.slice.call(arguments, 1);
        if (typeof options == 'string' && options == 'isDisabled') {
            return $.selectbox['_' + options + 'Selectbox'].apply($.selectbox, [this[0]].concat(otherArgs));
        }

        if (options == 'option' && arguments.length == 2 && typeof arguments[1] == 'string') {
            return $.selectbox['_' + options + 'Selectbox'].apply($.selectbox, [this[0]].concat(otherArgs));
        }

        return this.each(function () {
            typeof options == 'string' ?
				$.selectbox['_' + options + 'Selectbox'].apply($.selectbox, [this].concat(otherArgs)) :
				$.selectbox._attachSelectbox(this, options);
        });
    };

    $.selectbox = new Selectbox(); // singleton instance
    $.selectbox.version = "0.2";
})(jQuery);
/*!
* MediaElement.js
* HTML5 <video> and <audio> shim and player
* http://mediaelementjs.com/
*
* Creates a JavaScript object that mimics HTML5 MediaElement API
* for browsers that don't understand HTML5 or can't play the provided codec
* Can play MP4 (H.264), Ogg, WebM, FLV, WMV, WMA, ACC, and MP3
*
* Copyright 2010-2014, John Dyer (http://j.hn)
* License: MIT
*
*/
// Namespace
var mejs = mejs || {};

// version number
mejs.version = '2.14.2'; 


// player number (for missing, same id attr)
mejs.meIndex = 0;

// media types accepted by plugins
mejs.plugins = {
	silverlight: [
		{version: [3,0], types: ['video/mp4','video/m4v','video/mov','video/wmv','audio/wma','audio/m4a','audio/mp3','audio/wav','audio/mpeg']}
	],
	flash: [
		{version: [9,0,124], types: ['video/mp4','video/m4v','video/mov','video/flv','video/rtmp','video/x-flv','audio/flv','audio/x-flv','audio/mp3','audio/m4a','audio/mpeg', 'video/youtube', 'video/x-youtube']}
		//,{version: [12,0], types: ['video/webm']} // for future reference (hopefully!)
	],
	youtube: [
		{version: null, types: ['video/youtube', 'video/x-youtube', 'audio/youtube', 'audio/x-youtube']}
	],
	vimeo: [
		{version: null, types: ['video/vimeo', 'video/x-vimeo']}
	]
};

/*
Utility methods
*/
mejs.Utility = {
	encodeUrl: function(url) {
		return encodeURIComponent(url); //.replace(/\?/gi,'%3F').replace(/=/gi,'%3D').replace(/&/gi,'%26');
	},
	escapeHTML: function(s) {
		return s.toString().split('&').join('&amp;').split('<').join('&lt;').split('"').join('&quot;');
	},
	absolutizeUrl: function(url) {
		var el = document.createElement('div');
		el.innerHTML = '<a href="' + this.escapeHTML(url) + '">x</a>';
		return el.firstChild.href;
	},
	getScriptPath: function(scriptNames) {
		var
			i = 0,
			j,
			codePath = '',
			testname = '',
			slashPos,
			filenamePos,
			scriptUrl,
			scriptPath,			
			scriptFilename,
			scripts = document.getElementsByTagName('script'),
			il = scripts.length,
			jl = scriptNames.length;
			
		// go through all <script> tags
		for (; i < il; i++) {
			scriptUrl = scripts[i].src;
			slashPos = scriptUrl.lastIndexOf('/');
			if (slashPos > -1) {
				scriptFilename = scriptUrl.substring(slashPos + 1);
				scriptPath = scriptUrl.substring(0, slashPos + 1);
			} else {
				scriptFilename = scriptUrl;
				scriptPath = '';			
			}
			
			// see if any <script> tags have a file name that matches the 
			for (j = 0; j < jl; j++) {
				testname = scriptNames[j];
				filenamePos = scriptFilename.indexOf(testname);
				if (filenamePos > -1) {
					codePath = scriptPath;
					break;
				}
			}
			
			// if we found a path, then break and return it
			if (codePath !== '') {
				break;
			}
		}
		
		// send the best path back
		return codePath;
	},
	secondsToTimeCode: function(time, forceHours, showFrameCount, fps) {
		//add framecount
		if (typeof showFrameCount == 'undefined') {
		    showFrameCount=false;
		} else if(typeof fps == 'undefined') {
		    fps = 25;
		}
	
		var hours = Math.floor(time / 3600) % 24,
			minutes = Math.floor(time / 60) % 60,
			seconds = Math.floor(time % 60),
			frames = Math.floor(((time % 1)*fps).toFixed(3)),
			result = 
					( (forceHours || hours > 0) ? (hours < 10 ? '0' + hours : hours) + ':' : '')
						+ (minutes < 10 ? '0' + minutes : minutes) + ':'
						+ (seconds < 10 ? '0' + seconds : seconds)
						+ ((showFrameCount) ? ':' + (frames < 10 ? '0' + frames : frames) : '');
	
		return result;
	},
	
	timeCodeToSeconds: function(hh_mm_ss_ff, forceHours, showFrameCount, fps){
		if (typeof showFrameCount == 'undefined') {
		    showFrameCount=false;
		} else if(typeof fps == 'undefined') {
		    fps = 25;
		}
		var tc_array = hh_mm_ss_ff.split(":"),
			tc_hh = parseInt(tc_array[0], 10),
			tc_mm = parseInt(tc_array[1], 10),
			tc_ss = parseInt(tc_array[2], 10),
			tc_ff = 0,
			tc_in_seconds = 0;
		
		if (showFrameCount) {
		    tc_ff = parseInt(tc_array[3])/fps;
		}
		
		tc_in_seconds = ( tc_hh * 3600 ) + ( tc_mm * 60 ) + tc_ss + tc_ff;
		
		return tc_in_seconds;
	},
	

	convertSMPTEtoSeconds: function (SMPTE) {
		if (typeof SMPTE != 'string') 
			return false;

		SMPTE = SMPTE.replace(',', '.');
		
		var secs = 0,
			decimalLen = (SMPTE.indexOf('.') != -1) ? SMPTE.split('.')[1].length : 0,
			multiplier = 1;
		
		SMPTE = SMPTE.split(':').reverse();
		
		for (var i = 0; i < SMPTE.length; i++) {
			multiplier = 1;
			if (i > 0) {
				multiplier = Math.pow(60, i); 
			}
			secs += Number(SMPTE[i]) * multiplier;
		}
		return Number(secs.toFixed(decimalLen));
	},	
	
	/* borrowed from SWFObject: http://code.google.com/p/swfobject/source/browse/trunk/swfobject/src/swfobject.js#474 */
	removeSwf: function(id) {
		var obj = document.getElementById(id);
		if (obj && /object|embed/i.test(obj.nodeName)) {
			if (mejs.MediaFeatures.isIE) {
				obj.style.display = "none";
				(function(){
					if (obj.readyState == 4) {
						mejs.Utility.removeObjectInIE(id);
					} else {
						setTimeout(arguments.callee, 10);
					}
				})();
			} else {
				obj.parentNode.removeChild(obj);
			}
		}
	},
	removeObjectInIE: function(id) {
		var obj = document.getElementById(id);
		if (obj) {
			for (var i in obj) {
				if (typeof obj[i] == "function") {
					obj[i] = null;
				}
			}
			obj.parentNode.removeChild(obj);
		}		
	}
};


// Core detector, plugins are added below
mejs.PluginDetector = {

	// main public function to test a plug version number PluginDetector.hasPluginVersion('flash',[9,0,125]);
	hasPluginVersion: function(plugin, v) {
		var pv = this.plugins[plugin];
		v[1] = v[1] || 0;
		v[2] = v[2] || 0;
	
		return true;
	},

	// cached values
	nav: window.navigator,
	ua: window.navigator.userAgent.toLowerCase(),

	// stored version numbers
	plugins: [],

	// runs detectPlugin() and stores the version number
	addPlugin: function(p, pluginName, mimeType, activeX, axDetect) {
		this.plugins[p] = this.detectPlugin(pluginName, mimeType, activeX, axDetect);
	},

	// get the version number from the mimetype (all but IE) or ActiveX (IE)
	detectPlugin: function(pluginName, mimeType, activeX, axDetect) {

		var version = [0,0,0],
			description,
			i,
			ax;

		// Firefox, Webkit, Opera
		if (typeof(this.nav.plugins) != 'undefined' && typeof this.nav.plugins[pluginName] == 'object') {
			description = this.nav.plugins[pluginName].description;
			if (description && !(typeof this.nav.mimeTypes != 'undefined' && this.nav.mimeTypes[mimeType] && !this.nav.mimeTypes[mimeType].enabledPlugin)) {
				version = description.replace(pluginName, '').replace(/^\s+/,'').replace(/\sr/gi,'.').split('.');
				for (i=0; i<version.length; i++) {
					version[i] = parseInt(version[i].match(/\d+/), 10);
				}
			}
		// Internet Explorer / ActiveX
		} else if (typeof(window.ActiveXObject) != 'undefined') {
			try {
				ax = new ActiveXObject(activeX);
				if (ax) {
					version = axDetect(ax);
				}
			}
			catch (e) { }
		}
		return version;
	}
};

// Add Flash detection
mejs.PluginDetector.addPlugin('flash','Shockwave Flash','application/x-shockwave-flash','ShockwaveFlash.ShockwaveFlash', function(ax) {
	// adapted from SWFObject
	var version = [],
		d = ax.GetVariable("$version");
	if (d) {
		d = d.split(" ")[1].split(",");
		version = [parseInt(d[0], 10), parseInt(d[1], 10), parseInt(d[2], 10)];
	}
	return version;
});

// Add Silverlight detection
mejs.PluginDetector.addPlugin('silverlight','Silverlight Plug-In','application/x-silverlight-2','AgControl.AgControl', function (ax) {
	// Silverlight cannot report its version number to IE
	// but it does have a isVersionSupported function, so we have to loop through it to get a version number.
	// adapted from http://www.silverlightversion.com/
	var v = [0,0,0,0],
		loopMatch = function(ax, v, i, n) {
			while(ax.isVersionSupported(v[0]+ "."+ v[1] + "." + v[2] + "." + v[3])){
				v[i]+=n;
			}
			v[i] -= n;
		};
	loopMatch(ax, v, 0, 1);
	loopMatch(ax, v, 1, 1);
	loopMatch(ax, v, 2, 10000); // the third place in the version number is usually 5 digits (4.0.xxxxx)
	loopMatch(ax, v, 2, 1000);
	loopMatch(ax, v, 2, 100);
	loopMatch(ax, v, 2, 10);
	loopMatch(ax, v, 2, 1);
	loopMatch(ax, v, 3, 1);

	return v;
});
// add adobe acrobat
/*
PluginDetector.addPlugin('acrobat','Adobe Acrobat','application/pdf','AcroPDF.PDF', function (ax) {
	var version = [],
		d = ax.GetVersions().split(',')[0].split('=')[1].split('.');

	if (d) {
		version = [parseInt(d[0], 10), parseInt(d[1], 10), parseInt(d[2], 10)];
	}
	return version;
});
*/
// necessary detection (fixes for <IE9)
mejs.MediaFeatures = {
	init: function() {
		var
			t = this,
			d = document,
			nav = mejs.PluginDetector.nav,
			ua = mejs.PluginDetector.ua.toLowerCase(),
			i,
			v,
			html5Elements = ['source','track','audio','video'];

		// detect browsers (only the ones that have some kind of quirk we need to work around)
		t.isiPad = (ua.match(/ipad/i) !== null);
		t.isiPhone = (ua.match(/iphone/i) !== null);
		t.isiOS = t.isiPhone || t.isiPad;
		t.isAndroid = (ua.match(/android/i) !== null);
		t.isBustedAndroid = (ua.match(/android 2\.[12]/) !== null);
		t.isBustedNativeHTTPS = (location.protocol === 'https:' && (ua.match(/android [12]\./) !== null || ua.match(/macintosh.* version.* safari/) !== null));
		t.isIE = (nav.appName.toLowerCase().indexOf("microsoft") != -1 || nav.appName.toLowerCase().match(/trident/gi) !== null);
		t.isChrome = (ua.match(/chrome/gi) !== null);
		t.isFirefox = (ua.match(/firefox/gi) !== null);
		t.isWebkit = (ua.match(/webkit/gi) !== null);
		t.isGecko = (ua.match(/gecko/gi) !== null) && !t.isWebkit && !t.isIE;
		t.isOpera = (ua.match(/opera/gi) !== null);
		t.hasTouch = ('ontouchstart' in window); //  && window.ontouchstart != null); // this breaks iOS 7
		
		// borrowed from Modernizr
		t.svg = !! document.createElementNS &&
				!! document.createElementNS('http://www.w3.org/2000/svg','svg').createSVGRect;

		// create HTML5 media elements for IE before 9, get a <video> element for fullscreen detection
		for (i=0; i<html5Elements.length; i++) {
			v = document.createElement(html5Elements[i]);
		}
		
		t.supportsMediaTag = (typeof v.canPlayType !== 'undefined' || t.isBustedAndroid);

		// Fix for IE9 on Windows 7N / Windows 7KN (Media Player not installer)
		try{
			v.canPlayType("video/mp4");
		}catch(e){
			t.supportsMediaTag = false;
		}

		// detect native JavaScript fullscreen (Safari/Firefox only, Chrome still fails)
		
		// iOS
		t.hasSemiNativeFullScreen = (typeof v.webkitEnterFullscreen !== 'undefined');
		
		// W3C
		t.hasNativeFullscreen = (typeof v.requestFullscreen !== 'undefined');
		
		// webkit/firefox/IE11+
		t.hasWebkitNativeFullScreen = (typeof v.webkitRequestFullScreen !== 'undefined');
		t.hasMozNativeFullScreen = (typeof v.mozRequestFullScreen !== 'undefined');
		t.hasMsNativeFullScreen = (typeof v.msRequestFullscreen !== 'undefined');
		
		t.hasTrueNativeFullScreen = (t.hasWebkitNativeFullScreen || t.hasMozNativeFullScreen || t.hasMsNativeFullScreen);
		t.nativeFullScreenEnabled = t.hasTrueNativeFullScreen;
		
		// Enabled?
		if (t.hasMozNativeFullScreen) {
			t.nativeFullScreenEnabled = document.mozFullScreenEnabled;
		} else if (t.hasMsNativeFullScreen) {
			t.nativeFullScreenEnabled = document.msFullscreenEnabled;		
		}
		
		if (t.isChrome) {
			t.hasSemiNativeFullScreen = false;
		}
		
		if (t.hasTrueNativeFullScreen) {
			
			t.fullScreenEventName = '';
			if (t.hasWebkitNativeFullScreen) { 
				t.fullScreenEventName = 'webkitfullscreenchange';
				
			} else if (t.hasMozNativeFullScreen) {
				t.fullScreenEventName = 'mozfullscreenchange';
				
			} else if (t.hasMsNativeFullScreen) {
				t.fullScreenEventName = 'MSFullscreenChange';
			}
			
			t.isFullScreen = function() {
				if (v.mozRequestFullScreen) {
					return d.mozFullScreen;
				
				} else if (v.webkitRequestFullScreen) {
					return d.webkitIsFullScreen;
				
				} else if (v.hasMsNativeFullScreen) {
					return d.msFullscreenElement !== null;
				}
			}
					
			t.requestFullScreen = function(el) {
		
				if (t.hasWebkitNativeFullScreen) {
					el.webkitRequestFullScreen();
					
				} else if (t.hasMozNativeFullScreen) {
					el.mozRequestFullScreen();

				} else if (t.hasMsNativeFullScreen) {
					el.msRequestFullscreen();

				}
			}
			
			t.cancelFullScreen = function() {				
				if (t.hasWebkitNativeFullScreen) {
					document.webkitCancelFullScreen();
					
				} else if (t.hasMozNativeFullScreen) {
					document.mozCancelFullScreen();
					
				} else if (t.hasMsNativeFullScreen) {
					document.msExitFullscreen();
					
				}
			}	
			
		}
		
		
		// OS X 10.5 can't do this even if it says it can :(
		if (t.hasSemiNativeFullScreen && ua.match(/mac os x 10_5/i)) {
			t.hasNativeFullScreen = false;
			t.hasSemiNativeFullScreen = false;
		}
		
	}
};
mejs.MediaFeatures.init();

/*
extension methods to <video> or <audio> object to bring it into parity with PluginMediaElement (see below)
*/
mejs.HtmlMediaElement = {
	pluginType: 'native',
	isFullScreen: false,

	setCurrentTime: function (time) {
		this.currentTime = time;
	},

	setMuted: function (muted) {
		this.muted = muted;
	},

	setVolume: function (volume) {
		this.volume = volume;
	},

	// for parity with the plugin versions
	stop: function () {
		this.pause();
	},

	// This can be a url string
	// or an array [{src:'file.mp4',type:'video/mp4'},{src:'file.webm',type:'video/webm'}]
	setSrc: function (url) {
		
		// Fix for IE9 which can't set .src when there are <source> elements. Awesome, right?
		var 
			existingSources = this.getElementsByTagName('source');
		while (existingSources.length > 0){
			this.removeChild(existingSources[0]);
		}
	
		if (typeof url == 'string') {
			this.src = url;
		} else {
			var i, media;

			for (i=0; i<url.length; i++) {
				media = url[i];
				if (this.canPlayType(media.type)) {
					this.src = media.src;
					break;
				}
			}
		}
	},

	setVideoSize: function (width, height) {
		this.width = width;
		this.height = height;
	}
};

/*
Mimics the <video/audio> element by calling Flash's External Interface or Silverlights [ScriptableMember]
*/
mejs.PluginMediaElement = function (pluginid, pluginType, mediaUrl) {
	this.id = pluginid;
	this.pluginType = pluginType;
	this.src = mediaUrl;
	this.events = {};
	this.attributes = {};
};

// JavaScript values and ExternalInterface methods that match HTML5 video properties methods
// http://www.adobe.com/livedocs/flash/9.0/ActionScriptLangRefV3/fl/video/FLVPlayback.html
// http://www.whatwg.org/specs/web-apps/current-work/multipage/video.html
mejs.PluginMediaElement.prototype = {

	// special
	pluginElement: null,
	pluginType: '',
	isFullScreen: false,

	// not implemented :(
	playbackRate: -1,
	defaultPlaybackRate: -1,
	seekable: [],
	played: [],

	// HTML5 read-only properties
	paused: true,
	ended: false,
	seeking: false,
	duration: 0,
	error: null,
	tagName: '',

	// HTML5 get/set properties, but only set (updated by event handlers)
	muted: false,
	volume: 1,
	currentTime: 0,

	// HTML5 methods
	play: function () {
		if (this.pluginApi != null) {
			if (this.pluginType == 'youtube' || this.pluginType == 'vimeo') {
				this.pluginApi.playVideo();
			} else {
				this.pluginApi.playMedia();
			}
			this.paused = false;
		}
	},
	load: function () {
		if (this.pluginApi != null) {
			if (this.pluginType == 'youtube' || this.pluginType == 'vimeo') {
			} else {
				this.pluginApi.loadMedia();
			}
			
			this.paused = false;
		}
	},
	pause: function () {
		if (this.pluginApi != null) {
			if (this.pluginType == 'youtube' || this.pluginType == 'vimeo') {
				this.pluginApi.pauseVideo();
			} else {
				this.pluginApi.pauseMedia();
			}			
			
			
			this.paused = true;
		}
	},
	stop: function () {
		if (this.pluginApi != null) {
			if (this.pluginType == 'youtube' || this.pluginType == 'vimeo') {
				this.pluginApi.stopVideo();
			} else {
				this.pluginApi.stopMedia();
			}	
			this.paused = true;
		}
	},
	canPlayType: function(type) {
		var i,
			j,
			pluginInfo,
			pluginVersions = mejs.plugins[this.pluginType];

		for (i=0; i<pluginVersions.length; i++) {
			pluginInfo = pluginVersions[i];

			// test if user has the correct plugin version
			if (mejs.PluginDetector.hasPluginVersion(this.pluginType, pluginInfo.version)) {

				// test for plugin playback types
				for (j=0; j<pluginInfo.types.length; j++) {
					// find plugin that can play the type
					if (type == pluginInfo.types[j]) {
						return 'probably';
					}
				}
			}
		}

		return '';
	},
	
	positionFullscreenButton: function(x,y,visibleAndAbove) {
		if (this.pluginApi != null && this.pluginApi.positionFullscreenButton) {
			this.pluginApi.positionFullscreenButton(Math.floor(x),Math.floor(y),visibleAndAbove);
		}
	},
	
	hideFullscreenButton: function() {
		if (this.pluginApi != null && this.pluginApi.hideFullscreenButton) {
			this.pluginApi.hideFullscreenButton();
		}		
	},	
	

	// custom methods since not all JavaScript implementations support get/set

	// This can be a url string
	// or an array [{src:'file.mp4',type:'video/mp4'},{src:'file.webm',type:'video/webm'}]
	setSrc: function (url) {
		if (typeof url == 'string') {
			this.pluginApi.setSrc(mejs.Utility.absolutizeUrl(url));
			this.src = mejs.Utility.absolutizeUrl(url);
		} else {
			var i, media;

			for (i=0; i<url.length; i++) {
				media = url[i];
				if (this.canPlayType(media.type)) {
					this.pluginApi.setSrc(mejs.Utility.absolutizeUrl(media.src));
					this.src = mejs.Utility.absolutizeUrl(url);
					break;
				}
			}
		}

	},
	setCurrentTime: function (time) {
		if (this.pluginApi != null) {
			if (this.pluginType == 'youtube' || this.pluginType == 'vimeo') {
				this.pluginApi.seekTo(time);
			} else {
				this.pluginApi.setCurrentTime(time);
			}				
			
			
			
			this.currentTime = time;
		}
	},
	setVolume: function (volume) {
		if (this.pluginApi != null) {
			// same on YouTube and MEjs
			if (this.pluginType == 'youtube' || this.pluginType == 'vimeo') {
				this.pluginApi.setVolume(volume * 100);
			} else {
				this.pluginApi.setVolume(volume);
			}
			this.volume = volume;
		}
	},
	setMuted: function (muted) {
		if (this.pluginApi != null) {
			if (this.pluginType == 'youtube' || this.pluginType == 'vimeo') {
				if (muted) {
					this.pluginApi.mute();
				} else {
					this.pluginApi.unMute();
				}
				this.muted = muted;
				this.dispatchEvent('volumechange');
			} else {
				this.pluginApi.setMuted(muted);
			}
			this.muted = muted;
		}
	},

	// additional non-HTML5 methods
	setVideoSize: function (width, height) {
		
		//if (this.pluginType == 'flash' || this.pluginType == 'silverlight') {
			if ( this.pluginElement.style) {
				this.pluginElement.style.width = width + 'px';
				this.pluginElement.style.height = height + 'px';
			}
			if (this.pluginApi != null && this.pluginApi.setVideoSize) {
				this.pluginApi.setVideoSize(width, height);
			}
		//}
	},

	setFullscreen: function (fullscreen) {
		if (this.pluginApi != null && this.pluginApi.setFullscreen) {
			this.pluginApi.setFullscreen(fullscreen);
		}
	},
	
	enterFullScreen: function() {
		if (this.pluginApi != null && this.pluginApi.setFullscreen) {
			this.setFullscreen(true);
		}		
		
	},
	
	exitFullScreen: function() {
		if (this.pluginApi != null && this.pluginApi.setFullscreen) {
			this.setFullscreen(false);
		}
	},	

	// start: fake events
	addEventListener: function (eventName, callback, bubble) {
		this.events[eventName] = this.events[eventName] || [];
		this.events[eventName].push(callback);
	},
	removeEventListener: function (eventName, callback) {
		if (!eventName) { this.events = {}; return true; }
		var callbacks = this.events[eventName];
		if (!callbacks) return true;
		if (!callback) { this.events[eventName] = []; return true; }
		for (var i = 0; i < callbacks.length; i++) {
			if (callbacks[i] === callback) {
				this.events[eventName].splice(i, 1);
				return true;
			}
		}
		return false;
	},	
	dispatchEvent: function (eventName) {
		var i,
			args,
			callbacks = this.events[eventName];

		if (callbacks) {
			args = Array.prototype.slice.call(arguments, 1);
			for (i = 0; i < callbacks.length; i++) {
				callbacks[i].apply(null, args);
			}
		}
	},
	// end: fake events
	
	// fake DOM attribute methods
	hasAttribute: function(name){
		return (name in this.attributes);  
	},
	removeAttribute: function(name){
		delete this.attributes[name];
	},
	getAttribute: function(name){
		if (this.hasAttribute(name)) {
			return this.attributes[name];
		}
		return '';
	},
	setAttribute: function(name, value){
		this.attributes[name] = value;
	},

	remove: function() {
		mejs.Utility.removeSwf(this.pluginElement.id);
		mejs.MediaPluginBridge.unregisterPluginElement(this.pluginElement.id);
	}
};

// Handles calls from Flash/Silverlight and reports them as native <video/audio> events and properties
mejs.MediaPluginBridge = {

	pluginMediaElements:{},
	htmlMediaElements:{},

	registerPluginElement: function (id, pluginMediaElement, htmlMediaElement) {
		this.pluginMediaElements[id] = pluginMediaElement;
		this.htmlMediaElements[id] = htmlMediaElement;
	},

	unregisterPluginElement: function (id) {
		delete this.pluginMediaElements[id];
		delete this.htmlMediaElements[id];
	},

	// when Flash/Silverlight is ready, it calls out to this method
	initPlugin: function (id) {

		var pluginMediaElement = this.pluginMediaElements[id],
			htmlMediaElement = this.htmlMediaElements[id];

		if (pluginMediaElement) {
			// find the javascript bridge
			switch (pluginMediaElement.pluginType) {
				case "flash":
					pluginMediaElement.pluginElement = pluginMediaElement.pluginApi = document.getElementById(id);
					break;
				case "silverlight":
					pluginMediaElement.pluginElement = document.getElementById(pluginMediaElement.id);
					pluginMediaElement.pluginApi = pluginMediaElement.pluginElement.Content.MediaElementJS;
					break;
			}
	
			if (pluginMediaElement.pluginApi != null && pluginMediaElement.success) {
				pluginMediaElement.success(pluginMediaElement, htmlMediaElement);
			}
		}
	},

	// receives events from Flash/Silverlight and sends them out as HTML5 media events
	// http://www.whatwg.org/specs/web-apps/current-work/multipage/video.html
	fireEvent: function (id, eventName, values) {

		var
			e,
			i,
			bufferedTime,
			pluginMediaElement = this.pluginMediaElements[id];

		if(!pluginMediaElement){
            return;
        }
        
		// fake event object to mimic real HTML media event.
		e = {
			type: eventName,
			target: pluginMediaElement
		};

		// attach all values to element and event object
		for (i in values) {
			pluginMediaElement[i] = values[i];
			e[i] = values[i];
		}

		// fake the newer W3C buffered TimeRange (loaded and total have been removed)
		bufferedTime = values.bufferedTime || 0;

		e.target.buffered = e.buffered = {
			start: function(index) {
				return 0;
			},
			end: function (index) {
				return bufferedTime;
			},
			length: 1
		};

		pluginMediaElement.dispatchEvent(e.type, e);
	}
};

/*
Default options
*/
mejs.MediaElementDefaults = {
	// allows testing on HTML5, flash, silverlight
	// auto: attempts to detect what the browser can do
	// auto_plugin: prefer plugins and then attempt native HTML5
	// native: forces HTML5 playback
	// shim: disallows HTML5, will attempt either Flash or Silverlight
	// none: forces fallback view
	mode: 'auto',
	// remove or reorder to change plugin priority and availability
	plugins: ['flash'],
	// shows debug errors on screen
	enablePluginDebug: false,
	// use plugin for browsers that have trouble with Basic Authentication on HTTPS sites
	httpsBasicAuthSite: false,
	// overrides the type specified, useful for dynamic instantiation
	type: '',
	// path to Flash and Silverlight plugins
	pluginPath: '/Scripts/mediaPlayer/',
	// name of flash file
	flashName: 'flashmediaelement_01.swf',
	// streamer for RTMP streaming
	flashStreamer: '',
	// turns on the smoothing filter in Flash
	enablePluginSmoothing: false,
	// enabled pseudo-streaming (seek) on .mp4 files
	enablePseudoStreaming: false,
	// start query parameter sent to server for pseudo-streaming
	pseudoStreamingStartQueryParam: 'start',
	// name of silverlight file
	silverlightName: 'silverlightmediaelement.xap',
	// default if the <video width> is not specified
	defaultVideoWidth: 480,
	// default if the <video height> is not specified
	defaultVideoHeight: 270,
	// overrides <video width>
	pluginWidth: -1,
	// overrides <video height>
	pluginHeight: -1,
	// additional plugin variables in 'key=value' form
	pluginVars: [],	
	// rate in milliseconds for Flash and Silverlight to fire the timeupdate event
	// larger number is less accurate, but less strain on plugin->JavaScript bridge
	timerRate: 250,
	// initial volume for player
	startVolume: 0.8,
	success: function () { },
	error: function () { }
};

/*
Determines if a browser supports the <video> or <audio> element
and returns either the native element or a Flash/Silverlight version that
mimics HTML5 MediaElement
*/
mejs.MediaElement = function (el, o) {
	return mejs.HtmlMediaElementShim.create(el,o);
};

mejs.HtmlMediaElementShim = {

	create: function(el, o) {
		var
			options = mejs.MediaElementDefaults,
			htmlMediaElement = (typeof(el) == 'string') ? document.getElementById(el) : el,
			tagName = htmlMediaElement.tagName.toLowerCase(),
			isMediaTag = (tagName === 'audio' || tagName === 'video'),
			src = (isMediaTag) ? htmlMediaElement.getAttribute('src') : htmlMediaElement.getAttribute('href'),
			poster = htmlMediaElement.getAttribute('poster'),
			autoplay =  htmlMediaElement.getAttribute('autoplay'),
			preload =  htmlMediaElement.getAttribute('preload'),
			controls =  htmlMediaElement.getAttribute('controls'),
			playback,
			prop;

		// extend options
		for (prop in o) {
			options[prop] = o[prop];
		}

		// clean up attributes
		src = 		(typeof src == 'undefined' 	|| src === null || src == '') ? null : src;		
		poster =	(typeof poster == 'undefined' 	|| poster === null) ? '' : poster;
		preload = 	(typeof preload == 'undefined' 	|| preload === null || preload === 'false') ? 'none' : preload;
		autoplay = 	!(typeof autoplay == 'undefined' || autoplay === null || autoplay === 'false');
		controls = 	!(typeof controls == 'undefined' || controls === null || controls === 'false');

		// test for HTML5 and plugin capabilities
		playback = this.determinePlayback(htmlMediaElement, options, mejs.MediaFeatures.supportsMediaTag, isMediaTag, src);
		playback.url = (playback.url !== null) ? mejs.Utility.absolutizeUrl(playback.url) : '';

		if (playback.method == 'native') {
			// second fix for android
			if (mejs.MediaFeatures.isBustedAndroid) {
				htmlMediaElement.src = playback.url;
				htmlMediaElement.addEventListener('click', function() {
					htmlMediaElement.play();
				}, false);
			}
		
			// add methods to native HTMLMediaElement
			return this.updateNative(playback, options, autoplay, preload);
		} else if (playback.method !== '') {
			// create plugin to mimic HTMLMediaElement
			
			return this.createPlugin( playback,  options, poster, autoplay, preload, controls);
		} else {
			// boo, no HTML5, no Flash, no Silverlight.
			this.createErrorMessage( playback, options, poster );
			
			return this;
		}
	},
	
	determinePlayback: function(htmlMediaElement, options, supportsMediaTag, isMediaTag, src) {
		var
			mediaFiles = [],
			i,
			j,
			k,
			l,
			n,
			type,
			result = { method: '', url: '', htmlMediaElement: htmlMediaElement, isVideo: (htmlMediaElement.tagName.toLowerCase() != 'audio')},
			pluginName,
			pluginVersions,
			pluginInfo,
			dummy,
			media;
			
	    // STEP 1: Get URL and type from <video src> or <source src>

		// supplied type overrides <video type> and <source type>
		if (typeof options.type != 'undefined' && options.type !== '') {
			
			// accept either string or array of types
			if (typeof options.type == 'string') {
				mediaFiles.push({type:options.type, url:src});
			} else {
				
				for (i=0; i<options.type.length; i++) {
					mediaFiles.push({type:options.type[i], url:src});
				}
			}

		// test for src attribute first
		} else if (src !== null) {
			type = this.formatType(src, htmlMediaElement.getAttribute('type'));
			mediaFiles.push({type:type, url:src});

		// then test for <source> elements
		} else {
			// test <source> types to see if they are usable
			for (i = 0; i < htmlMediaElement.childNodes.length; i++) {
				n = htmlMediaElement.childNodes[i];
				if (n.nodeType == 1 && n.tagName.toLowerCase() == 'source') {
					src = n.getAttribute('src');
					type = this.formatType(src, n.getAttribute('type'));
					media = n.getAttribute('media');

					if (!media || !window.matchMedia || (window.matchMedia && window.matchMedia(media).matches)) {
						mediaFiles.push({type:type, url:src});
					}
				}
			}
		}
		
		// in the case of dynamicly created players
		// check for audio types
		if (!isMediaTag && mediaFiles.length > 0 && mediaFiles[0].url !== null && this.getTypeFromFile(mediaFiles[0].url).indexOf('audio') > -1) {
			result.isVideo = false;
		}
		

		// STEP 2: Test for playback method
		
		// special case for Android which sadly doesn't implement the canPlayType function (always returns '')
		if (mejs.MediaFeatures.isBustedAndroid) {
			htmlMediaElement.canPlayType = function(type) {
				return (type.match(/video\/(mp4|m4v)/gi) !== null) ? 'maybe' : '';
			};
		}		
		
		// test for native playback first
		if (supportsMediaTag && (options.mode === 'auto' || options.mode === 'auto_plugin' || options.mode === 'native')  && !(mejs.MediaFeatures.isBustedNativeHTTPS && options.httpsBasicAuthSite === true)) {
						
			if (!isMediaTag) {

				// create a real HTML5 Media Element 
				dummy = document.createElement( result.isVideo ? 'video' : 'audio');			
				htmlMediaElement.parentNode.insertBefore(dummy, htmlMediaElement);
				htmlMediaElement.style.display = 'none';
				
				// use this one from now on
				result.htmlMediaElement = htmlMediaElement = dummy;
			}
				
			for (i=0; i<mediaFiles.length; i++) {
			    // normal check
			    
				if (htmlMediaElement.canPlayType(mediaFiles[i].type).replace(/no/, '') !== '' 
					// special case for Mac/Safari 5.0.3 which answers '' to canPlayType('audio/mp3') but 'maybe' to canPlayType('audio/mpeg')
					|| htmlMediaElement.canPlayType(mediaFiles[i].type.replace(/mp3/,'mpeg')).replace(/no/, '') !== ''
					// special case for m4a supported by detecting mp4 support
					|| htmlMediaElement.canPlayType(mediaFiles[i].type.replace(/m4a/,'mp4')).replace(/no/, '') !== '') {
					result.method = 'native';
					result.url = mediaFiles[i].url;
					break;
				}
			}			
			
			if (result.method === 'native') {
				if (result.url !== null) {
					htmlMediaElement.src = result.url;
				}
			
				// if `auto_plugin` mode, then cache the native result but try plugins.
				if (options.mode !== 'auto_plugin') {
					return result;
				}
			}
		}

		// if native playback didn't work, then test plugins
		if (options.mode === 'auto' || options.mode === 'auto_plugin' || options.mode === 'shim') {
			for (i=0; i<mediaFiles.length; i++) {
				type = mediaFiles[i].type;

				// test all plugins in order of preference [silverlight, flash]
				for (j=0; j<options.plugins.length; j++) {

				    pluginName = options.plugins[j];

					// test version of plugin (for future features)
				    pluginVersions = mejs.plugins[pluginName];

					for (k=0; k<pluginVersions.length; k++) {
					    pluginInfo = pluginVersions[k];

						// test if user has the correct plugin version
						
						// for youtube/vimeo
						if (pluginInfo.version == null || mejs.PluginDetector.hasPluginVersion(pluginName, pluginInfo.version)) {

							// test for plugin playback types
							for (l=0; l<pluginInfo.types.length; l++) {
								// find plugin that can play the type
								if (type == pluginInfo.types[l]) {
									result.method = pluginName;
									result.url = mediaFiles[i].url;
									return result;
								}
							}
						}
					}
				}
			}
		}
		
		// at this point, being in 'auto_plugin' mode implies that we tried plugins but failed.
		// if we have native support then return that.
		if (options.mode === 'auto_plugin' && result.method === 'native') {
			return result;
		}

		// what if there's nothing to play? just grab the first available
		if (result.method === '' && mediaFiles.length > 0) {
			result.url = mediaFiles[0].url;
		}

		return result;
	},

	formatType: function(url, type) {
		var ext;

		// if no type is supplied, fake it with the extension
		if (url && !type) {		
			return this.getTypeFromFile(url);
		} else {
			// only return the mime part of the type in case the attribute contains the codec
			// see http://www.whatwg.org/specs/web-apps/current-work/multipage/video.html#the-source-element
			// `video/mp4; codecs="avc1.42E01E, mp4a.40.2"` becomes `video/mp4`
			
			if (type && ~type.indexOf(';')) {
				return type.substr(0, type.indexOf(';')); 
			} else {
				return type;
			}
		}
	},
	
	getTypeFromFile: function(url) {
		url = url.split('?')[0];
		var ext = url.substring(url.lastIndexOf('.') + 1).toLowerCase();
		return (/(mp4|m4v|ogg|ogv|webm|webmv|flv|wmv|mpeg|mov)/gi.test(ext) ? 'video' : 'audio') + '/' + this.getTypeFromExtension(ext);
	},
	
	getTypeFromExtension: function(ext) {
		
		switch (ext) {
			case 'mp4':
			case 'm4v':
			case 'm4a':
				return 'mp4';
			case 'webm':
			case 'webma':
			case 'webmv':	
				return 'webm';
			case 'ogg':
			case 'oga':
			case 'ogv':	
				return 'ogg';
			default:
				return ext;
		}
	},

	createErrorMessage: function(playback, options, poster) {
		var 
			htmlMediaElement = playback.htmlMediaElement,
			errorContainer = document.createElement('div');
			
		errorContainer.className = 'me-cannotplay';

		try {
			errorContainer.style.width = htmlMediaElement.width + 'px';
			errorContainer.style.height = htmlMediaElement.height + 'px';
		} catch (e) {}

    if (options.customError) {
      errorContainer.innerHTML = options.customError;
    } else {
      errorContainer.innerHTML = (poster !== '') ?
        '<a href="' + playback.url + '"><img src="' + poster + '" width="100%" height="100%" /></a>' :
        '<a href="' + playback.url + '"><span>' + mejs.i18n.t('Download File') + '</span></a>';
    }

		htmlMediaElement.parentNode.insertBefore(errorContainer, htmlMediaElement);
		htmlMediaElement.style.display = 'none';

		options.error(htmlMediaElement);
	},

	createPlugin: function (playback, options, poster, autoplay, preload, controls) {
		var 
			htmlMediaElement = playback.htmlMediaElement,
			width = 1,
			height = 1,
			pluginid = 'me_' + playback.method + '_' + (mejs.meIndex++),
			pluginMediaElement = new mejs.PluginMediaElement(pluginid, playback.method, playback.url),
			container = document.createElement('div'),
			specialIEContainer,
			node,
			initVars;

		// copy tagName from html media element
		pluginMediaElement.tagName = htmlMediaElement.tagName

		// copy attributes from html media element to plugin media element
		for (var i = 0; i < htmlMediaElement.attributes.length; i++) {
			var attribute = htmlMediaElement.attributes[i];
			if (attribute.specified == true) {
				pluginMediaElement.setAttribute(attribute.name, attribute.value);
			}
		}

		// check for placement inside a <p> tag (sometimes WYSIWYG editors do this)
		node = htmlMediaElement.parentNode;
		while (node !== null && node.tagName.toLowerCase() !== 'body' && node.parentNode != null) {
			if (node.parentNode.tagName.toLowerCase() === 'p') {
				node.parentNode.parentNode.insertBefore(node, node.parentNode);
				break;
			}
			node = node.parentNode;
		}

		if (playback.isVideo) {
			width = (options.pluginWidth > 0) ? options.pluginWidth : (options.videoWidth > 0) ? options.videoWidth : (htmlMediaElement.getAttribute('width') !== null) ? htmlMediaElement.getAttribute('width') : options.defaultVideoWidth;
			height = (options.pluginHeight > 0) ? options.pluginHeight : (options.videoHeight > 0) ? options.videoHeight : (htmlMediaElement.getAttribute('height') !== null) ? htmlMediaElement.getAttribute('height') : options.defaultVideoHeight;
		
			// in case of '%' make sure it's encoded
			width = mejs.Utility.encodeUrl(width);
			height = mejs.Utility.encodeUrl(height);
		
		} else {
			if (options.enablePluginDebug) {
				width = 320;
				height = 240;
			}
		}

		// register plugin
		pluginMediaElement.success = options.success;
		mejs.MediaPluginBridge.registerPluginElement(pluginid, pluginMediaElement, htmlMediaElement);

		// add container (must be added to DOM before inserting HTML for IE)
		container.className = 'me-plugin';
		container.id = pluginid + '_container';
		
		if (playback.isVideo) {
				htmlMediaElement.parentNode.insertBefore(container, htmlMediaElement);
		} else {
				document.body.insertBefore(container, document.body.childNodes[0]);
		}

		// flash/silverlight vars
		initVars = [
			'id=' + pluginid,
			'isvideo=' + ((playback.isVideo) ? "true" : "false"),
			'autoplay=' + ((autoplay) ? "true" : "false"),
			'preload=' + preload,
			'width=' + width,
			'startvolume=' + options.startVolume,
			'timerrate=' + options.timerRate,
			'flashstreamer=' + options.flashStreamer,
			'height=' + height,
      'pseudostreamstart=' + options.pseudoStreamingStartQueryParam];

		if (playback.url !== null) {
			if (playback.method == 'flash') {
				initVars.push('file=' + mejs.Utility.encodeUrl(playback.url));
			} else {
				initVars.push('file=' + playback.url);
			}
		}
		if (options.enablePluginDebug) {
			initVars.push('debug=true');
		}
		if (options.enablePluginSmoothing) {
			initVars.push('smoothing=true');
		}
        if (options.enablePseudoStreaming) {
          initVars.push('pseudostreaming=true');
        }
		if (controls) {
			initVars.push('controls=true'); // shows controls in the plugin if desired
		}
		if (options.pluginVars) {
			initVars = initVars.concat(options.pluginVars);
		}
		
		switch (playback.method) {
			case 'silverlight':
				container.innerHTML ='<object data="data:application/x-silverlight-2," type="application/x-silverlight-2" id="' + pluginid + '" name="' + pluginid + '" width="' + width + '" height="' + height + '" class="mejs-shim">' +
                                    '<param name="initParams" value="' + initVars.join(',') + '" />' +
                                    '<param name="windowless" value="true" />' +
                                    '<param name="background" value="black" />' +
                                    '<param name="minRuntimeVersion" value="3.0.0.0" />' +
                                    '<param name="autoUpgrade" value="true" />' +
                                    '<param name="source" value="' + options.pluginPath + options.silverlightName + '" />' +
                                    '</object>';
					break;

			case 'flash':

				if (mejs.MediaFeatures.isIE) {
					specialIEContainer = document.createElement('div');
					container.appendChild(specialIEContainer);
					specialIEContainer.outerHTML = '<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="//web.archive.org/web/20190221202932/http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab" ' +
                                                    'id="' + pluginid + '" width="' + width + '" height="' + height + '" class="mejs-shim">' +
                                                    '<param name="movie" value="' + options.pluginPath + options.flashName + '?x=' + (new Date()) + '" />' +
                                                    '<param name="flashvars" value="' + initVars.join('&amp;') + '" />' +
                                                    '<param name="quality" value="high" />' +
                                                    '<param name="bgcolor" value="#000000" />' +
                                                    '<param name="wmode" value="transparent" />' +
                                                    '<param name="allowScriptAccess" value="always" />' +
                                                    '<param name="allowFullScreen" value="true" />' +
                                                    '<param name="scale" value="default" />' + 
                                                    '</object>';

				} else {

					container.innerHTML = '<embed id="' + pluginid + '" name="' + pluginid + '" ' +
                                            'play="true" ' +
                                            'loop="false" ' +
                                            'quality="high" ' +
                                            'bgcolor="#000000" ' +
                                            'wmode="transparent" ' +
                                            'allowScriptAccess="always" ' +
                                            'allowFullScreen="true" ' +
                                            'type="application/x-shockwave-flash" pluginspage="//web.archive.org/web/20190221202932/http://www.macromedia.com/go/getflashplayer" ' +
                                            'src="' + options.pluginPath + options.flashName + '" ' +
                                            'flashvars="' + initVars.join('&') + '" ' +
                                            'width="' + width + '" ' +
                                            'height="' + height + '" ' +
                                            'scale="default"' + 
                                            'class="mejs-shim"></embed>';
				}
				break;
			
			case 'youtube':
			
				
				var videoId;
				// youtu.be url from share button
				if (playback.url.lastIndexOf("youtu.be") != -1) {
					videoId = playback.url.substr(playback.url.lastIndexOf('/')+1);
					if (videoId.indexOf('?') != -1) {
						videoId = videoId.substr(0, videoId.indexOf('?'));
					}
				}
				else {
					videoId = playback.url.substr(playback.url.lastIndexOf('=')+1);
				}
				youtubeSettings = {
						container: container,
						containerId: container.id,
						pluginMediaElement: pluginMediaElement,
						pluginId: pluginid,
						videoId: videoId,
						height: height,
						width: width	
					};				
				
				if (mejs.PluginDetector.hasPluginVersion('flash', [10,0,0]) ) {
					mejs.YouTubeApi.createFlash(youtubeSettings);
				} else {
					mejs.YouTubeApi.enqueueIframe(youtubeSettings);		
				}
				
				break;
			
			// DEMO Code. Does NOT work.
			case 'vimeo':
				var player_id = pluginid + "_player";
				pluginMediaElement.vimeoid = playback.url.substr(playback.url.lastIndexOf('/')+1);
				
				container.innerHTML ='<iframe src="//web.archive.org/web/20190221202932/http://player.vimeo.com/video/' + pluginMediaElement.vimeoid + '?api=1&portrait=0&byline=0&title=0&player_id=' + player_id + '" width="' + width +'" height="' + height +'" frameborder="0" class="mejs-shim" id="' + player_id + '"></iframe>';
				if (typeof($f) == 'function') { // froogaloop available
					var player = $f(container.childNodes[0]);
					player.addEvent('ready', function() {
						player.playVideo = function() {
							player.api('play');
						};
						player.pauseVideo = function() {
							player.api('pause');
						};
                                                player.seekTo = function(seconds) {
                                                        player.api('seekTo', seconds);
                                                };
						function createEvent(player, pluginMediaElement, eventName, e) {
							var obj = {
								type: eventName,
								target: pluginMediaElement
							};
							if (eventName == 'timeupdate') {
								pluginMediaElement.currentTime = obj.currentTime = e.seconds;
								pluginMediaElement.duration = obj.duration = e.duration;
							}
							pluginMediaElement.dispatchEvent(obj.type, obj);
						}
						player.addEvent('play', function() {
							createEvent(player, pluginMediaElement, 'play');
							createEvent(player, pluginMediaElement, 'playing');
						});
						player.addEvent('pause', function() {
							createEvent(player, pluginMediaElement, 'pause');
						});

						player.addEvent('finish', function() {
							createEvent(player, pluginMediaElement, 'ended');
						});
						player.addEvent('playProgress', function(e) {
							createEvent(player, pluginMediaElement, 'timeupdate', e);
						});
						pluginMediaElement.pluginApi = player;

						// init mejs
						mejs.MediaPluginBridge.initPlugin(pluginid);

					});
				}
				else {
					console.warn("You need to include froogaloop for vimeo to work");
				}
				break;			
		}
		// hide original element
		htmlMediaElement.style.display = 'none';
		// prevent browser from autoplaying when using a plugin
		htmlMediaElement.removeAttribute('autoplay');

		// FYI: options.success will be fired by the MediaPluginBridge
		
		return pluginMediaElement;
	},

	updateNative: function(playback, options, autoplay, preload) {
		
		var htmlMediaElement = playback.htmlMediaElement,
			m;
		
		
		// add methods to video object to bring it into parity with Flash Object
		for (m in mejs.HtmlMediaElement) {
			htmlMediaElement[m] = mejs.HtmlMediaElement[m];
		}

		/*
		Chrome now supports preload="none"
		if (mejs.MediaFeatures.isChrome) {
		
			// special case to enforce preload attribute (Chrome doesn't respect this)
			if (preload === 'none' && !autoplay) {
			
				// forces the browser to stop loading (note: fails in IE9)
				htmlMediaElement.src = '';
				htmlMediaElement.load();
				htmlMediaElement.canceledPreload = true;

				htmlMediaElement.addEventListener('play',function() {
					if (htmlMediaElement.canceledPreload) {
						htmlMediaElement.src = playback.url;
						htmlMediaElement.load();
						htmlMediaElement.play();
						htmlMediaElement.canceledPreload = false;
					}
				}, false);
			// for some reason Chrome forgets how to autoplay sometimes.
			} else if (autoplay) {
				htmlMediaElement.load();
				htmlMediaElement.play();
			}
		}
		*/

		// fire success code
		options.success(htmlMediaElement, htmlMediaElement);
		
		return htmlMediaElement;
	}
};

/*
 - test on IE (object vs. embed)
 - determine when to use iframe (Firefox, Safari, Mobile) vs. Flash (Chrome, IE)
 - fullscreen?
*/

// YouTube Flash and Iframe API
mejs.YouTubeApi = {
	isIframeStarted: false,
	isIframeLoaded: false,
	loadIframeApi: function() {
		if (!this.isIframeStarted) {
			var tag = document.createElement('script');
			tag.src = "//web.archive.org/web/20190221202932/http://www.youtube.com/player_api";
			var firstScriptTag = document.getElementsByTagName('script')[0];
			firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
			this.isIframeStarted = true;
		}
	},
	iframeQueue: [],
	enqueueIframe: function(yt) {
		
		if (this.isLoaded) {
			this.createIframe(yt);
		} else {
			this.loadIframeApi();
			this.iframeQueue.push(yt);
		}
	},
	createIframe: function(settings) {
		
		var
		pluginMediaElement = settings.pluginMediaElement,	
		player = new YT.Player(settings.containerId, {
			height: settings.height,
			width: settings.width,
			videoId: settings.videoId,
			playerVars: {controls:0},
			events: {
				'onReady': function() {
					
					// hook up iframe object to MEjs
					settings.pluginMediaElement.pluginApi = player;
					
					// init mejs
					mejs.MediaPluginBridge.initPlugin(settings.pluginId);
					
					// create timer
					setInterval(function() {
						mejs.YouTubeApi.createEvent(player, pluginMediaElement, 'timeupdate');
					}, 250);					
				},
				'onStateChange': function(e) {
					
					mejs.YouTubeApi.handleStateChange(e.data, player, pluginMediaElement);
					
				}
			}
		});
	},
	
	createEvent: function (player, pluginMediaElement, eventName) {
		var obj = {
			type: eventName,
			target: pluginMediaElement
		};

		if (player && player.getDuration) {
			
			// time 
			pluginMediaElement.currentTime = obj.currentTime = player.getCurrentTime();
			pluginMediaElement.duration = obj.duration = player.getDuration();
			
			// state
			obj.paused = pluginMediaElement.paused;
			obj.ended = pluginMediaElement.ended;			
			
			// sound
			obj.muted = player.isMuted();
			obj.volume = player.getVolume() / 100;
			
			// progress
			obj.bytesTotal = player.getVideoBytesTotal();
			obj.bufferedBytes = player.getVideoBytesLoaded();
			
			// fake the W3C buffered TimeRange
			var bufferedTime = obj.bufferedBytes / obj.bytesTotal * obj.duration;
			
			obj.target.buffered = obj.buffered = {
				start: function(index) {
					return 0;
				},
				end: function (index) {
					return bufferedTime;
				},
				length: 1
			};

		}
		
		// send event up the chain
		pluginMediaElement.dispatchEvent(obj.type, obj);
	},	
	
	iFrameReady: function() {
		
		this.isLoaded = true;
		this.isIframeLoaded = true;
		
		while (this.iframeQueue.length > 0) {
			var settings = this.iframeQueue.pop();
			this.createIframe(settings);
		}	
	},
	
	// FLASH!
	flashPlayers: {},
	createFlash: function(settings) {
		
		this.flashPlayers[settings.pluginId] = settings;
		
		/*
		settings.container.innerHTML =
			'<object type="application/x-shockwave-flash" id="' + settings.pluginId + '" data="//web.archive.org/web/20190221202932/http://www.youtube.com/apiplayer?enablejsapi=1&amp;playerapiid=' + settings.pluginId  + '&amp;version=3&amp;autoplay=0&amp;controls=0&amp;modestbranding=1&loop=0" ' +
				'width="' + settings.width + '" height="' + settings.height + '" style="visibility: visible; " class="mejs-shim">' +
				'<param name="allowScriptAccess" value="always">' +
				'<param name="wmode" value="transparent">' +
			'</object>';
		*/

		var specialIEContainer,
			youtubeUrl = '//web.archive.org/web/20190221202932/http://www.youtube.com/apiplayer?enablejsapi=1&amp;playerapiid=' + settings.pluginId  + '&amp;version=3&amp;autoplay=0&amp;controls=0&amp;modestbranding=1&loop=0';
			
		if (mejs.MediaFeatures.isIE) {
			
			specialIEContainer = document.createElement('div');
			settings.container.appendChild(specialIEContainer);
			specialIEContainer.outerHTML = '<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="//web.archive.org/web/20190221202932/http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab" ' +
'id="' + settings.pluginId + '" width="' + settings.width + '" height="' + settings.height + '" class="mejs-shim">' +
	'<param name="movie" value="' + youtubeUrl + '" />' +
	'<param name="wmode" value="transparent" />' +
	'<param name="allowScriptAccess" value="always" />' +
	'<param name="allowFullScreen" value="true" />' +
'</object>';
		} else {
		settings.container.innerHTML =
			'<object type="application/x-shockwave-flash" id="' + settings.pluginId + '" data="' + youtubeUrl + '" ' +
				'width="' + settings.width + '" height="' + settings.height + '" style="visibility: visible; " class="mejs-shim">' +
				'<param name="allowScriptAccess" value="always">' +
				'<param name="wmode" value="transparent">' +
			'</object>';
		}		
		
	},
	
	flashReady: function(id) {
		var
			settings = this.flashPlayers[id],
			player = document.getElementById(id),
			pluginMediaElement = settings.pluginMediaElement;
		
		// hook up and return to MediaELementPlayer.success	
		pluginMediaElement.pluginApi = 
		pluginMediaElement.pluginElement = player;
		mejs.MediaPluginBridge.initPlugin(id);
		
		// load the youtube video
		player.cueVideoById(settings.videoId);
		
		var callbackName = settings.containerId + '_callback';
		
		window[callbackName] = function(e) {
			mejs.YouTubeApi.handleStateChange(e, player, pluginMediaElement);
		}
		
		player.addEventListener('onStateChange', callbackName);
		
		setInterval(function() {
			mejs.YouTubeApi.createEvent(player, pluginMediaElement, 'timeupdate');
		}, 250);
	},
	
	handleStateChange: function(youTubeState, player, pluginMediaElement) {
		switch (youTubeState) {
			case -1: // not started
				pluginMediaElement.paused = true;
				pluginMediaElement.ended = true;
				mejs.YouTubeApi.createEvent(player, pluginMediaElement, 'loadedmetadata');
				//createYouTubeEvent(player, pluginMediaElement, 'loadeddata');
				break;
			case 0:
				pluginMediaElement.paused = false;
				pluginMediaElement.ended = true;
				mejs.YouTubeApi.createEvent(player, pluginMediaElement, 'ended');
				break;
			case 1:
				pluginMediaElement.paused = false;
				pluginMediaElement.ended = false;				
				mejs.YouTubeApi.createEvent(player, pluginMediaElement, 'play');
				mejs.YouTubeApi.createEvent(player, pluginMediaElement, 'playing');
				break;
			case 2:
				pluginMediaElement.paused = true;
				pluginMediaElement.ended = false;				
				mejs.YouTubeApi.createEvent(player, pluginMediaElement, 'pause');
				break;
			case 3: // buffering
				mejs.YouTubeApi.createEvent(player, pluginMediaElement, 'progress');
				break;
			case 5:
				// cued?
				break;						
			
		}			
		
	}
}
// IFRAME
function onYouTubePlayerAPIReady() {
	mejs.YouTubeApi.iFrameReady();
}
// FLASH
function onYouTubePlayerReady(id) {
	mejs.YouTubeApi.flashReady(id);
}

window.mejs = mejs;
window.MediaElement = mejs.MediaElement;

/*!
 * Adds Internationalization and localization to mediaelement.
 *
 * This file does not contain translations, you have to add the manually.
 * The schema is always the same: me-i18n-locale-[ISO_639-1 Code].js
 *
 * Examples are provided both for german and chinese translation.
 *
 *
 * What is the concept beyond i18n?
 *   http://en.wikipedia.org/wiki/Internationalization_and_localization
 *
 * What langcode should i use?
 *   http://en.wikipedia.org/wiki/ISO_639-1
 *
 *
 * License?
 *
 *   The i18n file uses methods from the Drupal project (drupal.js):
 *     - i18n.methods.t() (modified)
 *     - i18n.methods.checkPlain() (full copy)
 *
 *   The Drupal project is (like mediaelementjs) licensed under GPLv2.
 *    - http://drupal.org/licensing/faq/#q1
 *    - https://github.com/johndyer/mediaelement
 *    - http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
 *
 *
 * @author
 *   Tim Latz (latz.tim@gmail.com)
 *
 *
 * @params
 *  - context - document, iframe ..
 *  - exports - CommonJS, window ..
 *
 */
;(function(context, exports, undefined) {
    "use strict";
    var i18n = {
        "locale": {
            "language" : '',
            "strings" : {}
        },
        "methods" : {}
    };
// start i18n


    /**
     * Get language, fallback to browser's language if empty
     */
    i18n.getLanguage = function () {
        var language = i18n.locale.language || window.navigator.userLanguage || window.navigator.language;
        // convert to iso 639-1 (2-letters, lower case)
        return language.substr(0, 2).toLowerCase();
    };

    // i18n fixes for compatibility with WordPress
    if ( typeof mejsL10n != 'undefined' ) {
        i18n.locale.language = mejsL10n.language;
    }



    /**
     * Encode special characters in a plain-text string for display as HTML.
     */
    i18n.methods.checkPlain = function (str) {
        var character, regex,
        replace = {
            '&': '&amp;',
            '"': '&quot;',
            '<': '&lt;',
            '>': '&gt;'
        };
        str = String(str);
        for (character in replace) {
            if (replace.hasOwnProperty(character)) {
                regex = new RegExp(character, 'g');
                str = str.replace(regex, replace[character]);
            }
        }
        return str;
    };

    /**
     * Translate strings to the page language or a given language.
     *
     *
     * @param str
     *   A string containing the English string to translate.
     *
     * @param options
     *   - 'context' (defaults to the default context): The context the source string
     *     belongs to.
     *
     * @return
     *   The translated string, escaped via i18n.methods.checkPlain()
     */
    i18n.methods.t = function (str, options) {

        // Fetch the localized version of the string.
        if (i18n.locale.strings && i18n.locale.strings[options.context] && i18n.locale.strings[options.context][str]) {
            str = i18n.locale.strings[options.context][str];
        }

        return i18n.methods.checkPlain(str);
    };


    /**
     * Wrapper for i18n.methods.t()
     *
     * @see i18n.methods.t()
     * @throws InvalidArgumentException
     */
    i18n.t = function(str, options) {

        if (typeof str === 'string' && str.length > 0) {

            // check every time due language can change for
            // different reasons (translation, lang switcher ..)
            var language = i18n.getLanguage();

            options = options || {
                "context" : language
            };

            return i18n.methods.t(str, options);
        }
        else {
            throw {
                "name" : 'InvalidArgumentException',
                "message" : 'First argument is either not a string or empty.'
            };
        }
    };

// end i18n
    exports.i18n = i18n;
}(document, mejs));

// i18n fixes for compatibility with WordPress
;(function(exports, undefined) {

    "use strict";

    if ( typeof mejsL10n != 'undefined' ) {
        exports[mejsL10n.language] = mejsL10n.strings;
    }

}(mejs.i18n.locale.strings));

/*!
 * This is a i18n.locale language object.
 *
 * German translation by Tim Latz, latz.tim@gmail.com
 *
 * @author
 *   Tim Latz (latz.tim@gmail.com)
 *
 * @see
 *   me-i18n.js
 *
 * @params
 *  - exports - CommonJS, window ..
 */
;(function(exports, undefined) {

    "use strict";

    if (typeof exports.de === 'undefined') {
        exports.de = {
            "Fullscreen" : "Vollbild",
            "Go Fullscreen" : "Vollbild an",
            "Turn off Fullscreen" : "Vollbild aus",
            "Close" : "Schließen"
        };
    }

}(mejs.i18n.locale.strings));
/*!
 * This is a i18n.locale language object.
 *
 * Traditional chinese translation by Tim Latz, latz.tim@gmail.com
 *
 * @author
 *   Tim Latz (latz.tim@gmail.com)
 *
 * @see
 *   me-i18n.js
 *
 * @params
 *  - exports - CommonJS, window ..
 */
;(function(exports, undefined) {

    "use strict";

    if (typeof exports.zh === 'undefined') {
        exports.zh = {
            "Fullscreen" : "全螢幕",
            "Go Fullscreen" : "全屏模式",
            "Turn off Fullscreen" : "退出全屏模式",
            "Close" : "關閉"
        };
    }

}(mejs.i18n.locale.strings));


/*!
 * MediaElementPlayer
 * http://mediaelementjs.com/
 *
 * Creates a controller bar for HTML5 <video> add <audio> tags
 * using jQuery and MediaElement.js (HTML5 Flash/Silverlight wrapper)
 *
 * Copyright 2010-2013, John Dyer (http://j.hn/)
 * License: MIT
 *
 */
if (typeof jQuery != 'undefined') {
	mejs.$ = jQuery;
} else if (typeof ender != 'undefined') {
	mejs.$ = ender;
}
(function ($) {

	// default player values
	mejs.MepDefaults = {
		// url to poster (to fix iOS 3.x)
		poster: '',
		// When the video is ended, we can show the poster.
		showPosterWhenEnded: false,
		// default if the <video width> is not specified
		defaultVideoWidth: 480,
		// default if the <video height> is not specified
		defaultVideoHeight: 270,
		// if set, overrides <video width>
		videoWidth: -1,
		// if set, overrides <video height>
		videoHeight: -1,
		// default if the user doesn't specify
		defaultAudioWidth: 400,
		// default if the user doesn't specify
		defaultAudioHeight: 30,

		// default amount to move back when back key is pressed
		defaultSeekBackwardInterval: function(media) {
			return (media.duration * 0.05);
		},
		// default amount to move forward when forward key is pressed
		defaultSeekForwardInterval: function(media) {
			return (media.duration * 0.05);
		},

		// width of audio player
		audioWidth: -1,
		// height of audio player
		audioHeight: -1,
		// initial volume when the player starts (overrided by user cookie)
		startVolume: 0.8,
		// useful for <audio> player loops
		loop: false,
		// rewind to beginning when media ends
                autoRewind: true,
		// resize to media dimensions
		enableAutosize: true,
		// forces the hour marker (##:00:00)
		alwaysShowHours: false,

		// show framecount in timecode (##:00:00:00)
		showTimecodeFrameCount: false,
		// used when showTimecodeFrameCount is set to true
		framesPerSecond: 25,

		// automatically calculate the width of the progress bar based on the sizes of other elements
		autosizeProgress : true,
		// Hide controls when playing and mouse is not over the video
		alwaysShowControls: false,
	    // Hide controls
		controlsVisible: true,
	    // AutoPlay
		autoPlay: false,
		// Display the video control
		hideVideoControlsOnLoad: false,
        // Enable click video element to toggle play/pause
        clickToPlayPause: true,
		// force iPad's native controls
		iPadUseNativeControls: false,
		// force iPhone's native controls
		iPhoneUseNativeControls: false,
		// force Android's native controls
		AndroidUseNativeControls: false,
		// features to show
		features: ['playpause','current','progress','duration','tracks','volume','fullscreen'],
		// only for dynamic
		isVideo: true,

		// turns keyboard support on and off for this instance
		enableKeyboard: true,

		// whenthis player starts, it will pause other players
		pauseOtherPlayers: true,

		// array of keyboard actions such as play pause
		keyActions: [
				{
						keys: [
								32, // SPACE
								179 // GOOGLE play/pause button
							  ],
						action: function(player, media) {
								if (media.paused || media.ended) {
										player.play();
								} else {
										player.pause();
								}
						}
				},
				{
						keys: [38], // UP
						action: function(player, media) {
								var newVolume = Math.min(media.volume + 0.1, 1);
								media.setVolume(newVolume);
						}
				},
				{
						keys: [40], // DOWN
						action: function(player, media) {
								var newVolume = Math.max(media.volume - 0.1, 0);
								media.setVolume(newVolume);
						}
				},
				{
						keys: [
								37, // LEFT
								227 // Google TV rewind
						],
						action: function(player, media) {
								if (!isNaN(media.duration) && media.duration > 0) {
										if (player.isVideo) {
												player.showControls();
												player.startControlsTimer();
										}

										// 5%
										var newTime = Math.max(media.currentTime - player.options.defaultSeekBackwardInterval(media), 0);
										media.setCurrentTime(newTime);
								}
						}
				},
				{
						keys: [
								39, // RIGHT
								228 // Google TV forward
						],
						action: function(player, media) {
								if (!isNaN(media.duration) && media.duration > 0) {
										if (player.isVideo) {
												player.showControls();
												player.startControlsTimer();
										}

										// 5%
										var newTime = Math.min(media.currentTime + player.options.defaultSeekForwardInterval(media), media.duration);
										media.setCurrentTime(newTime);
								}
						}
				},
				{
						keys: [70], // f
						action: function(player, media) {
								if (typeof player.enterFullScreen != 'undefined') {
										if (player.isFullScreen) {
												player.exitFullScreen();
										} else {
												player.enterFullScreen();
										}
								}
						}
				}
		]
	};

	mejs.mepIndex = 0;

	mejs.players = {};

	// wraps a MediaElement object in player controls
	mejs.MediaElementPlayer = function(node, o) {
		// enforce object, even without "new" (via John Resig)
		if ( !(this instanceof mejs.MediaElementPlayer) ) {
			return new mejs.MediaElementPlayer(node, o);
		}

		var t = this;

		// these will be reset after the MediaElement.success fires
		t.$media = t.$node = $(node);
		t.node = t.media = t.$media[0];

		// check for existing player
		if (typeof t.node.player != 'undefined') {
			return t.node.player;
		} else {
			// attach player to DOM node for reference
			t.node.player = t;
		}


		// try to get options from data-mejsoptions
		if (typeof o == 'undefined') {
			o = t.$node.data('mejsoptions');
		}

		// extend default options
		t.options = $.extend({},mejs.MepDefaults,o);

		// unique ID
		t.id = 'mep_' + mejs.mepIndex++;

		// add to player array (for focus events)
		mejs.players[t.id] = t;

		// start up
		t.init();

		return t;
	};

	// actual player
	mejs.MediaElementPlayer.prototype = {

	    hasFocus: false,

		controlsAreVisible: true,

		init: function() {

			var
				t = this,

				mf = mejs.MediaFeatures,
				// options for MediaElement (shim)
				meOptions = $.extend(true, {}, t.options, {
					success: function(media, domNode) { t.meReady(media, domNode); },
					error: function(e) { t.handleError(e);}
				}),
				tagName = t.media.tagName.toLowerCase();

			t.isDynamic = (tagName !== 'audio' && tagName !== 'video');

			if (t.isDynamic) {
				// get video from src or href?
				t.isVideo = t.options.isVideo;
			} else {
				t.isVideo = (tagName !== 'audio' && t.options.isVideo);
			}

			// use native controls in iPad, iPhone, and Android
			if ((mf.isiPad && t.options.iPadUseNativeControls) || (mf.isiPhone && t.options.iPhoneUseNativeControls)) {

				// add controls and stop
				t.$media.attr('controls', 'controls');

				// attempt to fix iOS 3 bug
				//t.$media.removeAttr('poster');
                                // no Issue found on iOS3 -ttroxell

				// override Apple's autoplay override for iPads
				if (mf.isiPad && t.media.getAttribute('autoplay') !== null) {
					t.play();
				}

			} else if (mf.isAndroid && t.options.AndroidUseNativeControls) {

				// leave default player

			} else {

				// DESKTOP: use MediaElementPlayer controls

				// remove native controls
				t.$media.removeAttr('controls');

				// build container
				t.container =
					$('<div id="' + t.id + '" class="mejs-container ' + (mejs.MediaFeatures.svg ? 'svg' : 'no-svg') + '">'+
						'<div class="mejs-inner">'+
							'<div class="mejs-mediaelement"></div>'+
							'<div class="mejs-layers"></div>'+
							'<div class="mejs-controls"></div>'+
							'<div class="mejs-clear"></div>'+
						'</div>' +
					'</div>')
					.addClass(t.$media[0].className)
					.insertBefore(t.$media);

				// add classes for user and content
				t.container.addClass(
					(mf.isAndroid ? 'mejs-android ' : '') +
					(mf.isiOS ? 'mejs-ios ' : '') +
					(mf.isiPad ? 'mejs-ipad ' : '') +
					(mf.isiPhone ? 'mejs-iphone ' : '') +
					(t.isVideo ? 'mejs-video ' : 'mejs-audio ')
				);


				// move the <video/video> tag into the right spot
				if (mf.isiOS) {

					// sadly, you can't move nodes in iOS, so we have to destroy and recreate it!
					var $newMedia = t.$media.clone();

					t.container.find('.mejs-mediaelement').append($newMedia);

					t.$media.remove();
					t.$node = t.$media = $newMedia;
					t.node = t.media = $newMedia[0]

				} else {

					// normal way of moving it into place (doesn't work on iOS)
					t.container.find('.mejs-mediaelement').append(t.$media);
				}

				// find parts
				t.controls = t.container.find('.mejs-controls');
				t.layers = t.container.find('.mejs-layers');

				// determine the size

				/* size priority:
					(1) videoWidth (forced),
					(2) style="width;height;"
					(3) width attribute,
					(4) defaultVideoWidth (for unspecified cases)
				*/

				var tagType = (t.isVideo ? 'video' : 'audio'),
					capsTagName = tagType.substring(0,1).toUpperCase() + tagType.substring(1);


				if (t.options[tagType + 'Width'] > 0 || t.options[tagType + 'Width'].toString().indexOf('%') > -1) {
					t.width = t.options[tagType + 'Width'];
				} else if (t.media.style.width !== '' && t.media.style.width !== null) {
					t.width = t.media.style.width;
				} else if (t.media.getAttribute('width') !== null) {
					t.width = t.$media.attr('width');
				} else {
					t.width = t.options['default' + capsTagName + 'Width'];
				}

				if (t.options[tagType + 'Height'] > 0 || t.options[tagType + 'Height'].toString().indexOf('%') > -1) {
					t.height = t.options[tagType + 'Height'];
				} else if (t.media.style.height !== '' && t.media.style.height !== null) {
					t.height = t.media.style.height;
				} else if (t.$media[0].getAttribute('height') !== null) {
					t.height = t.$media.attr('height');
				} else {
					t.height = t.options['default' + capsTagName + 'Height'];
				}

				// set the size, while we wait for the plugins to load below
				t.setPlayerSize(t.width, t.height);

				// create MediaElementShim
				meOptions.pluginWidth = t.width;
				meOptions.pluginHeight = t.height;
			}

			// create MediaElement shim
			mejs.MediaElement(t.$media[0], meOptions);

			if (t.options.controlsVisible) {
			    if (typeof (t.container) != 'undefined' && t.controlsAreVisible) {
			        // controls are shown when loaded
			        t.container.trigger('controlsshown');
			    }
			}
			else {
			    // hide main controls
			    t.controls
					.css('visibility', 'hidden')
					.css('display', 'block');

			    // hide others
			    t.container.find('.mejs-control')
					.css('visibility', 'hidden')
					.css('display', 'block');

			    t.controlsAreVisible = false;
			    t.container.trigger('controlshidden');
			}
			if (t.options.autoPlay) {
			    t.play();
			}
		},

		showControls: function(doAnimation) {
			var t = this;

			doAnimation = typeof doAnimation == 'undefined' || doAnimation;
			if (t.options.controlsVisible) {
			    if (t.controlsAreVisible)
			        return;

			    if (doAnimation) {
			        t.controls
                        .css('visibility', 'visible')
                        .stop(true, true).fadeIn(200, function () {
                            t.controlsAreVisible = true;
                            t.container.trigger('controlsshown');
                        });

			        // any additional controls people might add and want to hide
			        t.container.find('.mejs-control')
                        .css('visibility', 'visible')
                        .stop(true, true).fadeIn(200, function () { t.controlsAreVisible = true; });

			    } else {
			        t.controls
                        .css('visibility', 'visible')
                        .css('display', 'block');

			        // any additional controls people might add and want to hide
			        t.container.find('.mejs-control')
                        .css('visibility', 'visible')
                        .css('display', 'block');

			        t.controlsAreVisible = true;
			        t.container.trigger('controlsshown');
			    }

			    t.setControlsSize();
			}
		},

		hideControls: function(doAnimation) {
			var t = this;

			doAnimation = typeof doAnimation == 'undefined' || doAnimation;

			if (!t.controlsAreVisible || t.options.alwaysShowControls)
				return;

			if (doAnimation) {
				// fade out main controls
				t.controls.stop(true, true).fadeOut(200, function() {
					$(this)
						.css('visibility','hidden')
						.css('display','block');

					t.controlsAreVisible = false;
					t.container.trigger('controlshidden');
				});

				// any additional controls people might add and want to hide
				t.container.find('.mejs-control').stop(true, true).fadeOut(200, function() {
					$(this)
						.css('visibility','hidden')
						.css('display','block');
				});
			} else {

				// hide main controls
				t.controls
					.css('visibility','hidden')
					.css('display','block');

				// hide others
				t.container.find('.mejs-control')
					.css('visibility','hidden')
					.css('display','block');

				t.controlsAreVisible = false;
				t.container.trigger('controlshidden');
			}
		},

		controlsTimer: null,

		startControlsTimer: function(timeout) {

			var t = this;

			timeout = typeof timeout != 'undefined' ? timeout : 1500;

			t.killControlsTimer('start');

			t.controlsTimer = setTimeout(function() {
				//
				t.hideControls();
				t.killControlsTimer('hide');
			}, timeout);
		},

		killControlsTimer: function(src) {

			var t = this;

			if (t.controlsTimer !== null) {
				clearTimeout(t.controlsTimer);
				delete t.controlsTimer;
				t.controlsTimer = null;
			}
		},

		controlsEnabled: true,

		disableControls: function() {
			var t= this;

			t.killControlsTimer();
			t.hideControls(false);
			this.controlsEnabled = false;
		},

		enableControls: function() {
			var t= this;

			t.showControls(false);

			t.controlsEnabled = true;
		},


		// Sets up all controls and events
		meReady: function(media, domNode) {


			var t = this,
				mf = mejs.MediaFeatures,
				autoplayAttr = domNode.getAttribute('autoplay'),
				autoplay = !(typeof autoplayAttr == 'undefined' || autoplayAttr === null || autoplayAttr === 'false'),
				featureIndex,
				feature;

			// make sure it can't create itself again if a plugin reloads
			if (t.created) {
				return;
			} else {
				t.created = true;
			}

			t.media = media;
			t.domNode = domNode;

			if (!(mf.isAndroid && t.options.AndroidUseNativeControls) && !(mf.isiPad && t.options.iPadUseNativeControls) && !(mf.isiPhone && t.options.iPhoneUseNativeControls)) {

				// two built in features
				t.buildposter(t, t.controls, t.layers, t.media);
				t.buildkeyboard(t, t.controls, t.layers, t.media);
				t.buildoverlays(t, t.controls, t.layers, t.media);

				// grab for use by features
				t.findTracks();

				// add user-defined features/controls
				for (featureIndex in t.options.features) {
					feature = t.options.features[featureIndex];
					if (t['build' + feature]) {
						try {
							t['build' + feature](t, t.controls, t.layers, t.media);
						} catch (e) {
							// TODO: report control error
							//throw e;
							
							
						}
					}
				}

				t.container.trigger('controlsready');

				// reset all layers and controls
				t.setPlayerSize(t.width, t.height);
				t.setControlsSize();


				// controls fade
				if (t.isVideo) {

					if (mejs.MediaFeatures.hasTouch) {

						// for touch devices (iOS, Android)
						// show/hide without animation on touch

						t.$media.bind('touchstart', function() {


							// toggle controls
							if (t.controlsAreVisible) {
								t.hideControls(false);
							} else {
								if (t.controlsEnabled) {
									t.showControls(false);
								}
							}
						});

					} else {

						// create callback here since it needs access to current
						// MediaElement object
						t.clickToPlayPauseCallback = function() {
							//

							if (t.options.clickToPlayPause) {
								if (t.media.paused) {
									t.play();
								} else {
									t.pause();
								}
							}
						};

			            // click to play/pause
			            t.media.addEventListener('click', t.clickToPlayPauseCallback, false);

						// show/hide controls
						t.container
							.bind('mouseenter mouseover', function () {
								if (t.controlsEnabled) {
									if (!t.options.alwaysShowControls) {
										t.killControlsTimer('enter');
										t.showControls();
										t.startControlsTimer(2500);
									}
								}
							})
							.bind('mousemove', function() {
								if (t.controlsEnabled) {
									if (!t.controlsAreVisible) {
										t.showControls();
									}
									//t.killControlsTimer('move');
									if (!t.options.alwaysShowControls) {
										t.startControlsTimer(2500);
									}
								}
							})
							.bind('mouseleave', function () {
								if (t.controlsEnabled) {
									if (!t.media.paused && !t.options.alwaysShowControls) {
										t.startControlsTimer(1000);
									}
								}
							});
					}

					if(t.options.hideVideoControlsOnLoad) {
						t.hideControls(false);
					}

					// check for autoplay
					if (autoplay && !t.options.alwaysShowControls) {
						t.hideControls();
					}

					// resizer
					if (t.options.enableAutosize) {
						t.media.addEventListener('loadedmetadata', function(e) {
							// if the <video height> was not set and the options.videoHeight was not set
							// then resize to the real dimensions
							if (t.options.videoHeight <= 0 && t.domNode.getAttribute('height') === null && !isNaN(e.target.videoHeight)) {
								t.setPlayerSize(e.target.videoWidth, e.target.videoHeight);
								t.setControlsSize();
								t.media.setVideoSize(e.target.videoWidth, e.target.videoHeight);
							}
						}, false);
					}
				}

				// EVENTS

				// FOCUS: when a video starts playing, it takes focus from other players (possibily pausing them)
				media.addEventListener('play', function() {
					var playerIndex;

					// go through all other players
					for (playerIndex in mejs.players) {
						var p = mejs.players[playerIndex];
						if (p.id != t.id && t.options.pauseOtherPlayers && !p.paused && !p.ended) {
							p.pause();
						}
						p.hasFocus = false;
					}

					t.hasFocus = true;
				},false);


				// ended for all
				t.media.addEventListener('ended', function (e) {
					if(t.options.autoRewind) {
						try{
							t.media.setCurrentTime(0);
						} catch (exp) {

						}
					}
					t.media.pause();

					if (t.setProgressRail) {
						t.setProgressRail();
					}
					if (t.setCurrentRail) {
						t.setCurrentRail();
					}

					if (t.options.loop) {
						t.play();
					} else if (!t.options.alwaysShowControls && t.controlsEnabled) {
						t.showControls();
					}
				}, false);

				// resize on the first play
				t.media.addEventListener('loadedmetadata', function(e) {
					if (t.updateDuration) {
						t.updateDuration();
					}
					if (t.updateCurrent) {
						t.updateCurrent();
					}

					if (!t.isFullScreen) {
						t.setPlayerSize(t.width, t.height);
						t.setControlsSize();
					}
				}, false);


				// webkit has trouble doing this without a delay
				setTimeout(function () {
					t.setPlayerSize(t.width, t.height);
					t.setControlsSize();
				}, 50);

				// adjust controls whenever window sizes (used to be in fullscreen only)
				t.globalBind('resize', function() {

					// don't resize for fullscreen mode
					if ( !(t.isFullScreen || (mejs.MediaFeatures.hasTrueNativeFullScreen && document.webkitIsFullScreen)) ) {
						t.setPlayerSize(t.width, t.height);
					}

					// always adjust controls
					t.setControlsSize();
				});

				// TEMP: needs to be moved somewhere else
				if (t.media.pluginType == 'youtube') {
					t.container.find('.mejs-overlay-play').hide();
				}
			}

			// force autoplay for HTML5
			if (autoplay && media.pluginType == 'native') {
				t.play();
			}


			if (t.options.success) {

				if (typeof t.options.success == 'string') {
					window[t.options.success](t.media, t.domNode, t);
				} else {
					t.options.success(t.media, t.domNode, t);
				}
			}
		},

		handleError: function(e) {
			var t = this;

			t.controls.hide();

			// Tell user that the file cannot be played
			if (t.options.error) {
				t.options.error(e);
			}
		},

		setPlayerSize: function(width,height) {
			var t = this;

			if (typeof width != 'undefined') {
				t.width = width;
			}

			if (typeof height != 'undefined') {
				t.height = height;
			}

			// detect 100% mode - use currentStyle for IE since css() doesn't return percentages
      		if (t.height.toString().indexOf('%') > 0 || t.$node.css('max-width') === '100%' || parseInt(t.$node.css('max-width').replace(/px/,''), 10) / t.$node.offsetParent().width() === 1 || (t.$node[0].currentStyle && t.$node[0].currentStyle.maxWidth === '100%')) {

				// do we have the native dimensions yet?
				var
					nativeWidth = t.isVideo ? ((t.media.videoWidth && t.media.videoWidth > 0) ? t.media.videoWidth : t.options.defaultVideoWidth) : t.options.defaultAudioWidth,
					nativeHeight = t.isVideo ? ((t.media.videoHeight && t.media.videoHeight > 0) ? t.media.videoHeight : t.options.defaultVideoHeight) : t.options.defaultAudioHeight,
					parentWidth = t.container.parent().closest(':visible').width(),
					newHeight = t.isVideo || !t.options.autosizeProgress ? parseInt(parentWidth * nativeHeight/nativeWidth, 10) : nativeHeight;

				// When we use percent, the newHeight can't be calculated so we get the container height
				if(isNaN(newHeight)) {
					newHeight = t.container.parent().closest(':visible').height();
				}

				if (t.container.parent()[0].tagName.toLowerCase() === 'body') { // && t.container.siblings().count == 0) {
					parentWidth = $(window).width();
					newHeight = $(window).height();
				}

				if ( newHeight != 0 && parentWidth != 0 ) {
					// set outer container size
					t.container
						.width(parentWidth)
						.height(newHeight);

					// set native <video> or <audio> and shims
					t.$media.add(t.container.find('.mejs-shim'))
						.width('100%')
						.height('100%');

					// if shim is ready, send the size to the embeded plugin
					if (t.isVideo) {
						if (t.media.setVideoSize) {
							t.media.setVideoSize(parentWidth, newHeight);
						}
					}

					// set the layers
					t.layers.children('.mejs-layer')
						.width('100%')
						.height('100%');
				}


			} else {

				t.container
					.width(t.width)
					.height(t.height);

				t.layers.children('.mejs-layer')
					.width(t.width)
					.height(t.height);

			}

			// special case for big play button so it doesn't go over the controls area
			var playLayer = t.layers.find('.mejs-overlay-play'),
				playButton = playLayer.find('.mejs-overlay-button');

			playLayer.height(t.container.height() - t.controls.height());
			playButton.css('margin-top', '-' + (playButton.height()/2 - t.controls.height()/2).toString() + 'px'  );

		},

		setControlsSize: function() {
			var t = this,
				usedWidth = 0,
				railWidth = 0,
				rail = t.controls.find('.mejs-time-rail'),
				total = t.controls.find('.mejs-time-total'),
				current = t.controls.find('.mejs-time-current'),
				loaded = t.controls.find('.mejs-time-loaded'),
				others = rail.siblings(),
				lastControl = others.last(),
				lastControlPosition = null;
				
			// skip calculation if hidden
			if (!t.container.is(':visible') || !rail.length || !rail.is(':visible')) {
				return;
			}


			// allow the size to come from custom CSS
			if (t.options && !t.options.autosizeProgress) {
				// Also, frontends devs can be more flexible
				// due the opportunity of absolute positioning.
				railWidth = parseInt(rail.css('width'));
			}

			// attempt to autosize
			if (railWidth === 0 || !railWidth) {

				// find the size of all the other controls besides the rail
				others.each(function() {
					var $this = $(this);
					if ($this.css('position') != 'absolute' && $this.is(':visible')) {
						usedWidth += $(this).outerWidth(true);
					}
				});

				// fit the rail into the remaining space
				railWidth = t.controls.width() - usedWidth - (rail.outerWidth(true) - rail.width());
			}
			
			// resize the rail,
			// but then check if the last control (say, the fullscreen button) got pushed down
			// this often happens when zoomed
			do {				
				// outer area
				rail.width(railWidth);
				// dark space
				total.width(railWidth - (total.outerWidth(true) - total.width()));				
				
				if (lastControl.css('position') != 'absolute') {
					lastControlPosition = lastControl.position();				
					railWidth--;			
				}
			} while (lastControlPosition != null && lastControlPosition.top > 0 && railWidth > 0);
			
			if (t.setProgressRail)
				t.setProgressRail();
			if (t.setCurrentRail)
				t.setCurrentRail();
		},

		buildposter: function(player, controls, layers, media) {
			var t = this,
				poster =
				$('<div class="mejs-poster mejs-layer">' +
				'</div>')
					.appendTo(layers),
				posterUrl = player.$media.attr('poster');

			// prioriy goes to option (this is useful if you need to support iOS 3.x (iOS completely fails with poster)
			if (player.options.poster !== '') {
				posterUrl = player.options.poster;
			}

			// second, try the real poster
			if (posterUrl !== '' && posterUrl != null) {
				t.setPoster(posterUrl);
			} else {
				poster.hide();
			}

			media.addEventListener('play',function() {
				poster.hide();
			}, false);

			if(player.options.showPosterWhenEnded && player.options.autoRewind){
				media.addEventListener('ended',function() {
					poster.show();
				}, false);
			}
		},

		setPoster: function(url) {
			var t = this,
				posterDiv = t.container.find('.mejs-poster'),
				posterImg = posterDiv.find('img');

			if (posterImg.length == 0) {
				posterImg = $('<img width="100%" height="100%" />').appendTo(posterDiv);
			}

			posterImg.attr('src', url);
			posterDiv.css({'background-image' : 'url(' + url + ')'});
		},

		buildoverlays: function(player, controls, layers, media) {
            var t = this;
			if (!player.isVideo)
				return;

			var
			loading =
				$('<div class="mejs-overlay mejs-layer">'+
					'<div class="mejs-overlay-loading"><span></span></div>'+
				'</div>')
				.hide() // start out hidden
				.appendTo(layers),
			error =
				$('<div class="mejs-overlay mejs-layer">'+
					'<div class="mejs-overlay-error"></div>'+
				'</div>')
				.hide() // start out hidden
				.appendTo(layers),
			// this needs to come last so it's on top
			bigPlay =
				$('<div class="mejs-overlay mejs-layer mejs-overlay-play">'+
					'<div class="mejs-overlay-button"></div>'+
				'</div>')
				.appendTo(layers)
				.bind('click touchstart', function() {
					if (t.options.clickToPlayPause) {
						if (media.paused) {
							media.play();
						}
					}
				});

			/*
			if (mejs.MediaFeatures.isiOS || mejs.MediaFeatures.isAndroid) {
				bigPlay.remove();
				loading.remove();
			}
			*/


			// show/hide big play button
			media.addEventListener('play',function() {
				bigPlay.hide();
				loading.hide();
				controls.find('.mejs-time-buffering').hide();
				error.hide();
			}, false);

			media.addEventListener('playing', function() {
				bigPlay.hide();
				loading.hide();
				controls.find('.mejs-time-buffering').hide();
				error.hide();
			}, false);

			media.addEventListener('seeking', function() {
				loading.show();
				controls.find('.mejs-time-buffering').show();
			}, false);

			media.addEventListener('seeked', function() {
				loading.hide();
				controls.find('.mejs-time-buffering').hide();
			}, false);

			media.addEventListener('pause',function() {
				if (!mejs.MediaFeatures.isiPhone) {
					bigPlay.show();
				}
			}, false);

			media.addEventListener('waiting', function() {
				loading.show();
				controls.find('.mejs-time-buffering').show();
			}, false);


			// show/hide loading
			media.addEventListener('loadeddata',function() {
				// for some reason Chrome is firing this event
				//if (mejs.MediaFeatures.isChrome && media.getAttribute && media.getAttribute('preload') === 'none')
				//	return;

				loading.show();
				controls.find('.mejs-time-buffering').show();
			}, false);
			media.addEventListener('canplay',function() {
				loading.hide();
				controls.find('.mejs-time-buffering').hide();
			}, false);

			// error handling
			media.addEventListener('error',function() {
				loading.hide();
				controls.find('.mejs-time-buffering').hide();
				error.show();
				error.find('mejs-overlay-error').html("Error loading this resource");
			}, false);
		},

		buildkeyboard: function(player, controls, layers, media) {

				var t = this;

				// listen for key presses
				t.globalBind('keydown', function(e) {

						if (player.hasFocus && player.options.enableKeyboard) {

								// find a matching key
								for (var i=0, il=player.options.keyActions.length; i<il; i++) {
										var keyAction = player.options.keyActions[i];

										for (var j=0, jl=keyAction.keys.length; j<jl; j++) {
												if (e.keyCode == keyAction.keys[j]) {
														e.preventDefault();
														keyAction.action(player, media, e.keyCode);
														return false;
												}
										}
								}
						}

						return true;
				});

				// check if someone clicked outside a player region, then kill its focus
				t.globalBind('click', function(event) {
					player.hasFocus = $(event.target).closest('.mejs-container').length != 0;
				});

		},

		findTracks: function() {
			var t = this,
				tracktags = t.$media.find('track');

			// store for use by plugins
			t.tracks = [];
			tracktags.each(function(index, track) {

				track = $(track);

				t.tracks.push({
					srclang: (track.attr('srclang')) ? track.attr('srclang').toLowerCase() : '',
					src: track.attr('src'),
					kind: track.attr('kind'),
					label: track.attr('label') || '',
					entries: [],
					isLoaded: false
				});
			});
		},
		changeSkin: function(className) {
			this.container[0].className = 'mejs-container ' + className;
			this.setPlayerSize(this.width, this.height);
			this.setControlsSize();
		},
		play: function() {
			this.load();
			this.media.play();
		},
		pause: function() {
			try {
				this.media.pause();
			} catch (e) {}
		},
		load: function() {
			if (!this.isLoaded) {
				this.media.load();
			}

			this.isLoaded = true;
		},
		setMuted: function(muted) {
			this.media.setMuted(muted);
		},
		setCurrentTime: function(time) {
			this.media.setCurrentTime(time);
		},
		getCurrentTime: function() {
			return this.media.currentTime;
		},
		setVolume: function(volume) {
			this.media.setVolume(volume);
		},
		getVolume: function() {
			return this.media.volume;
		},
		setSrc: function(src) {
			this.media.setSrc(src);
		},
		remove: function() {
			var t = this, featureIndex, feature;

			// invoke features cleanup
			for (featureIndex in t.options.features) {
				feature = t.options.features[featureIndex];
				if (t['clean' + feature]) {
					try {
						t['clean' + feature](t);
					} catch (e) {
						// TODO: report control error
						//throw e;
						//
						//
					}
				}
			}

			// grab video and put it back in place
			if (!t.isDynamic) {
				t.$media.prop('controls', true);
				// detach events from the video
				// TODO: detach event listeners better than this;
				//       also detach ONLY the events attached by this plugin!
				t.$node.clone().show().insertBefore(t.container);
				t.$node.remove();
			} else {
				t.$node.insertBefore(t.container);
			}

			if (t.media.pluginType !== 'native') {
				t.media.remove();
			}

			// Remove the player from the mejs.players object so that pauseOtherPlayers doesn't blow up when trying to pause a non existance flash api.
			delete mejs.players[t.id];

			if (typeof t.container == 'object') {
				t.container.remove();
			}
			t.globalUnbind();
			delete t.node.player;
		}
	};

	(function(){
		var rwindow = /^((after|before)print|(before)?unload|hashchange|message|o(ff|n)line|page(hide|show)|popstate|resize|storage)\b/;

		function splitEvents(events, id) {
			// add player ID as an event namespace so it's easier to unbind them all later
			var ret = {d: [], w: []};
			$.each((events || '').split(' '), function(k, v){
				var eventname = v + '.' + id;
				if (eventname.indexOf('.') === 0) {
					ret.d.push(eventname);
					ret.w.push(eventname);
				}
				else {
					ret[rwindow.test(v) ? 'w' : 'd'].push(eventname);
				}
			});
			ret.d = ret.d.join(' ');
			ret.w = ret.w.join(' ');
			return ret;
		}

		mejs.MediaElementPlayer.prototype.globalBind = function(events, data, callback) {
			var t = this;
			events = splitEvents(events, t.id);
			if (events.d) $(document).bind(events.d, data, callback);
			if (events.w) $(window).bind(events.w, data, callback);
		};

		mejs.MediaElementPlayer.prototype.globalUnbind = function(events, callback) {
			var t = this;
			events = splitEvents(events, t.id);
			if (events.d) $(document).unbind(events.d, callback);
			if (events.w) $(window).unbind(events.w, callback);
		};
	})();

	// turn into jQuery plugin
	if (typeof jQuery != 'undefined') {
		jQuery.fn.mediaelementplayer = function (options) {
			if (options === false) {
				this.each(function () {
					var player = jQuery(this).data('mediaelementplayer');
					if (player) {
						player.remove();
					}
					jQuery(this).removeData('mediaelementplayer');
				});
			}
			else {
				this.each(function () {
					jQuery(this).data('mediaelementplayer', new mejs.MediaElementPlayer(this, options));
				});
			}
			return this;
		};
	}

	$(document).ready(function() {
		// auto enable using JSON attribute
		$('.mejs-player').mediaelementplayer();
	});

	// push out to window
	window.MediaElementPlayer = mejs.MediaElementPlayer;

})(mejs.$);

(function($) {

	$.extend(mejs.MepDefaults, {
		playpauseText: mejs.i18n.t('Play/Pause')
	});

	// PLAY/pause BUTTON
	$.extend(MediaElementPlayer.prototype, {
		buildplaypause: function(player, controls, layers, media) {
			var 
				t = this,
				play = 
				$('<div class="mejs-button mejs-playpause-button mejs-play" >' +
					'<button type="button" aria-controls="' + t.id + '" title="' + t.options.playpauseText + '" aria-label="' + t.options.playpauseText + '"></button>' +
				'</div>')
				.appendTo(controls)
				.click(function(e) {
					e.preventDefault();
				
					if (media.paused) {
						media.play();
					} else {
						media.pause();
					}
					
					return false;
				});

			media.addEventListener('play',function() {
				play.removeClass('mejs-play').addClass('mejs-pause');
			}, false);
			media.addEventListener('playing',function() {
				play.removeClass('mejs-play').addClass('mejs-pause');
			}, false);


			media.addEventListener('pause',function() {
				play.removeClass('mejs-pause').addClass('mejs-play');
			}, false);
			media.addEventListener('paused',function() {
				play.removeClass('mejs-pause').addClass('mejs-play');
			}, false);
		}
	});
	
})(mejs.$);

(function($) {

	$.extend(mejs.MepDefaults, {
		stopText: 'Stop'
	});

	// STOP BUTTON
	$.extend(MediaElementPlayer.prototype, {
		buildstop: function(player, controls, layers, media) {
			var t = this,
				stop = 
				$('<div class="mejs-button mejs-stop-button mejs-stop">' +
					'<button type="button" aria-controls="' + t.id + '" title="' + t.options.stopText + '" aria-label="' + t.options.stopText + '"></button>' +
				'</div>')
				.appendTo(controls)
				.click(function() {
					if (!media.paused) {
						media.pause();
					}
					if (media.currentTime > 0) {
						media.setCurrentTime(0);
                        media.pause();
						controls.find('.mejs-time-current').width('0px');
						controls.find('.mejs-time-handle').css('left', '0px');
						controls.find('.mejs-time-float-current').html( mejs.Utility.secondsToTimeCode(0) );
						controls.find('.mejs-currenttime').html( mejs.Utility.secondsToTimeCode(0) );					
						layers.find('.mejs-poster').show();
					}
				});
		}
	});
	
})(mejs.$);

(function($) {
	// progress/loaded bar
	$.extend(MediaElementPlayer.prototype, {
		buildprogress: function(player, controls, layers, media) {

			$('<div class="mejs-time-rail">'+
				'<span class="mejs-time-total">'+
					'<span class="mejs-time-buffering"></span>'+
					'<span class="mejs-time-loaded"></span>'+
					'<span class="mejs-time-current"></span>'+
					'<span class="mejs-time-handle"></span>'+
					'<span class="mejs-time-float">' + 
						'<span class="mejs-time-float-current">00:00</span>' + 
						'<span class="mejs-time-float-corner"></span>' + 
					'</span>'+
				'</span>'+
			'</div>')
				.appendTo(controls);
				controls.find('.mejs-time-buffering').hide();

			var 
				t = this,
				total = controls.find('.mejs-time-total'),
				loaded  = controls.find('.mejs-time-loaded'),
				current  = controls.find('.mejs-time-current'),
				handle  = controls.find('.mejs-time-handle'),
				timefloat  = controls.find('.mejs-time-float'),
				timefloatcurrent  = controls.find('.mejs-time-float-current'),
				handleMouseMove = function (e) {
					// mouse or touch position relative to the object
					if (e.originalEvent.changedTouches) {
						var x = e.originalEvent.changedTouches[0].pageX;
					}else{
						var x = e.pageX;
					}
					
					var offset = total.offset(),
						width = total.outerWidth(true),
						percentage = 0,
						newTime = 0,
						pos = 0;


					if (media.duration) {
						if (x < offset.left) {
							x = offset.left;
						} else if (x > width + offset.left) {
							x = width + offset.left;
						}
						
						pos = x - offset.left;
						percentage = (pos / width);
						newTime = (percentage <= 0.02) ? 0 : percentage * media.duration;

						// seek to where the mouse is
						if (mouseIsDown && newTime !== media.currentTime) {
							media.setCurrentTime(newTime);
						}

						// position floating time box
						if (!mejs.MediaFeatures.hasTouch) {
								timefloat.css('left', pos);
								timefloatcurrent.html( mejs.Utility.secondsToTimeCode(newTime) );
								timefloat.show();
						}
					}
				},
				mouseIsDown = false,
				mouseIsOver = false;

			// handle clicks
			//controls.find('.mejs-time-rail').delegate('span', 'click', handleMouseMove);
			total
				.bind('mousedown touchstart', function (e) {
					// only handle left clicks or touch
					if (e.which === 1 || e.which === 0) {
						mouseIsDown = true;
						handleMouseMove(e);
						t.globalBind('mousemove.dur touchmove.dur', function(e) {
							handleMouseMove(e);
						});
						t.globalBind('mouseup.dur touchend.dur', function (e) {
							mouseIsDown = false;
							timefloat.hide();
							t.globalUnbind('.dur');
						});
						return false;
					}
				})
				.bind('mouseenter', function(e) {
					mouseIsOver = true;
					t.globalBind('mousemove.dur', function(e) {
						handleMouseMove(e);
					});
					if (!mejs.MediaFeatures.hasTouch) {
						timefloat.show();
					}
				})
				.bind('mouseleave',function(e) {
					mouseIsOver = false;
					if (!mouseIsDown) {
						t.globalUnbind('.dur');
						timefloat.hide();
					}
				});

			// loading
			media.addEventListener('progress', function (e) {
				player.setProgressRail(e);
				player.setCurrentRail(e);
			}, false);

			// current time
			media.addEventListener('timeupdate', function(e) {
				player.setProgressRail(e);
				player.setCurrentRail(e);
			}, false);
			
			
			// store for later use
			t.loaded = loaded;
			t.total = total;
			t.current = current;
			t.handle = handle;
		},
		setProgressRail: function(e) {

			var
				t = this,
				target = (e != undefined) ? e.target : t.media,
				percent = null;			

			// newest HTML5 spec has buffered array (FF4, Webkit)
			if (target && target.buffered && target.buffered.length > 0 && target.buffered.end && target.duration) {
				// TODO: account for a real array with multiple values (only Firefox 4 has this so far) 
				percent = target.buffered.end(0) / target.duration;
			} 
			// Some browsers (e.g., FF3.6 and Safari 5) cannot calculate target.bufferered.end()
			// to be anything other than 0. If the byte count is available we use this instead.
			// Browsers that support the else if do not seem to have the bufferedBytes value and
			// should skip to there. Tested in Safari 5, Webkit head, FF3.6, Chrome 6, IE 7/8.
			else if (target && target.bytesTotal != undefined && target.bytesTotal > 0 && target.bufferedBytes != undefined) {
				percent = target.bufferedBytes / target.bytesTotal;
			}
			// Firefox 3 with an Ogg file seems to go this way
			else if (e && e.lengthComputable && e.total != 0) {
				percent = e.loaded/e.total;
			}

			// finally update the progress bar
			if (percent !== null) {
				percent = Math.min(1, Math.max(0, percent));
				// update loaded bar
				if (t.loaded && t.total) {
					t.loaded.width(t.total.width() * percent);
				}
			}
		},
		setCurrentRail: function() {

			var t = this;
		
			if (t.media.currentTime != undefined && t.media.duration) {

				// update bar and handle
				if (t.total && t.handle) {
					var 
						newWidth = Math.round(t.total.width() * t.media.currentTime / t.media.duration),
						handlePos = newWidth - Math.round(t.handle.outerWidth(true) / 2);

					t.current.width(newWidth);
					t.handle.css('left', handlePos);
				}
			}

		}	
	});
})(mejs.$);

(function($) {
	
	// options
	$.extend(mejs.MepDefaults, {
		duration: -1,
		timeAndDurationSeparator: '<span> | </span>'
	});


	// current and duration 00:00 / 00:00
	$.extend(MediaElementPlayer.prototype, {
		buildcurrent: function(player, controls, layers, media) {
			var t = this;
			
			$('<div class="mejs-time">'+
					'<span class="mejs-currenttime">' + (player.options.alwaysShowHours ? '00:' : '')
					+ (player.options.showTimecodeFrameCount? '00:00:00':'00:00')+ '</span>'+
					'</div>')
					.appendTo(controls);
			
			t.currenttime = t.controls.find('.mejs-currenttime');

			media.addEventListener('timeupdate',function() {
				player.updateCurrent();
			}, false);
		},


		buildduration: function(player, controls, layers, media) {
			var t = this;
			
			if (controls.children().last().find('.mejs-currenttime').length > 0) {
				$(t.options.timeAndDurationSeparator +
					'<span class="mejs-duration">' + 
						(t.options.duration > 0 ? 
							mejs.Utility.secondsToTimeCode(t.options.duration, t.options.alwaysShowHours || t.media.duration > 3600, t.options.showTimecodeFrameCount,  t.options.framesPerSecond || 25) :
				   			((player.options.alwaysShowHours ? '00:' : '') + (player.options.showTimecodeFrameCount? '00:00:00':'00:00')) 
				   		) + 
					'</span>')
					.appendTo(controls.find('.mejs-time'));
			} else {

				// add class to current time
				controls.find('.mejs-currenttime').parent().addClass('mejs-currenttime-container');
				
				$('<div class="mejs-time mejs-duration-container">'+
					'<span class="mejs-duration">' + 
						(t.options.duration > 0 ? 
							mejs.Utility.secondsToTimeCode(t.options.duration, t.options.alwaysShowHours || t.media.duration > 3600, t.options.showTimecodeFrameCount,  t.options.framesPerSecond || 25) :
				   			((player.options.alwaysShowHours ? '00:' : '') + (player.options.showTimecodeFrameCount? '00:00:00':'00:00')) 
				   		) + 
					'</span>' +
				'</div>')
				.appendTo(controls);
			}
			
			t.durationD = t.controls.find('.mejs-duration');

			media.addEventListener('timeupdate',function() {
				player.updateDuration();
			}, false);
		},
		
		updateCurrent:  function() {
			var t = this;

			if (t.currenttime) {
				t.currenttime.html(mejs.Utility.secondsToTimeCode(t.media.currentTime, t.options.alwaysShowHours || t.media.duration > 3600, t.options.showTimecodeFrameCount,  t.options.framesPerSecond || 25));
			}
		},
		
		updateDuration: function() {
			var t = this;

			//Toggle the long video class if the video is longer than an hour.
			t.container.toggleClass("mejs-long-video", t.media.duration > 3600);
			
			if (t.durationD && (t.options.duration > 0 || t.media.duration)) {
				t.durationD.html(mejs.Utility.secondsToTimeCode(t.options.duration > 0 ? t.options.duration : t.media.duration, t.options.alwaysShowHours, t.options.showTimecodeFrameCount, t.options.framesPerSecond || 25));
			}		
		}
	});

})(mejs.$);

(function($) {

	$.extend(mejs.MepDefaults, {
		muteText: mejs.i18n.t('Mute Toggle'),
		hideVolumeOnTouchDevices: true,
		
		audioVolume: 'horizontal',
		videoVolume: 'vertical'
	});

	$.extend(MediaElementPlayer.prototype, {
		buildvolume: function(player, controls, layers, media) {
				
			// Android and iOS don't support volume controls
			if ((mejs.MediaFeatures.isAndroid || mejs.MediaFeatures.isiOS) && this.options.hideVolumeOnTouchDevices)
				return;
			
			var t = this,
				mode = (t.isVideo) ? t.options.videoVolume : t.options.audioVolume,
				mute = (mode == 'horizontal') ?
				
				// horizontal version
				$('<div class="mejs-button mejs-volume-button mejs-mute">'+
					'<button type="button" aria-controls="' + t.id + '" title="' + t.options.muteText + '" aria-label="' + t.options.muteText + '"></button>'+
				'</div>' +
				'<div class="mejs-horizontal-volume-slider">'+ // outer background
					'<div class="mejs-horizontal-volume-total"></div>'+ // line background
					'<div class="mejs-horizontal-volume-current"></div>'+ // current volume
					'<div class="mejs-horizontal-volume-handle"></div>'+ // handle
				'</div>'
				)
					.appendTo(controls) :
				
				// vertical version
				$('<div class="mejs-button mejs-volume-button mejs-mute">'+
					'<button type="button" aria-controls="' + t.id + '" title="' + t.options.muteText + '" aria-label="' + t.options.muteText + '"></button>'+
					'<div class="mejs-volume-slider">'+ // outer background
						'<div class="mejs-volume-total"></div>'+ // line background
						'<div class="mejs-volume-current"></div>'+ // current volume
						'<div class="mejs-volume-handle"></div>'+ // handle
					'</div>'+
				'</div>')
					.appendTo(controls),
			volumeSlider = t.container.find('.mejs-volume-slider, .mejs-horizontal-volume-slider'),
			volumeTotal = t.container.find('.mejs-volume-total, .mejs-horizontal-volume-total'),
			volumeCurrent = t.container.find('.mejs-volume-current, .mejs-horizontal-volume-current'),
			volumeHandle = t.container.find('.mejs-volume-handle, .mejs-horizontal-volume-handle'),

			positionVolumeHandle = function(volume, secondTry) {

				if (!volumeSlider.is(':visible') && typeof secondTry == 'undefined') {
					volumeSlider.show();
					positionVolumeHandle(volume, true);
					volumeSlider.hide()
					return;
				}
			
				// correct to 0-1
				volume = Math.max(0,volume);
				volume = Math.min(volume,1);					
				
				// ajust mute button style
				if (volume == 0) {
					mute.removeClass('mejs-mute').addClass('mejs-unmute');
				} else {
					mute.removeClass('mejs-unmute').addClass('mejs-mute');
				}				

				// position slider 
				if (mode == 'vertical') {
					var 
					
						// height of the full size volume slider background
						totalHeight = volumeTotal.height(),
						
						// top/left of full size volume slider background
						totalPosition = volumeTotal.position(),
						
						// the new top position based on the current volume
						// 70% volume on 100px height == top:30px
						newTop = totalHeight - (totalHeight * volume);
	
					// handle
					volumeHandle.css('top', Math.round(totalPosition.top + newTop - (volumeHandle.height() / 2)));
	
					// show the current visibility
					volumeCurrent.height(totalHeight - newTop );
					volumeCurrent.css('top', totalPosition.top + newTop);
				} else {
					var 
					
						// height of the full size volume slider background
						totalWidth = volumeTotal.width(),
						
						// top/left of full size volume slider background
						totalPosition = volumeTotal.position(),
						
						// the new left position based on the current volume
						newLeft = totalWidth * volume;
	
					// handle
					volumeHandle.css('left', Math.round(totalPosition.left + newLeft - (volumeHandle.width() / 2)));
	
					// rezize the current part of the volume bar
					volumeCurrent.width( Math.round(newLeft) );
				}
			},
			handleVolumeMove = function(e) {
				
				var volume = null,
					totalOffset = volumeTotal.offset();
				
				// calculate the new volume based on the moust position
				if (mode == 'vertical') {
				
					var
						railHeight = volumeTotal.height(),
						totalTop = parseInt(volumeTotal.css('top').replace(/px/,''),10),
						newY = e.pageY - totalOffset.top;
						
					volume = (railHeight - newY) / railHeight;
						
					// the controls just hide themselves (usually when mouse moves too far up)
					if (totalOffset.top == 0 || totalOffset.left == 0)
						return;
					
				} else {
					var
						railWidth = volumeTotal.width(),
						newX = e.pageX - totalOffset.left;
						
					volume = newX / railWidth;
				}
				
				// ensure the volume isn't outside 0-1
				volume = Math.max(0,volume);
				volume = Math.min(volume,1);
				
				// position the slider and handle			
				positionVolumeHandle(volume);
				
				// set the media object (this will trigger the volumechanged event)
				if (volume == 0) {
					media.setMuted(true);
				} else {
					media.setMuted(false);
				}
				media.setVolume(volume);			
			},
			mouseIsDown = false,
			mouseIsOver = false;

			// SLIDER
			
			mute
				.hover(function() {
					volumeSlider.show();
					mouseIsOver = true;
				}, function() {
					mouseIsOver = false;	
						
					if (!mouseIsDown && mode == 'vertical')	{
						volumeSlider.hide();
					}
				});
			
			volumeSlider
				.bind('mouseover', function() {
					mouseIsOver = true;	
				})
				.bind('mousedown', function (e) {
					handleVolumeMove(e);
					t.globalBind('mousemove.vol', function(e) {
						handleVolumeMove(e);
					});
					t.globalBind('mouseup.vol', function () {
						mouseIsDown = false;
						t.globalUnbind('.vol');

						if (!mouseIsOver && mode == 'vertical') {
							volumeSlider.hide();
						}
					});
					mouseIsDown = true;
						
					return false;
				});


			// MUTE button
			mute.find('button').click(function() {
				media.setMuted( !media.muted );
			});

			// listen for volume change events from other sources
			media.addEventListener('volumechange', function(e) {
				if (!mouseIsDown) {
					if (media.muted) {
						positionVolumeHandle(0);
						mute.removeClass('mejs-mute').addClass('mejs-unmute');
					} else {
						positionVolumeHandle(media.volume);
						mute.removeClass('mejs-unmute').addClass('mejs-mute');
					}
				}
			}, false);

			if (t.container.is(':visible')) {
				// set initial volume
				positionVolumeHandle(player.options.startVolume);

				// mutes the media and sets the volume icon muted if the initial volume is set to 0
        if (player.options.startVolume === 0) {
          media.setMuted(true);
        }

				// shim gets the startvolume as a parameter, but we have to set it on the native <video> and <audio> elements
				if (media.pluginType === 'native') {
					media.setVolume(player.options.startVolume);
				}
			}
		}
	});
	
})(mejs.$);

(function($) {

	$.extend(mejs.MepDefaults, {
		usePluginFullScreen: true,
		newWindowCallback: function() { return '';},
		fullscreenText: mejs.i18n.t('Fullscreen')
	});

	$.extend(MediaElementPlayer.prototype, {

		isFullScreen: false,

		isNativeFullScreen: false,

		isInIframe: false,

		buildfullscreen: function(player, controls, layers, media) {

			if (!player.isVideo)
				return;

			player.isInIframe = (window.location != window.parent.location);

			// native events
			if (mejs.MediaFeatures.hasTrueNativeFullScreen) {

				// chrome doesn't alays fire this in an iframe
				var func = function(e) {
					if (player.isFullScreen) {
						if (mejs.MediaFeatures.isFullScreen()) {
							player.isNativeFullScreen = true;
							// reset the controls once we are fully in full screen
							player.setControlsSize();
						} else {
							player.isNativeFullScreen = false;
							// when a user presses ESC
							// make sure to put the player back into place
							player.exitFullScreen();
						}
					}
				};

				if (mejs.MediaFeatures.hasMozNativeFullScreen) {
					player.globalBind(mejs.MediaFeatures.fullScreenEventName, func);
				} else {
					player.container.bind(mejs.MediaFeatures.fullScreenEventName, func);
				}
			}

			var t = this,
				normalHeight = 0,
				normalWidth = 0,
				container = player.container,
				fullscreenBtn =
					$('<div class="mejs-button mejs-fullscreen-button">' +
						'<button type="button" aria-controls="' + t.id + '" title="' + t.options.fullscreenText + '" aria-label="' + t.options.fullscreenText + '"></button>' +
					'</div>')
					.appendTo(controls);

				if (t.media.pluginType === 'native' || (!t.options.usePluginFullScreen && !mejs.MediaFeatures.isFirefox)) {

					fullscreenBtn.click(function() {
						var isFullScreen = (mejs.MediaFeatures.hasTrueNativeFullScreen && mejs.MediaFeatures.isFullScreen()) || player.isFullScreen;

						if (isFullScreen) {
							player.exitFullScreen();
						} else {
							player.enterFullScreen();
						}
					});

				} else {

					var hideTimeout = null,
						supportsPointerEvents = (function() {
							// TAKEN FROM MODERNIZR
							var element = document.createElement('x'),
								documentElement = document.documentElement,
								getComputedStyle = window.getComputedStyle,
								supports;
							if(!('pointerEvents' in element.style)){
								return false;
							}
							element.style.pointerEvents = 'auto';
							element.style.pointerEvents = 'x';
							documentElement.appendChild(element);
							supports = getComputedStyle &&
								getComputedStyle(element, '').pointerEvents === 'auto';
							documentElement.removeChild(element);
							return !!supports;
						})();

					//

					if (supportsPointerEvents && !mejs.MediaFeatures.isOpera) { // opera doesn't allow this :(

						// allows clicking through the fullscreen button and controls down directly to Flash

						/*
						 When a user puts his mouse over the fullscreen button, the controls are disabled
						 So we put a div over the video and another one on iether side of the fullscreen button
						 that caputre mouse movement
						 and restore the controls once the mouse moves outside of the fullscreen button
						*/

						var fullscreenIsDisabled = false,
							restoreControls = function() {
								if (fullscreenIsDisabled) {
									// hide the hovers
									for (var i in hoverDivs) {
										hoverDivs[i].hide();
									}

									// restore the control bar
									fullscreenBtn.css('pointer-events', '');
									t.controls.css('pointer-events', '');

									// prevent clicks from pausing video
									t.media.removeEventListener('click', t.clickToPlayPauseCallback);

									// store for later
									fullscreenIsDisabled = false;
								}
							},
							hoverDivs = {},
							hoverDivNames = ['top', 'left', 'right', 'bottom'],
							i, len,
							positionHoverDivs = function() {
								var fullScreenBtnOffsetLeft = fullscreenBtn.offset().left - t.container.offset().left,
									fullScreenBtnOffsetTop = fullscreenBtn.offset().top - t.container.offset().top,
									fullScreenBtnWidth = fullscreenBtn.outerWidth(true),
									fullScreenBtnHeight = fullscreenBtn.outerHeight(true),
									containerWidth = t.container.width(),
									containerHeight = t.container.height();

								for (i in hoverDivs) {
									hoverDivs[i].css({position: 'absolute', top: 0, left: 0}); //, backgroundColor: '#f00'});
								}

								// over video, but not controls
								hoverDivs['top']
									.width( containerWidth )
									.height( fullScreenBtnOffsetTop );

								// over controls, but not the fullscreen button
								hoverDivs['left']
									.width( fullScreenBtnOffsetLeft )
									.height( fullScreenBtnHeight )
									.css({top: fullScreenBtnOffsetTop});

								// after the fullscreen button
								hoverDivs['right']
									.width( containerWidth - fullScreenBtnOffsetLeft - fullScreenBtnWidth )
									.height( fullScreenBtnHeight )
									.css({top: fullScreenBtnOffsetTop,
										 left: fullScreenBtnOffsetLeft + fullScreenBtnWidth});

								// under the fullscreen button
								hoverDivs['bottom']
									.width( containerWidth )
									.height( containerHeight - fullScreenBtnHeight - fullScreenBtnOffsetTop )
									.css({top: fullScreenBtnOffsetTop + fullScreenBtnHeight});
							};

						t.globalBind('resize', function() {
							positionHoverDivs();
						});

						for (i = 0, len = hoverDivNames.length; i < len; i++) {
							hoverDivs[hoverDivNames[i]] = $('<div class="mejs-fullscreen-hover" />').appendTo(t.container).mouseover(restoreControls).hide();
						}

						// on hover, kill the fullscreen button's HTML handling, allowing clicks down to Flash
						fullscreenBtn.on('mouseover',function() {

							if (!t.isFullScreen) {

								var buttonPos = fullscreenBtn.offset(),
									containerPos = player.container.offset();

								// move the button in Flash into place
								media.positionFullscreenButton(buttonPos.left - containerPos.left, buttonPos.top - containerPos.top, false);

								// allows click through
								fullscreenBtn.css('pointer-events', 'none');
								t.controls.css('pointer-events', 'none');

								// restore click-to-play
								t.media.addEventListener('click', t.clickToPlayPauseCallback);

								// show the divs that will restore things
								for (i in hoverDivs) {
									hoverDivs[i].show();
								}

								positionHoverDivs();

								fullscreenIsDisabled = true;
							}

						});

						// restore controls anytime the user enters or leaves fullscreen
						media.addEventListener('fullscreenchange', function(e) {
							t.isFullScreen = !t.isFullScreen;
							// don't allow plugin click to pause video - messes with
							// plugin's controls
							if (t.isFullScreen) {
								t.media.removeEventListener('click', t.clickToPlayPauseCallback);
							} else {
								t.media.addEventListener('click', t.clickToPlayPauseCallback);
							}
							restoreControls();
						});


						// the mouseout event doesn't work on the fullscren button, because we already killed the pointer-events
						// so we use the document.mousemove event to restore controls when the mouse moves outside the fullscreen button

						t.globalBind('mousemove', function(e) {

							// if the mouse is anywhere but the fullsceen button, then restore it all
							if (fullscreenIsDisabled) {

								var fullscreenBtnPos = fullscreenBtn.offset();


								if (e.pageY < fullscreenBtnPos.top || e.pageY > fullscreenBtnPos.top + fullscreenBtn.outerHeight(true) ||
									e.pageX < fullscreenBtnPos.left || e.pageX > fullscreenBtnPos.left + fullscreenBtn.outerWidth(true)
									) {

									fullscreenBtn.css('pointer-events', '');
									t.controls.css('pointer-events', '');

									fullscreenIsDisabled = false;
								}
							}
						});



					} else {

						// the hover state will show the fullscreen button in Flash to hover up and click

						fullscreenBtn
							.on('mouseover', function() {

								if (hideTimeout !== null) {
									clearTimeout(hideTimeout);
									delete hideTimeout;
								}

								var buttonPos = fullscreenBtn.offset(),
									containerPos = player.container.offset();

								media.positionFullscreenButton(buttonPos.left - containerPos.left, buttonPos.top - containerPos.top, true);

							})
							.on('mouseout', function() {

								if (hideTimeout !== null) {
									clearTimeout(hideTimeout);
									delete hideTimeout;
								}

								hideTimeout = setTimeout(function() {
									media.hideFullscreenButton();
								}, 1500);


							});
					}
				}

			player.fullscreenBtn = fullscreenBtn;

			t.globalBind('keydown',function (e) {
				if (((mejs.MediaFeatures.hasTrueNativeFullScreen && mejs.MediaFeatures.isFullScreen()) || t.isFullScreen) && e.keyCode == 27) {
					player.exitFullScreen();
				}
			});

		},

		cleanfullscreen: function(player) {
			player.exitFullScreen();
		},

        containerSizeTimeout: null,

		enterFullScreen: function() {

			var t = this;

			// firefox+flash can't adjust plugin sizes without resetting :(
			if (t.media.pluginType !== 'native' && (mejs.MediaFeatures.isFirefox || t.options.usePluginFullScreen)) {
				//t.media.setFullscreen(true);
				//player.isFullScreen = true;
				return;
			}

			// set it to not show scroll bars so 100% will work
            $(document.documentElement).addClass('mejs-fullscreen');

			// store sizing
			normalHeight = t.container.height();
			normalWidth = t.container.width();

			// attempt to do true fullscreen (Safari 5.1 and Firefox Nightly only for now)
			if (t.media.pluginType === 'native') {
				if (mejs.MediaFeatures.hasTrueNativeFullScreen) {

					mejs.MediaFeatures.requestFullScreen(t.container[0]);
					//return;

					if (t.isInIframe) {
						// sometimes exiting from fullscreen doesn't work
						// notably in Chrome <iframe>. Fixed in version 17
						setTimeout(function checkFullscreen() {

							if (t.isNativeFullScreen) {
								var zoomMultiplier = window["devicePixelRatio"] || 1;
								// Use a percent error margin since devicePixelRatio is a float and not exact.
								var percentErrorMargin = 0.002; // 0.2%
								var windowWidth = zoomMultiplier * $(window).width();
								var screenWidth = screen.width;
								var absDiff = Math.abs(screenWidth - windowWidth);
								var marginError = screenWidth * percentErrorMargin;

								// check if the video is suddenly not really fullscreen
								if (absDiff > marginError) {
									// manually exit
									t.exitFullScreen();
								} else {
									// test again
									setTimeout(checkFullscreen, 500);
								}
							}


						}, 500);
					}

				} else if (mejs.MediaFeatures.hasSemiNativeFullScreen) {
					t.media.webkitEnterFullscreen();
					return;
				}
			}

			// check for iframe launch
			if (t.isInIframe) {
				var url = t.options.newWindowCallback(this);


				if (url !== '') {

					// launch immediately
					if (!mejs.MediaFeatures.hasTrueNativeFullScreen) {
						t.pause();
						window.open(url, t.id, 'top=0,left=0,width=' + screen.availWidth + ',height=' + screen.availHeight + ',resizable=yes,scrollbars=no,status=no,toolbar=no');
						return;
					} else {
						setTimeout(function() {
							if (!t.isNativeFullScreen) {
								t.pause();
								window.open(url, t.id, 'top=0,left=0,width=' + screen.availWidth + ',height=' + screen.availHeight + ',resizable=yes,scrollbars=no,status=no,toolbar=no');
							}
						}, 250);
					}
				}

			}

			// full window code



			// make full size
			t.container
				.addClass('mejs-container-fullscreen')
				.width('100%')
				.height('100%');
				//.css({position: 'fixed', left: 0, top: 0, right: 0, bottom: 0, overflow: 'hidden', width: '100%', height: '100%', 'z-index': 1000});

			// Only needed for safari 5.1 native full screen, can cause display issues elsewhere
			// Actually, it seems to be needed for IE8, too
			//if (mejs.MediaFeatures.hasTrueNativeFullScreen) {
				t.containerSizeTimeout = setTimeout(function() {
					t.container.css({width: '100%', height: '100%'});
					t.setControlsSize();
				}, 500);
			//}

			if (t.media.pluginType === 'native') {
				t.$media
					.width('100%')
					.height('100%');
			} else {
				t.container.find('.mejs-shim')
					.width('100%')
					.height('100%');

				//if (!mejs.MediaFeatures.hasTrueNativeFullScreen) {
					t.media.setVideoSize($(window).width(),$(window).height());
				//}
			}

			t.layers.children('div')
				.width('100%')
				.height('100%');

			if (t.fullscreenBtn) {
				t.fullscreenBtn
					.removeClass('mejs-fullscreen')
					.addClass('mejs-unfullscreen');
			}

			t.setControlsSize();
			t.isFullScreen = true;
		},

		exitFullScreen: function() {

			var t = this;

            // Prevent container from attempting to stretch a second time
            clearTimeout(t.containerSizeTimeout);

			// firefox can't adjust plugins
			if (t.media.pluginType !== 'native' && mejs.MediaFeatures.isFirefox) {
				t.media.setFullscreen(false);
				//player.isFullScreen = false;
				return;
			}

			// come outo of native fullscreen
			if (mejs.MediaFeatures.hasTrueNativeFullScreen && (mejs.MediaFeatures.isFullScreen() || t.isFullScreen)) {
				mejs.MediaFeatures.cancelFullScreen();
			}

			// restore scroll bars to document
            $(document.documentElement).removeClass('mejs-fullscreen');

			t.container
				.removeClass('mejs-container-fullscreen')
				.width(normalWidth)
				.height(normalHeight);
				//.css({position: '', left: '', top: '', right: '', bottom: '', overflow: 'inherit', width: normalWidth + 'px', height: normalHeight + 'px', 'z-index': 1});

			if (t.media.pluginType === 'native') {
				t.$media
					.width(normalWidth)
					.height(normalHeight);
			} else {
				t.container.find('.mejs-shim')
					.width(normalWidth)
					.height(normalHeight);

				t.media.setVideoSize(normalWidth, normalHeight);
			}

			t.layers.children('div')
				.width(normalWidth)
				.height(normalHeight);

			t.fullscreenBtn
				.removeClass('mejs-unfullscreen')
				.addClass('mejs-fullscreen');

			t.setControlsSize();
			t.isFullScreen = false;
		}
	});

})(mejs.$);

(function($) {

	// add extra default options 
	$.extend(mejs.MepDefaults, {
		// this will automatically turn on a <track>
		startLanguage: '',

		tracksText: mejs.i18n.t('Captions/Subtitles'),
		
		// option to remove the [cc] button when no <track kind="subtitles"> are present
		hideCaptionsButtonWhenEmpty: true,

		// If true and we only have one track, change captions to popup
		toggleCaptionsButtonWhenOnlyOne: false,

		// #id or .class		
		slidesSelector: ''
	});

	$.extend(MediaElementPlayer.prototype, {
	
		hasChapters: false,

		buildtracks: function(player, controls, layers, media) {
			if (player.tracks.length == 0)
				return;

			var t = this, 
				i, 
				options = '';

			if (t.domNode.textTracks) { // if browser will do native captions, prefer mejs captions, loop through tracks and hide
				for (var i = t.domNode.textTracks.length - 1; i >= 0; i--) {
					t.domNode.textTracks[i].mode = "hidden";
				}
			}
			player.chapters = 
					$('<div class="mejs-chapters mejs-layer"></div>')
						.prependTo(layers).hide();
			player.captions = 
					$('<div class="mejs-captions-layer mejs-layer"><div class="mejs-captions-position mejs-captions-position-hover"><span class="mejs-captions-text"></span></div></div>')
						.prependTo(layers).hide();
			player.captionsText = player.captions.find('.mejs-captions-text');
			player.captionsButton = 
					$('<div class="mejs-button mejs-captions-button">'+
						'<button type="button" aria-controls="' + t.id + '" title="' + t.options.tracksText + '" aria-label="' + t.options.tracksText + '"></button>'+
						'<div class="mejs-captions-selector">'+
							'<ul>'+
								'<li>'+
									'<input type="radio" name="' + player.id + '_captions" id="' + player.id + '_captions_none" value="none" checked="checked" />' +
									'<label for="' + player.id + '_captions_none">' + mejs.i18n.t('None') +'</label>'+
								'</li>'	+
							'</ul>'+
						'</div>'+
					'</div>')
						.appendTo(controls);
			
						
			var subtitleCount = 0;
			for (i=0; i<player.tracks.length; i++) {
				if (player.tracks[i].kind == 'subtitles') {
					subtitleCount++;
				}
			}

			// if only one language then just make the button a toggle
			if (t.options.toggleCaptionsButtonWhenOnlyOne && subtitleCount == 1){
				// click
				player.captionsButton.on('click',function() {
					if (player.selectedTrack == null) {
						var lang = player.tracks[0].srclang;
					} else {
						var lang = 'none';
					}
					player.setTrack(lang);
				});
			} else {
				// hover
				player.captionsButton.hover(function() {
					$(this).find('.mejs-captions-selector').css('visibility','visible');
				}, function() {
					$(this).find('.mejs-captions-selector').css('visibility','hidden');
				})

				// handle clicks to the language radio buttons
				.on('click','input[type=radio]',function() {
					lang = this.value;
					player.setTrack(lang);
				});

			}

			if (!player.options.alwaysShowControls) {
				// move with controls
				player.container
					.bind('controlsshown', function () {
						// push captions above controls
						player.container.find('.mejs-captions-position').addClass('mejs-captions-position-hover');

					})
					.bind('controlshidden', function () {
						if (!media.paused) {
							// move back to normal place
							player.container.find('.mejs-captions-position').removeClass('mejs-captions-position-hover');
						}
					});
			} else {
				player.container.find('.mejs-captions-position').addClass('mejs-captions-position-hover');
			}

			player.trackToLoad = -1;
			player.selectedTrack = null;
			player.isLoadingTrack = false;

			

			// add to list
			for (i=0; i<player.tracks.length; i++) {
				if (player.tracks[i].kind == 'subtitles') {
					player.addTrackButton(player.tracks[i].srclang, player.tracks[i].label);
				}
			}

			// start loading tracks
			player.loadNextTrack();


			media.addEventListener('timeupdate',function(e) {
				player.displayCaptions();
			}, false);
			
			if (player.options.slidesSelector != '') {
				player.slidesContainer = $(player.options.slidesSelector);

				media.addEventListener('timeupdate',function(e) {
					player.displaySlides();	
				}, false);
			
			}

			media.addEventListener('loadedmetadata', function(e) {
				player.displayChapters();
			}, false);

			player.container.hover(
				function () {
					// chapters
					if (player.hasChapters) {
						player.chapters.css('visibility','visible');
						player.chapters.fadeIn(200).height(player.chapters.find('.mejs-chapter').outerHeight());
					}
				},
				function () {
					if (player.hasChapters && !media.paused) {
						player.chapters.fadeOut(200, function() {
							$(this).css('visibility','hidden');
							$(this).css('display','block');
						});
					}
				});
				
			// check for autoplay
			if (player.node.getAttribute('autoplay') !== null) {
				player.chapters.css('visibility','hidden');
			}
		},
		
		setTrack: function(lang){
		
			var t = this,
				i;
		
			if (lang == 'none') {
				t.selectedTrack = null;
				t.captionsButton.removeClass('mejs-captions-enabled');
			} else {
				for (i=0; i<t.tracks.length; i++) {
					if (t.tracks[i].srclang == lang) {
						if (t.selectedTrack == null)
						    t.captionsButton.addClass('mejs-captions-enabled');
						t.selectedTrack = t.tracks[i];
						t.captions.attr('lang', t.selectedTrack.srclang);
						t.displayCaptions();
						break;
					}
				}
			}
		},

		loadNextTrack: function() {
			var t = this;

			t.trackToLoad++;
			if (t.trackToLoad < t.tracks.length) {
				t.isLoadingTrack = true;
				t.loadTrack(t.trackToLoad);
			} else {
				// add done?
				t.isLoadingTrack = false;
				
				t.checkForTracks();	
			}
		},

		loadTrack: function(index){
			var
				t = this,
				track = t.tracks[index],
				after = function() {

					track.isLoaded = true;

					// create button
					//t.addTrackButton(track.srclang);
					t.enableTrackButton(track.srclang, track.label);

					t.loadNextTrack();

				};


			$.ajax({
				url: track.src,
				dataType: "text",
				success: function(d) {

					// parse the loaded file
					if (typeof d == "string" && (/<tt\s+xml/ig).exec(d)) {
						track.entries = mejs.TrackFormatParser.dfxp.parse(d);					
					} else {	
						track.entries = mejs.TrackFormatParser.webvvt.parse(d);
					}
					
					after();

					if (track.kind == 'chapters') {
						t.media.addEventListener('play', function(e) {
							if (t.media.duration > 0) {
								t.displayChapters(track);
							}
						}, false);
					}
					
					if (track.kind == 'slides') {
						t.setupSlides(track);
					}					
				},
				error: function() {
					t.loadNextTrack();
				}
			});
		},

		enableTrackButton: function(lang, label) {
			var t = this;
			
			if (label === '') {
				label = mejs.language.codes[lang] || lang;
			}			

			t.captionsButton
				.find('input[value=' + lang + ']')
					.prop('disabled',false)
				.siblings('label')
					.html( label );

			// auto select
			if (t.options.startLanguage == lang) {
				$('#' + t.id + '_captions_' + lang).click();
			}

			t.adjustLanguageBox();
		},

		addTrackButton: function(lang, label) {
			var t = this;
			if (label === '') {
				label = mejs.language.codes[lang] || lang;
			}

			t.captionsButton.find('ul').append(
				$('<li>'+
					'<input type="radio" name="' + t.id + '_captions" id="' + t.id + '_captions_' + lang + '" value="' + lang + '" disabled="disabled" />' +
					'<label for="' + t.id + '_captions_' + lang + '">' + label + ' (loading)' + '</label>'+
				'</li>')
			);

			t.adjustLanguageBox();

			// remove this from the dropdownlist (if it exists)
			t.container.find('.mejs-captions-translations option[value=' + lang + ']').remove();
		},

		adjustLanguageBox:function() {
			var t = this;
			// adjust the size of the outer box
			t.captionsButton.find('.mejs-captions-selector').height(
				t.captionsButton.find('.mejs-captions-selector ul').outerHeight(true) +
				t.captionsButton.find('.mejs-captions-translations').outerHeight(true)
			);
		},
		
		checkForTracks: function() {
			var
				t = this,
				hasSubtitles = false;
			
			// check if any subtitles
			if (t.options.hideCaptionsButtonWhenEmpty) {
				for (i=0; i<t.tracks.length; i++) {
					if (t.tracks[i].kind == 'subtitles') {
						hasSubtitles = true;
						break;
					}
				}	
					
				if (!hasSubtitles) {
					t.captionsButton.hide();
					t.setControlsSize();
				}													
			}		
		},

		displayCaptions: function() {

			if (typeof this.tracks == 'undefined')
				return;

			var
				t = this,
				i,
				track = t.selectedTrack;

			if (track != null && track.isLoaded) {
				for (i=0; i<track.entries.times.length; i++) {
					if (t.media.currentTime >= track.entries.times[i].start && t.media.currentTime <= track.entries.times[i].stop){
						t.captionsText.html(track.entries.text[i]);
						t.captions.show().height(0);
						return; // exit out if one is visible;
					}
				}
				t.captions.hide();
			} else {
				t.captions.hide();
			}
		},
		
		setupSlides: function(track) {
			var t = this;
				
			t.slides = track;
			t.slides.entries.imgs = [t.slides.entries.text.length];
			t.showSlide(0);
			
		},
		
		showSlide: function(index) {
			if (typeof this.tracks == 'undefined' || typeof this.slidesContainer == 'undefined') {
				return;			
			}
								
			var t = this,
				url = t.slides.entries.text[index],
				img = t.slides.entries.imgs[index];
				
			if (typeof img == 'undefined' || typeof img.fadeIn == 'undefined') {

				t.slides.entries.imgs[index] = img = $('<img src="' + url + '">')
						.on('load', function() {
							img.appendTo(t.slidesContainer)
								.hide()
								.fadeIn()
								.siblings(':visible')
									.fadeOut();							
						
						});
			
			} else {
			
				if (!img.is(':visible') && !img.is(':animated')) {
				
					//			
					
					img.fadeIn()
						.siblings(':visible')
							.fadeOut();			
				}
			}
				
		},
		
		displaySlides: function() {
		
			if (typeof this.slides == 'undefined')
				return;	
				
			var 
				t = this,
				slides = t.slides,
				i;				
		
			for (i=0; i<slides.entries.times.length; i++) {
				if (t.media.currentTime >= slides.entries.times[i].start && t.media.currentTime <= slides.entries.times[i].stop){
				
					t.showSlide(i);
					
					return; // exit out if one is visible;
				}
			}
		},

		displayChapters: function() {
			var 
				t = this,
				i;

			for (i=0; i<t.tracks.length; i++) {
				if (t.tracks[i].kind == 'chapters' && t.tracks[i].isLoaded) {
					t.drawChapters(t.tracks[i]);
					t.hasChapters = true;
					break;
				}
			}
		},

		drawChapters: function(chapters) {
			var 
				t = this,
				i,
				dur,
				//width,
				//left,
				percent = 0,
				usedPercent = 0;

			t.chapters.empty();

			for (i=0; i<chapters.entries.times.length; i++) {
				dur = chapters.entries.times[i].stop - chapters.entries.times[i].start;
				percent = Math.floor(dur / t.media.duration * 100);
				if (percent + usedPercent > 100 || // too large
					i == chapters.entries.times.length-1 && percent + usedPercent < 100) // not going to fill it in
					{
					percent = 100 - usedPercent;
				}
				//width = Math.floor(t.width * dur / t.media.duration);
				//left = Math.floor(t.width * chapters.entries.times[i].start / t.media.duration);
				//if (left + width > t.width) {
				//	width = t.width - left;
				//}

				t.chapters.append( $(
					'<div class="mejs-chapter" rel="' + chapters.entries.times[i].start + '" style="left: ' + usedPercent.toString() + '%;width: ' + percent.toString() + '%;">' + 
						'<div class="mejs-chapter-block' + ((i==chapters.entries.times.length-1) ? ' mejs-chapter-block-last' : '') + '">' + 
							'<span class="ch-title">' + chapters.entries.text[i] + '</span>' + 
							'<span class="ch-time">' + mejs.Utility.secondsToTimeCode(chapters.entries.times[i].start) + '&ndash;' + mejs.Utility.secondsToTimeCode(chapters.entries.times[i].stop) + '</span>' + 
						'</div>' +
					'</div>'));
				usedPercent += percent;
			}

			t.chapters.find('div.mejs-chapter').click(function() {
				t.media.setCurrentTime( parseFloat( $(this).attr('rel') ) );
				if (t.media.paused) {
					t.media.play(); 
				}
			});

			t.chapters.show();
		}
	});



	mejs.language = {
		codes:  {
			af:'Afrikaans',
			sq:'Albanian',
			ar:'Arabic',
			be:'Belarusian',
			bg:'Bulgarian',
			ca:'Catalan',
			zh:'Chinese',
			'zh-cn':'Chinese Simplified',
			'zh-tw':'Chinese Traditional',
			hr:'Croatian',
			cs:'Czech',
			da:'Danish',
			nl:'Dutch',
			en:'English',
			et:'Estonian',
			tl:'Filipino',
			fi:'Finnish',
			fr:'French',
			gl:'Galician',
			de:'German',
			el:'Greek',
			ht:'Haitian Creole',
			iw:'Hebrew',
			hi:'Hindi',
			hu:'Hungarian',
			is:'Icelandic',
			id:'Indonesian',
			ga:'Irish',
			it:'Italian',
			ja:'Japanese',
			ko:'Korean',
			lv:'Latvian',
			lt:'Lithuanian',
			mk:'Macedonian',
			ms:'Malay',
			mt:'Maltese',
			no:'Norwegian',
			fa:'Persian',
			pl:'Polish',
			pt:'Portuguese',
			//'pt-pt':'Portuguese (Portugal)',
			ro:'Romanian',
			ru:'Russian',
			sr:'Serbian',
			sk:'Slovak',
			sl:'Slovenian',
			es:'Spanish',
			sw:'Swahili',
			sv:'Swedish',
			tl:'Tagalog',
			th:'Thai',
			tr:'Turkish',
			uk:'Ukrainian',
			vi:'Vietnamese',
			cy:'Welsh',
			yi:'Yiddish'
		}
	};

	/*
	Parses WebVVT format which should be formatted as
	================================
	WEBVTT
	
	1
	00:00:01,1 --> 00:00:05,000
	A line of text

	2
	00:01:15,1 --> 00:02:05,000
	A second line of text
	
	===============================

	Adapted from: http://www.delphiki.com/html5/playr
	*/
	mejs.TrackFormatParser = {
		webvvt: {
			// match start "chapter-" (or anythingelse)
			pattern_identifier: /^([a-zA-z]+-)?[0-9]+$/,
			pattern_timecode: /^([0-9]{2}:[0-9]{2}:[0-9]{2}([,.][0-9]{1,3})?) --\> ([0-9]{2}:[0-9]{2}:[0-9]{2}([,.][0-9]{3})?)(.*)$/,

			parse: function(trackText) {
				var 
					i = 0,
					lines = mejs.TrackFormatParser.split2(trackText, /\r?\n/),
					entries = {text:[], times:[]},
					timecode,
					text;
				for(; i<lines.length; i++) {
					// check for the line number
					if (this.pattern_identifier.exec(lines[i])){
						// skip to the next line where the start --> end time code should be
						i++;
						timecode = this.pattern_timecode.exec(lines[i]);				

						if (timecode && i<lines.length){
							i++;
							// grab all the (possibly multi-line) text that follows
							text = lines[i];
							i++;
							while(lines[i] !== '' && i<lines.length){
								text = text + '\n' + lines[i];
								i++;
							}
							text = $.trim(text).replace(/(\b(https?|ftp|file):\/\/[-A-Z0-9+&@#\/%?=~_|!:,.;]*[-A-Z0-9+&@#\/%=~_|])/ig, "<a href='$1' target='_blank'>$1</a>");
							// Text is in a different array so I can use .join
							entries.text.push(text);
							entries.times.push(
							{
								start: (mejs.Utility.convertSMPTEtoSeconds(timecode[1]) == 0) ? 0.200 : mejs.Utility.convertSMPTEtoSeconds(timecode[1]),
								stop: mejs.Utility.convertSMPTEtoSeconds(timecode[3]),
								settings: timecode[5]
							});
						}
					}
				}
				return entries;
			}
		},
		// Thanks to Justin Capella: https://github.com/johndyer/mediaelement/pull/420
		dfxp: {
			parse: function(trackText) {
				trackText = $(trackText).filter("tt");
				var 
					i = 0,
					container = trackText.children("div").eq(0),
					lines = container.find("p"),
					styleNode = trackText.find("#" + container.attr("style")),
					styles,
					begin,
					end,
					text,
					entries = {text:[], times:[]};


				if (styleNode.length) {
					var attributes = styleNode.removeAttr("id").get(0).attributes;
					if (attributes.length) {
						styles = {};
						for (i = 0; i < attributes.length; i++) {
							styles[attributes[i].name.split(":")[1]] = attributes[i].value;
						}
					}
				}

				for(i = 0; i<lines.length; i++) {
					var style;
					var _temp_times = {
						start: null,
						stop: null,
						style: null
					};
					if (lines.eq(i).attr("begin")) _temp_times.start = mejs.Utility.convertSMPTEtoSeconds(lines.eq(i).attr("begin"));
					if (!_temp_times.start && lines.eq(i-1).attr("end")) _temp_times.start = mejs.Utility.convertSMPTEtoSeconds(lines.eq(i-1).attr("end"));
					if (lines.eq(i).attr("end")) _temp_times.stop = mejs.Utility.convertSMPTEtoSeconds(lines.eq(i).attr("end"));
					if (!_temp_times.stop && lines.eq(i+1).attr("begin")) _temp_times.stop = mejs.Utility.convertSMPTEtoSeconds(lines.eq(i+1).attr("begin"));
					if (styles) {
						style = "";
						for (var _style in styles) {
							style += _style + ":" + styles[_style] + ";";					
						}
					}
					if (style) _temp_times.style = style;
					if (_temp_times.start == 0) _temp_times.start = 0.200;
					entries.times.push(_temp_times);
					text = $.trim(lines.eq(i).html()).replace(/(\b(https?|ftp|file):\/\/[-A-Z0-9+&@#\/%?=~_|!:,.;]*[-A-Z0-9+&@#\/%=~_|])/ig, "<a href='$1' target='_blank'>$1</a>");
					entries.text.push(text);
					if (entries.times.start == 0) entries.times.start = 2;
				}
				return entries;
			}
		},
		split2: function (text, regex) {
			// normal version for compliant browsers
			// see below for IE fix
			return text.split(regex);
		}
	};
	
	// test for browsers with bad String.split method.
	if ('x\n\ny'.split(/\n/gi).length != 3) {
		// add super slow IE8 and below version
		mejs.TrackFormatParser.split2 = function(text, regex) {
			var 
				parts = [], 
				chunk = '',
				i;

			for (i=0; i<text.length; i++) {
				chunk += text.substring(i,i+1);
				if (regex.test(chunk)) {
					parts.push(chunk.replace(regex, ''));
					chunk = '';
				}
			}
			parts.push(chunk);
			return parts;
		}
	}	

})(mejs.$);

/*
* ContextMenu Plugin
* 
*
*/

(function($) {

$.extend(mejs.MepDefaults,
	{ 'contextMenuItems': [
		// demo of a fullscreen option
		{ 
			render: function(player) {
				
				// check for fullscreen plugin
				if (typeof player.enterFullScreen == 'undefined')
					return null;
			
				if (player.isFullScreen) {
					return mejs.i18n.t('Turn off Fullscreen');
				} else {
					return mejs.i18n.t('Go Fullscreen');
				}
			},
			click: function(player) {
				if (player.isFullScreen) {
					player.exitFullScreen();
				} else {
					player.enterFullScreen();
				}
			}
		}
		,
		// demo of a mute/unmute button
		{ 
			render: function(player) {
				if (player.media.muted) {
					return mejs.i18n.t('Unmute');
				} else {
					return mejs.i18n.t('Mute');
				}
			},
			click: function(player) {
				if (player.media.muted) {
					player.setMuted(false);
				} else {
					player.setMuted(true);
				}
			}
		},
		// separator
		{
			isSeparator: true
		}
		,
		// demo of simple download video
		{ 
			render: function(player) {
				return mejs.i18n.t('Download Video');
			},
			click: function(player) {
				window.location.href = player.media.currentSrc;
			}
		}	
	]}
);


	$.extend(MediaElementPlayer.prototype, {
		buildcontextmenu: function(player, controls, layers, media) {
			
			// create context menu
			player.contextMenu = $('<div class="mejs-contextmenu"></div>')
								.appendTo($('body'))
								.hide();
			
			// create events for showing context menu
			player.container.bind('contextmenu', function(e) {
				if (player.isContextMenuEnabled) {
					e.preventDefault();
					player.renderContextMenu(e.clientX-1, e.clientY-1);
					return false;
				}
			});
			player.container.bind('click', function() {
				player.contextMenu.hide();
			});	
			player.contextMenu.bind('mouseleave', function() {

				//
				player.startContextMenuTimer();
				
			});		
		},

		cleancontextmenu: function(player) {
			player.contextMenu.remove();
		},
		
		isContextMenuEnabled: true,
		enableContextMenu: function() {
			this.isContextMenuEnabled = true;
		},
		disableContextMenu: function() {
			this.isContextMenuEnabled = false;
		},
		
		contextMenuTimeout: null,
		startContextMenuTimer: function() {
			//
			
			var t = this;
			
			t.killContextMenuTimer();
			
			t.contextMenuTimer = setTimeout(function() {
				t.hideContextMenu();
				t.killContextMenuTimer();
			}, 750);
		},
		killContextMenuTimer: function() {
			var timer = this.contextMenuTimer;
			
			//
			
			if (timer != null) {				
				clearTimeout(timer);
				delete timer;
				timer = null;
			}
		},		
		
		hideContextMenu: function() {
			this.contextMenu.hide();
		},
		
		renderContextMenu: function(x,y) {
			
			// alway re-render the items so that things like "turn fullscreen on" and "turn fullscreen off" are always written correctly
			var t = this,
				html = '',
				items = t.options.contextMenuItems;
			
			for (var i=0, il=items.length; i<il; i++) {
				
				if (items[i].isSeparator) {
					html += '<div class="mejs-contextmenu-separator"></div>';
				} else {
				
					var rendered = items[i].render(t);
				
					// render can return null if the item doesn't need to be used at the moment
					if (rendered != null) {
						html += '<div class="mejs-contextmenu-item" data-itemindex="' + i + '" id="element-' + (Math.random()*1000000) + '">' + rendered + '</div>';
					}
				}
			}
			
			// position and show the context menu
			t.contextMenu
				.empty()
				.append($(html))
				.css({top:y, left:x})
				.show();
				
			// bind events
			t.contextMenu.find('.mejs-contextmenu-item').each(function() {
							
				// which one is this?
				var $dom = $(this),
					itemIndex = parseInt( $dom.data('itemindex'), 10 ),
					item = t.options.contextMenuItems[itemIndex];
				
				// bind extra functionality?
				if (typeof item.show != 'undefined')
					item.show( $dom , t);
				
				// bind click action
				$dom.click(function() {			
					// perform click action
					if (typeof item.click != 'undefined')
						item.click(t);
					
					// close
					t.contextMenu.hide();				
				});				
			});	
			
			// stop the controls from hiding
			setTimeout(function() {
				t.killControlsTimer('rev3');	
			}, 100);
						
		}
	});
	
})(mejs.$);
/**
 * Postroll plugin
 */
(function($) {

	$.extend(mejs.MepDefaults, {
		postrollCloseText: mejs.i18n.t('Close')
	});

	// Postroll
	$.extend(MediaElementPlayer.prototype, {
		buildpostroll: function(player, controls, layers, media) {
			var
				t = this,
				postrollLink = t.container.find('link[rel="postroll"]').attr('href');

			if (typeof postrollLink !== 'undefined') {
				player.postroll =
					$('<div class="mejs-postroll-layer mejs-layer"><a class="mejs-postroll-close" onclick="$(this).parent().hide();return false;">' + t.options.postrollCloseText + '</a><div class="mejs-postroll-layer-content"></div></div>').prependTo(layers).hide();

				t.media.addEventListener('ended', function (e) {
					$.ajax({
						dataType: 'html',
						url: postrollLink,
						success: function (data, textStatus) {
							layers.find('.mejs-postroll-layer-content').html(data);
						}
					});
					player.postroll.show();
				}, false);
			}
		}
	});

})(mejs.$);


//#region Variables
var isLiveSite = true;
var ECommWebShopShippingItem = 0;
var adCount = 0;
var timeCount = 0;
var imageScrollingInterval = 3000;
var imageScrollingSpeed = 600;
var imageScrollingAnimation = "slide";
var imageScrollingLoop = true;
var imageScrolling = false;
var numAds = 0;
var switchDelay = 0;
var commitDelay = 0;
var adverts = new Array();
var emailPopup;
var companyID = "0";
var brandID = "0";
var pageID = "0";
var blogID = "0";
var shopID = "0";
var siteID = "0";
var shopSaleID = "0";
var domain = "";
var videoModalPanel;
var videoPlayerMainPanel;
var videoTop;
var videoLeft;
var videoButton;
var newMessagePanel;
var emailModalPanel;
var modalPanel2;
var editPanel2Wrapper;
var editPanel2Inner;
var modalPanel3;
var editPanel3Wrapper;
var editPanel3Inner;
var useVat;
var showVat;
var centerX;
var centerY;
var mouseOver = false;
var loading = false;
var navDir = "";
var navRoot;
var navFloat = "left";
var basketPanel;
var ecomFilterPanel;
var imageViewerModal;
var scrollClass = "darkScroll";
var breadCrumbs = "";
var ecomProductsPanel;
var zoomWidth = "0";
var zoomHeight = "0";
var ecomProductsInner;
var ecomProductsSize = "";
var ecomOthersPanel;
var rowsToShow = "";
var pagesWidgetArray = new Array();
var widgetParamArray = new Array();
var preFilters = "";
var drdFilters = "";
var drdOrder = "";
var drdIndex = 0;
var cusFilters = new Array();
var specialsFilter = "";
var isSecureLogin = false;
var variationID = "0";
var products = [{ productID: 0, currentVariation: { variationID: 0 } }];
var currProduct;
var currImageID = "0";
var advNavGroupID = 0;
var pageIndex = 1;
var ecomSuggestedArray = new Array();
var ecomPromotionsArray = new Array();
var ecomIframesArray = new Array();
var isMobileDevice = false;
var isTouchScreen = false;
var isAdvNav = false;
var userAgent = "";
var videoData = "";
var fileData = "";
var urlLink = "";
var vipid = "";
var windowOver = 0;
var articleContElem;
var setAdvNavTitle = false;
var setAdvNavDesc = false;
var advNavImgPanel;
var advNavTitlePanel;
var advNavDescPanel;
var videoPlayers = new Array();
var optionals = new Array();
var firstClick = "";
var ecomTextAnim = "";
var autoSignup = false;
var alwaysSignup = false;
var waitSignup = 0;
var bdyImg = "";
var getBreadcrumbs = false;
var isMobileV2 = false;
var isMultiPack = false;
var multiPackID = 0;
var useCustomSelects = true;
var updateSelects = false;
var gatewayID = 0;
var initContentHeight = -1;
var mpStart = 0;
var mpStop = 0;
var isOutOfStock = false;

//#endregion

/// <reference path="shared_24.js" />

window.onerror = function (message, url, lineNumber) {
    //if (lineNumber > 0) {
    //    if (url != "undefined" && url != "") {
    //        if (url.indexOf('lastpass.js') == -1 && url.indexOf('plusone.js') == -1 && url.indexOf('ga.js') == -1) {
    //            $.post("/admin/Handlers/sendErrorEmail.ashx?d=" + new Date().getTime(), {
    //                msg: message + "<br/><br/>Location = " + window.location.href,
    //                url: url,
    //                line: lineNumber,
    //                brws: window.navigator.userAgent
    //            });
    //        }
    //    }
    //}
    return true;
};

window.onunload = function () { };

$(document).ready(function () {
    if (companyID != "0") {
        bdyImg = $('#body1').css("background-image");
        videoModalPanel = document.getElementById('modalPanel');
        videoPlayerMainPanel = document.getElementById('videoPlayerMainPanel');
        emailModalPanel = document.getElementById('emailModalPanel');
        newMessagePanel = document.getElementById('newMessagePanel');
        modalPanel2 = document.getElementById('modalPanel2');
        editPanel2Wrapper = document.getElementById('editPanel2Wrapper');
        editPanel2Inner = document.getElementById('editPanel2Inner');
        modalPanel3 = document.getElementById('modalPanel3');
        editPanel3Wrapper = document.getElementById('editPanel3Wrapper');
        editPanel3Inner = document.getElementById('editPanel3Inner');
        imageViewerModal = document.getElementById('imageViewerModal');

        var isChrome = navigator.userAgent.toLowerCase().indexOf('chrome') > -1;
        var getBody = false;

        if (shopID != "0") {
            getCookie();
        }
        
        var backColor = $('#content01').css("background-color");
        if (backColor) {
            if (isChrome && backColor.indexOf("rgba") > -1) {
                getBody = true;
            }
            else if (backColor.indexOf("rgb") > -1 || backColor.indexOf("#") > -1) {
                scrollClass = checkBackColour(backColor);
            }
            else {
                getBody = true;
            }
        }
        else {
            getBody = true;
        }
        if (getBody) {
            backColor = $('#body1').css("background-color");
            if (backColor) {
                if (backColor.indexOf("rgb") > -1 || backColor.indexOf("#") > -1) {
                    scrollClass = checkBackColour(backColor);
                }
            }
        }
        if (document.getElementById('lluNavRoot')) {
            var lluMenu = new LLUMenu(document.getElementById('lluNavRoot').parentNode);
        }
        if (isMobileV2) {
            setMobileV2MainMenu();
        }
        if (blogID != "0") {
            showBlogPopup(blogID);
        }
        var getProducts = false;
        var getPromotions = false;
        var setFilters = false;
        var setArticleHeight = false;
        var hideArticleImage = false;
        currProduct = products[0];
        for (var j = 0; j < widgetIDArray.length; j++) {
            if (widgetIDArray[j] != "") {
                var elemToSet = document.getElementById(widgetIDArray[j]);
                if (elemToSet.id) {
                    var elemID = elemToSet.id;
                    if (elemID.indexOf("moveItNav") > -1) {
                        if (getMyAttribute(elemID, 'orient') != "") {
                            navDir = getMyAttribute(elemID, 'orient');
                        }
                    }
                    else if (elemID.indexOf("dragMeVideo") > -1) {
                        setVideoElement(elemID);
                    }
                    else if (elemID.indexOf("dragMeBlog") > -1) {
                        if (scrollClass == null) {
                            var thisColor;
                            $(elemToSet).find(".blogText").each(function () {
                                thisColor = $(this).css("color");
                                return false;
                            });
                            scrollClass = checkScrollColour(thisColor);
                        }
                        document.getElementById(elemID + 'blogWrapper').className = document.getElementById(elemID + 'blogWrapper').className + " " + scrollClass;
                        $("#" + elemID + 'blogWrapper').mCustomScrollbar({ scrollButtons: { enable: true } });
                    }
                    else if (elemID.indexOf("dragMeMainReview") > -1) {
                        if (scrollClass == null) {
                            var thisColor;
                            $(elemToSet).find(".reviewMainText").each(function () {
                                thisColor = $(this).css("color");
                                return false;
                            });
                            if (thisColor) {
                                scrollClass = checkScrollColour(thisColor);
                            }
                        }
                        document.getElementById(elemID + 'reviewsWrapper').className = document.getElementById(elemID + 'reviewsWrapper').className + " " + scrollClass;
                        $("#" + elemID + 'reviewsWrapper').mCustomScrollbar({ scrollButtons: { enable: true } });
                    }
                    else if (elemID.indexOf("dragMeInput") > -1 || elemID.indexOf("moveItInput") > -1) {
                        var subPanel = elemToSet.firstChild;
                        if (subPanel) {
                            var divs = subPanel.getElementsByTagName("div");
                            for (var k = 0; k < divs.length; k++) {
                                divs[k].style.cursor = "";
                            }
                            var formBtnText = getMyAttribute(elemID, "btntext");
                            $(elemToSet).find('.formButton').each(function () {
                                this.value = formBtnText;
                            });
                            var frames = elemToSet.getElementsByTagName("iframe");
                            for (var ifr = 0; ifr < frames.length; ifr++) {
                                var frame = frames[ifr];
                                $(frame.parentNode).find('.formUpload').each(function () {
                                    this.style.visibility = "hidden";
                                    frame.style.position = "absolute";
                                    var pos = this.previousSibling.getAttribute("pos");
                                    if (pos == "left") {
                                        frame.style.top = "0px";
                                        frame.style.right = "0px";
                                    }
                                    else if (pos == "right") {
                                        frame.style.top = "0px";
                                        frame.style.left = "0px";
                                    }
                                    else {
                                        frame.style.bottom = "0px";
                                        frame.style.left = "0px";
                                    }
                                    frame.style.width = this.style.width;
                                    frame.style.height = this.style.height;
                                    frame.style.display = "inline";
                                    frame.src = "/fileUpload.aspx?compid=" + companyID + "&siteid=" + siteID + "&w=" + this.style.width + "&h=" + this.style.height + "&btntext=" + this.value + "&btnimg=" + this.style.backgroundImage + "&fileopts=" + this.parentNode.getAttribute("fileopts");
                                });
                            }
                        }
                        if (shopSaleID != "0") {
                            $(elemToSet).find('.formLabel').each(function () {
                                var tst = this.innerHTML.replace(/ /g, "").toLowerCase();
                                if (tst.indexOf("orderid") > -1) {
                                    $(this).parent().find('.formTextBox').each(function () {
                                        $(this).val(shopSaleID);
                                    })
                                }
                            });
                        }
                    }
                    else if (elemID.indexOf("dragMeAdvNavTitle") > -1) {
                        setAdvNavTitle = true;
                        advNavTitlePanel = elemToSet;
                    }
                    else if (elemID.indexOf("dragMeAdvNavDesc") > -1) {
                        setAdvNavDesc = true;
                        advNavDescPanel = elemToSet;
                    }
                    else if (elemID.indexOf("dragMeEcomProducts") > -1) {
                        ecomProductsPanel = elemToSet;
                        ecomProductsInner = document.getElementById(elemID + 'ecomProductsInner');
                        ecomProductsSize = getMyAttribute(elemID, "w") + "^" + getMyAttribute(elemID, "h");
                        rowsToShow = getMyAttribute(elemID, "rows");
                        ecomTextAnim = getMyAttribute(elemID, "animtext") + "," + getMyAttribute(elemID, "animcolour") + "," + getMyAttribute(elemID, "animopac");
                        getProducts = true;
                    }
                    else if (elemID.indexOf("dragMeEcomBreadCrumbs") > -1) {
                        breadCrumbs = getMyAttribute(elemID, "breadCrumbs");
                        getBreadcrumbs = true;
                    }
                    else if (elemID.indexOf("dragMeEcomPromotions") > -1) {
                        ecomPromotionsArray.push(elemToSet);
                        getPromotions = true;
                    }
                    else if (elemID.indexOf("dragMeEcomFilters") > -1) {
                        ecomFilterPanel = elemToSet;
                    }
                    else if (elemID.indexOf("dragMeEcomIframes") > -1) {
                        ecomIframesArray.push(elemToSet);
                    }
                    else if (elemID.indexOf("dragMeEcomLinked") == 0 || elemID.indexOf("dragMeEcomOthers") == 0) {
                        elemToSet.style.overflow = "hidden";
                        if (elemID.indexOf("dragMeEcomLinked") == 0) {
                            ecomSuggestedArray.push(elemToSet);
                        }
                        else {
                            ecomOthersPanel = elemToSet;
                        }
                    }
                    else if (elemID.indexOf("dragMeEcomList") > -1) {
                        if (getMyAttribute(elemID, "ecomdir") == "ver") {
                            if (elemToSet.firstChild) {
                                elemToSet.firstChild.className = elemToSet.firstChild.className + " " + scrollClass;
                                $(elemToSet.firstChild).mCustomScrollbar({ scrollButtons: { enable: true } });
                            }
                        }
                    }
                    else if (elemID.indexOf("dragMeEcomItemOptional") > -1) {
                        optionals.push({ ID: elemID, Type: getMyAttribute(elemID, "tag") });
                    }
                    else if (elemID.indexOf("dragMeEcomDescription") > -1) {
                        if (isMobileV2) {
                            updateDescriptionHeight();
                        }
                        else {
                            elemToSet.className = scrollClass;
                            $(elemToSet).mCustomScrollbar({ scrollButtons: { enable: true } });
                        }
                    }
                    else if (elemID.indexOf("dragMeEcomExtraDescription") > -1) {
                        if (isMobileV2) {
                            updateExtarDescriptionHeight();
                        }
                        else {
                            elemToSet.className = scrollClass;
                            $(elemToSet).mCustomScrollbar({ scrollButtons: { enable: true } });
                        }
                    }
                    else if (elemID.indexOf("dragMeEcomPages") > -1) {
                        pagesWidgetArray.push(elemToSet);
                    }
                    else if (elemID.indexOf("dragMeEcomAutoFilters") > -1) {
                    }
                    else if (elemID.indexOf("dragMeEcomMainImage") > -1) {
                        if (!isMobileV2) {
                            if (getMyAttribute(elemID, 'zwidth')) {
                                zoomWidth = getMyAttribute(elemID, 'zwidth');
                                zoomHeight = getMyAttribute(elemID, 'zheight');
                            }
                            if (elemToSet.innerHTML.indexOf("zoomToolPanel") > -1) {
                                $(document).mousemove(function (e) {
                                    var sourceElem = e.target || e.srcElement;
                                    if (sourceElem.id) {
                                        if (sourceElem.id.indexOf("mainEcomImage") == 0 || sourceElem.id.indexOf("zoomToolPanel") == 0) {
                                            updateImageZoom(e, sourceElem.id.split('_')[1]);
                                        }
                                    }
                                });
                            }
                        }
                    }
                    else if (elemID.indexOf("dragMePassword") > -1) {
                        document.getElementById('container').style.height = "0px";
                        showPageUserLogin(elemToSet);
                    }
                    else if (elemID.indexOf("dragMeEcomSlideShow") > -1) {
                        getEcomSlideshow(elemToSet);
                    }
                    else if (elemID.indexOf("dragMeEcomNewSlideShow") > -1 || elemID.indexOf("moveItEcomNewSlideShow") > -1) {
                        var btnPos = getMyAttribute(elemID, "btnpos");
                        $(elemToSet).find('.ecomSliderTopButtonPanel').each(function () {
                            if (btnPos == "left") {
                                this.style.left = "0px";
                            }
                            else if (btnPos == "right") {
                                this.style.left = (elemToSet.offsetWidth - this.offsetWidth) + "px";
                            }
                            else {
                                this.style.left = ((elemToSet.offsetWidth - this.offsetWidth) / 2) + "px";
                            }
                        });
                        $(elemToSet).find('.slideShow').each(function () {
                            $(this).flexslider({
                                animation: getMyAttribute(elemID, "anim"),
                                directionNav: getMyAttribute(elemID, "nav") == "1",
                                controlNav: getMyAttribute(elemID, "cntrls") == "1",
                                slideDirection: "horizontal",
                                slideshowSpeed: getMyAttribute(elemID, "delay"),
                                animationSpeed: getMyAttribute(elemID, "speed"),
                                pauseOnHover: true,
                                autoStart: true,
                                animationLoop: true
                            });
                        });
                        $(elemToSet).find('.ecomSliderWrapper').each(function () {
                            this.style.visibility = "visible";
                        });
                    }
                    else if (elemID.indexOf("dragMeEcomTabPanel") > -1) {
                        $(elemToSet).find('.ecomTabsWrapper').each(function () {
                            var height = (this.parentNode.offsetHeight - this.offsetHeight);
                            $(elemToSet).find('.ecomTabPanelsWrapper').each(function () {
                                this.style.height = height + "px";
                            });
                        });
                        hasTabs = true;
                    }
                    else if (elemID.indexOf("EcomNav") > -1) {
                        var navdir = getMyAttribute(elemID, 'navdir');
                        if (navdir == "") {
                            navdir = "hor";
                        }
                        var navori = getMyAttribute(elemID, 'navori');
                        if (navori == "") {
                            navori = "hor";
                        }
                        var navanim = "no";
                        var navspeed = "500";
                        if (getMyAttribute(elemID, 'navanim') == "yes") {
                            navanim = "yes"
                            navspeed = getMyAttribute(elemID, 'navspeed');
                        }
                        setEcomMenu(elemToSet, navdir, navori, navanim, navspeed);
                    }
                    else if (elemID.indexOf("moveItSearch") > -1 || elemID.indexOf("dragMeSearch") > -1) {
                        $(elemToSet).find('.ecomSearchInput').each(function () {
                            var wtorem = 0;
                            try {
                                wtorem = parseInt($(this).css('paddingLeft').replace("px", ""), 10) + parseInt($(this).css('paddingRight').replace("px", ""), 10) +
                                            parseInt($(this).css('borderLeftWidth').replace("px", ""), 10) + parseInt($(this).css('borderRightWidth').replace("px", ""), 10);
                            }
                            catch (e) { }
                            var htorem = 0;
                            try {
                                htorem = parseInt($(this).css('paddingTop').replace("px", ""), 10) + parseInt($(this).css('paddingBottom').replace("px", ""), 10) +
                                        parseInt($(this).css('borderTopWidth').replace("px", ""), 10) + parseInt($(this).css('borderBottomWidth').replace("px", ""), 10);
                            }
                            catch (e) { }
                            this.style.width = (elemToSet.offsetWidth - wtorem) + "px";
                            this.style.height = (elemToSet.offsetHeight - htorem) + "px";
                        });
                        var pos = getMyAttribute(elemID, "orient");
                        $(elemToSet).find('.ecomSearchResultPanel').each(function () {
                            if (pos == "dl") {
                                this.style.top = elemToSet.offsetHeight + "px";
                                this.style.right = "0px";
                            }
                            else if (pos == "dr") {
                                this.style.top = elemToSet.offsetHeight + "px";
                                this.style.left = "0px";
                            }
                            else if (pos == "ul") {
                                this.style.bottom = elemToSet.offsetHeight + "px";
                                this.style.right = "0px";
                            }
                            else if (pos == "ur") {
                                this.style.bottom = elemToSet.offsetHeight + "px";
                                this.style.left = "0px";
                            }
                        });
                        $(elemToSet).find('.ecomSearchResultOuterPanel').each(function () {
                            this.className = "ecomSearchResultOuterPanel " + checkBackColour($(this.parentNode).css('backgroundColor'));
                            $(this).mCustomScrollbar({ scrollButtons: { enable: true } });
                        });
                    }
                    else if (elemID.indexOf("moveItPromoTimer") > -1) {
                        updateTimerElements(elemToSet);
                    }
                    else if (elemID.indexOf("dragMeAudio") > -1) {
                        $('#' + elemID + 'Player').mediaelementplayer({
                            audioWidth: elemToSet.offsetWidth
                        });
                    }
                    else if (elemID.indexOf("dragMeEcomBasket") == 0 || elemID.indexOf("moveItEcomBasket") == 0) {
                        basketPanel = elemToSet;
                    }
                    else if (elemID.indexOf("dragMeEcomOptionsSelect") > -1) {
                        $(elemToSet).find('.ddOpts').each(function () {
                            drdFilters = this.innerHTML.split(':')[1];
                            drdOrder = this.innerHTML.split(':')[3];
                        });
                        if (useCustomSelects) {
                            $(elemToSet).find('.ecomProductItemDropDown').each(function () {
                                $(this).selectbox({
                                    theme: "Ecom",
                                    height: parseInt(this.style.height.replace("px", ""), 10),
                                    onChange: function (val, inst, cls) {
                                        if (!loading) {
                                            updateVariationDropDowns(inst.input[0], currProduct.productID);
                                        }
                                    },
                                });
                                if (this.disabled) {
                                    $(this).selectbox('disable');
                                }
                            });
                        }
                        if (isMobileV2) {
                            updateSelects = true;
                        }
                    }
                    else if (elemID.indexOf("dragMeSlideShow") > -1 || elemID.indexOf("moveItSlideShow") > -1) {
                        var frame = elemToSet.getElementsByTagName("iframe")[0];
                        var frameSrc = "/admin/slideShowPage.aspx?type=rotator" +
                                        "&elemid=" + elemID +
                                        "&nav=" + getMyAttribute(elemID, "nav") +
                                        "&rotSkin=" + getMyAttribute(elemID, "rotskin") +
                                        "&trans=" + getMyAttribute(elemID, "trans") +
                                        "&speed=" + getMyAttribute(elemID, "speed") +
                                        "&pause=" + getMyAttribute(elemID, "pause") +
                                        "&titleOpt=" + getMyAttribute(elemID, "titleOpt") +
                                        "&textOpt=" + getMyAttribute(elemID, "textOpt") +
                                        "&titleOn=" + getMyAttribute(elemID, "titleOn") +
                                        "&textOn=" + getMyAttribute(elemID, "textOn") +
                                        "&bodyback=" + getMyAttribute(elemID, "bodyback") +
                                        "&fullwidth=" + getMyAttribute(elemID, "fullwidth");

                        if (getMyAttribute(elemID, "lnks") != "") {
                            frameSrc += "&lnks=" + escape(getMyAttribute(elemID, "lnks"));
                        }
                        if (getMyAttribute(elemID, "tgts") != "") {
                            frameSrc += "&tgts=" + escape(getMyAttribute(elemID, "tgts"));
                        }
                        if (getMyAttribute(elemID, "bodyback") == "1" || getMyAttribute(elemID, "fullwidth") == "1") {
                            frameSrc += "&width=" + getMyAttribute(elemID, "width") +
                                        "&height=" + getMyAttribute(elemID, "height");

                            elemToSet.style.height = getMyAttribute(elemID, "height") + "px";
                        }
                        else {
                            frameSrc += "&width=" + frame.getAttribute("width") +
                                        "&height=" + frame.getAttribute("height");
                        }
                        frameSrc += "&ids=" + getMyAttribute(elemID, "ids") +
                                    "&sid=" + siteID +
                                    "&cid=" + companyID +
                                    "&tag=live" +
                                    "&d=" + new Date().getTime();

                        frame.src = frameSrc;
                    }
                    else if (elemID.indexOf("dragMeMagazineFeatured") == 0) {
                        elemToSet.style.overflow = "hidden";
                        magFeatElem = elemToSet;
                        getMagazineArticles("features");
                    }
                    else if (elemID.indexOf("dragMeMagazineArticles") == 0) {
                        magArtsElem = elemToSet;
                        artsToShow = getMyAttribute(elemID, "rows");
                        getMagazineArticles("articles");
                    }
                    else if (elemID.indexOf("dragMeMagazineArchive") == 0) {
                        getMagazineArchive(elemToSet);
                    }
                    else if (elemID.indexOf("dragMeMagazineCategory") == 0) {
                        getMagazineCategories(elemToSet);
                    }
                    else if (elemID.indexOf("dragMeMagazinePages") == 0) {
                        pagesWidgetArray.push(elemToSet);
                    }
                    else if (elemID.indexOf("dragMeArticleContent") == 0) {
                        $(elemToSet).find('img').each(function () {
                            if (this.offsetWidth > elemToSet.offsetWidth) {
                                this.width = elemToSet.offsetWidth;
                            }
                        });
                        setArticleHeight = true;
                        articleContElem = elemToSet;
                    }
                    else if (elemID.indexOf("dragMeArticleImage") == 0) {
                        if (elemToSet.innerHTML == "") {
                            advNavImgPanel = elemToSet;
                            hideArticleImage = true
                        }
                    }
                    else if (elemID.indexOf("dragMeEcomSignup") == 0) {
                        autoSignup = (getMyAttribute(elemID, "autopop") == "1");
                        alwaysSignup = (getMyAttribute(elemID, "alwayspop") == "1");
                        if (getMyAttribute(elemID, "waitpop") != "") {
                            waitSignup = parseInt(getMyAttribute(elemID, "waitpop"), 10);
                        }
                    }
                    else if (elemID.indexOf("dragMeValidation") == 0) {
                        showValidationModal();
                    }
                }
            }
        }
        if (isMobileV2) {
            if (document.getElementById('mobiV2BasketPanel')) {
                if (document.getElementById('mobiV2SearchPanel')) {
                    $('#mobiV2SearchPanel').find('.ecomSearchInput').each(function () {
                        this.style.height = $(this).css("lineHeight");
                    });
                    document.getElementById('mobiV2SearchPanel').innerHTML = "<input type=\"text\" class=\"ecomSearchInput\" value=\"Search...\" onkeyup=\"setSearchTimer(this);\" onblur=\"setTextField(this, 'Search...');\" onfocus=\"setTextField(this, 'Search...');\" />" +
                    "<div id=\"SearchResults\" class=\"ecomSearchResultPanel\" style=\"visibility:hidden;\"><div id=\"SearchResultsOuter\" class=\"ecomSearchResultOuterPanel\"><div id=\"SearchResultsInner\" class=\"ecomSearchResultInnerPanel\"></div></div></div>";
                }
            }
            if (document.getElementById('mobiV2MainEmailPanel')) {
                document.getElementById('mobiV2MainEmailPanel').innerHTML = "<div class=\"innerTextElement\">" +
                                                                                "<div class=\"innerTextElement\" style=\"margin-top:10px;\">" +
                                                                                    "<div class=\"ecomOptionTitleMobi\" style=\"margin-left:20px;line-height:110px;\">SEND EMAIL</div>" +
                                                                                    "<input class=\"ecomOptionContinueButtonMobi\" type=\"button\" value=\"\" onclick=\"showMobiV2Panel('mobiV2MainEmailPanel');\" style='top:2px;left:-20px;' />" +
                                                                                "</div>" +
                                                                                "<div class=\"innerTextElement\" style=\"margin-top:10px;\">" +
                                                                                    "<div class=\"ecomOptionLabelMobi\" style=\"width:260px; margin-left:20px;\">Name</div>" +
                                                                                    "<input id=\"namesInput\" class=\"ecomOptionInputMobi\" type=\"text\" value='Your Name or Company Name' onfocus=\"setTextBox2(this, 'clear');\" onblur=\"setTextBox2(this, 'Your Name or Company Name');\" style=\"width:680px;\" />" +
                                                                                "</div>" +
                                                                                "<div class=\"innerTextElement\" style=\"margin-top:10px;\">" +
                                                                                    "<div class=\"ecomOptionLabelMobi\" style=\"width:260px; margin-left:20px;\">Phone</div>" +
                                                                                    "<input id=\"telInput\" class=\"ecomOptionInputMobi\" type=\"text\" value='Your Mobile/Telephone' onfocus=\"setTextBox2(this, 'clear');\" onblur=\"setTextBox2(this, 'Your Mobile/Telephone');\" style=\"width:680px;\" />" +
                                                                                "</div>" +
                                                                                "<div class=\"innerTextElement\" style=\"margin-top:10px;\">" +
                                                                                    "<div class=\"ecomOptionLabelMobi\" style=\"width:260px; margin-left:20px;\">Email</div>" +
                                                                                    "<input id=\"addInput\" class=\"ecomOptionInputMobi\" type=\"text\" value='Your Email Address' onfocus=\"setTextBox2(this, 'clear');\" onblur=\"setTextBox2(this, 'Your Email Address');\" style=\"width:680px;\" />" +
                                                                                "</div>" +
                                                                                "<div class=\"innerTextElement\" style=\"margin-top:10px;\">" +
                                                                                    "<div class=\"ecomOptionLabelMobi\" style=\"width:260px; margin-left:20px;\">Message</div>" +
                                                                                    "<textarea id=\"messageInput\" class=\"ecomOptionInputMobi\" rows=\"3\" cols=\"6\" type=\"text\" onfocus=\"setTextBox2(this, 'clear');\" onblur=\"setTextBox2(this, 'Your Message');\" style=\"width:660px;height:200px;padding:10px;text-indent:0px;overflow:auto;\">Your Message</textarea>" +
                                                                                "</div>" +
                                                                                "<div class=\"innerTextElement\">" +
                                                                                    "<input class=\"mobiV2SendEmailButton\" type=\"button\" value=\"\" style=\"margin:20px;\" onclick=\"sendMessage();\" />" +
                                                                                "</div>" +
                                                                            "</div>";
            }
        }
        if (isMultiPack) {
            updateWidgetHeight("multiPack");
        }
        if (updateSelects) {
            updateWidgetHeight("selects");
        }
        if (hideArticleImage) {
            updateWidgetHeight("advnavimage");
        }
        if (setAdvNavTitle) {
            updateWidgetHeight("advnavtitle");
        }
        if (setAdvNavDesc) {
            updateWidgetHeight("advnavdesc");
        }
        if (getProducts) {
            var hash = window.location.hash.replace("#", "");
            if (hash.indexOf("_") > -1) {
                getHashFilters(hash);
            }
            else {
                if (isAdvNav) {
                    if (ecomProductsInner.innerHTML == "No products available at this point." || ecomProductsInner.innerHTML == "") {
                        updateProducts();
                    }
                    else {
                        updatePreLoadProducts();
                    }
                }
                else {
                    updateProducts();
                }
            }
        }
        if (getPromotions) {
            getEcomPromotions();
        }
        if (document.getElementById('reviewSubmitTitleInput')) {
            document.getElementById('reviewSubmitTitleInput').value = "Enter the title of your review";
            document.getElementById('reviewSubmitTitleInput').onblur = function () { setTextBox(this, "Enter the title of your review"); };
            document.getElementById('reviewSubmitTitleInput').onclick = function () { setTextBox(this, "clear"); };
            document.getElementById('reviewSubmitCommentsInput').value = "Enter your comments here";
            document.getElementById('reviewSubmitCommentsInput').onblur = function () { setTextBox(this, "Enter your comments here"); };
            document.getElementById('reviewSubmitCommentsInput').onclick = function () { setTextBox(this, "clear"); };

            document.getElementById('reviewSubmitEmailInput').value = "Your email address (required)";
            document.getElementById('reviewSubmitEmailInput').onblur = function () { setTextBox(this, "Your email address (required)"); };
            document.getElementById('reviewSubmitEmailInput').onclick = function () { setTextBox(this, "clear"); };
        }
        if (document.body.getAttribute('isprev')) {
            parent.setPreviewPosition(document.getElementById('container').offsetHeight);
        }
        setTimeout('removeSkype();', 1000);
        $(document).mousedown(function (e) {
            var sourceElem = e.target || e.srcElement;
            if (sourceElem.className) {
                if (sourceElem.className.indexOf("ecomSearch") == -1 && sourceElem.className.indexOf("mCSB_") == -1) {
                    $(document).find('.ecomSearchResultPanel').each(function () {
                        this.style.visibility = "hidden";
                    });
                }
                if (sourceElem.className.indexOf("ecomOptFilter") == -1 && sourceElem.className.indexOf("ecomFilterCheckBox") == -1 && sourceElem.className.indexOf("innerAutoFilters") == -1) {
                    hideAutoFilters();
                }
            }
            else {
                $(document).find('.ecomSearchResultPanel').each(function () {
                    this.style.visibility = "hidden";
                });
                hideAutoFilters();
            }
        });
        if (setArticleHeight) {
            setTimeout("updateWidgetHeight('article');", 1000);
        }
        if (isMobileV2) {
            $("#content01").click(function (e) {
                if (currV2MobiPanel != "mobiV2MainEmailPanel") {
                    showMobiV2Panel("");
                }
            });
            $("#footer").click(function (e) {
                if (currV2MobiPanel != "mobiV2MainEmailPanel") {
                    showMobiV2Panel("");
                }
            });
            setEcomMenu(document.getElementById('mobiV2NavigationPanel'), "ver", "ver", "no", "500");
            $('.mobiMenuRoot').each(function () {
                mobiV2AdvNavRootElem = this;
            });
        }
        window.onresize = function () {
            getWindowOver();
        }
        
        if (currProduct.productID != 0) {
            if (currProduct.currentVariation.variationID != 0) {
                getVariationOtherOptions();
            }
            
            for (var i = 0; i < products.length; i++) {
                if (isMobileV2) {
                    if (isMobileV2) {
                        if (document.getElementById('slideShow_' + products[i].productID)) {
                            $('#slideShow_' + products[i].productID).flexslider({
                                animation: "slide",
                                directionNav: false,
                                controlNav: false,
                                slideDirection: "horizontal",
                                slideshowSpeed: 7000,
                                animationDuration: 600,
                                pauseOnAction: true
                            });
                        }
                    }
                }
                else {
                    setMainEcomImage(products[i].firstImageID, products[i].productID);
                }
            }
        }
        document.getElementById('messageModalText').style.maxHeight = (GetHeight() - 200) + "px";
        setAllAnimatedTextWidgets();
        setMenu();
        if (autoSignup) {
            showSignupModal(false);
        }
        if (getBreadcrumbs) {
            getBreadcrumbTrail();
        }
    }
});

function slideshowIframClicked() {
    $(document).find('.ecomSearchResultPanel').each(function () {
        this.style.visibility = "hidden";
    });
    hideAutoFilters();
}

function getWindowOver() {
    $('.backroundSlideshowIframe').each(function () {
        var id = this.parentNode.id;
        if (getMyAttribute(id, "bodyback") == "1" || getMyAttribute(id, "fullwidth") == "1") {
            windowOver = Math.round((this.offsetWidth - GetWidth()) / 2);
            $(this).contents().find('.leftNav').each(function () {
                this.style.left = (windowOver - 1) + "px";
            });
            $(this).contents().find('.rightNav').each(function () {
                this.style.right = (windowOver - 1) + "px";
            });
        }
    });
}

function getMyAttribute(id, text) {
    var val = "";
    var attrs = new Array();
    for (var i = 0; i < widgetIDArray.length; i++) {
        widgetIDArray[i];
        if (widgetIDArray[i] == id) {
            attrs = widgetParamArray[i].split("**");
        }
    }
    for (var j = 0; j < attrs.length; j++) {
        var tag = attrs[j].split("=")[0];
        if (tag == text) {
            val = attrs[j].split("=")[1];
        }
    }
    return val;
}

function removeSkype() {
    $("span").each(function () {
        if (this.className) {
            if (this.className.indexOf("skype_pnh_container") > -1) {
                $(this).remove();
            }
            if (this.className.indexOf("skype_pnh_print_container") > -1) {
                if (this.childNodes.length > 0) {
                    $(this.childNodes[0]).unwrap();
                }
                else {
                    $(this).remove();
                }
            }
        }
    });
}

function hideSlideshowBackground(elem) {
    if (elem.previousSibling) {
        elem.previousSibling.style.display = "none";
    }
}

function redirectToMobile() {
    var cArray = document.cookie.split(';');
    for (var i = 0; i < cArray.length; i++) {
        if (cArray[i].indexOf("noredirect") > -1) {
            var exdate = new Date();
            exdate.setDate(exdate.getDate() - 1);
            document.cookie = "noredirect=0; expires=" + exdate.toGMTString() + ";";
        }
    }
    // redirect to main plink page
    window.location = window.location;
}

function sendFaceBookSMS() {
    var strURL = "/Handlers/sendFaceBookNotification.ashx";
    $.post(strURL, {
        compID: companyID,
        VIPID: vipid
    });
}

function sendTwitterSMS() {
    var strURL = "/Handlers/sendTwitterClicked.ashx";
    $.post(strURL, {
        compID: companyID,
        VIPID: vipid
    });
}

function goBack() {
    window.location = "/ecomRedirect.aspx?back=1";
}

function setFirstClick(url) {
    if (url) {
        if (firstClick == url) {
            window.location = url;
        }
        else {
            firstClick = url;
        }
    }
}

// #region Video & Audio Players

function showVideoPlayer(file, img, width, height) {
    videoPlayerMainPanel.style.width = width + "px";
    videoPlayerMainPanel.style.height = height + "px";
    videoPlayerMainPanel.style.marginTop = ((GetHeight() - height) / 2) + "px";
    try {
        var strVidElem = "<img style=\"position:absolute;top:0px;left:0px;\" width=\"" + width + "\" height=\"" + height + "\" />" +
                        "<video id=\"videoPlayerPlayer\" width=\"" + width + "\" height=\"" + height + "\" controls=\"controls\">" +
                            "<source type=\"video/mp4\" src=\"" + file + "\" />" +
                            "<object width=\"" + width + "\" height=\"" + height + "\" type=\"application/x-shockwave-flash\" data=\"/Scripts/mediaPlayer/flashmediaelement_01.swf\">" +
                                "<param name=\"movie\" value=\"/Scripts/mediaPlayer/flashmediaelement_01.swf\" />" +
                                "<param name=\"flashvars\" value=\"controls=true&file=" + file + "\" />" +
                                "<img src=\"" + img + "\" width=\"" + width + "\" height=\"" + height + "\" title=\"No video playback capabilities\" />" +
                            "</object>" +
                        "</video>";

        document.getElementById('videoPlayer').innerHTML = strVidElem;

        setVideoElement('videoPlayer', true, false, true);

    }
    catch (e) {
        alert(e);
    }

    showModal();
}

    function showModal() {
        videoModalPanel.style.visibility = "visible";
        videoPlayerMainPanel.style.visibility = "visible";
    }

    function closeModal() {
        videoPlayerMainPanel.style.visibility = "hidden";
        videoModalPanel.style.visibility = "hidden";
        document.getElementById('videoPlayer').innerHTML = "";
    }

    function switchAudioTrack(id, url) {
        document.getElementById(id).src = url;
        document.getElementById(id).play();
    }

    function setVideoElement(id, cn, lp, at) {
        var controls = true;
        var loop = false;
        var auto = false;
        if (cn) { controls = cn; }
        if (cn) { loop = lp; }
        if (cn) { auto = at; }
        if (getMyAttribute(id, 'bodyback') == '1') {
            controls = false;
            auto = true;
        }
        if (getMyAttribute(id, 'loop') == '1') {
            loop = true;
        }
        if (getMyAttribute(id, 'auto') == '1') {
            auto = true;
        }
        $('#' + id + 'Player').mediaelementplayer({
            loop: loop,
            autoPlay: auto,
            controlsVisible: controls
        });
    }

    // #endregion

//#region Page user Login

function showPageUserLogin(elem) {
    ShowModal3();
    isSecureLogin = false;
    var panel = "<div class=\"pageUserLoginBackPanel\">" +
                    "<div id=\"modalMainPanel\">" +
                        "<div class=\"pageUserLoginMainLabel\">Please login to view this page</div>" +
                        "<div class=\"modalItemsPanel\">" +
                            "<div class=\"pageUserLoginLabel\" style=\"width:100px;\">Username</div>" +
                            "<input id=\"pageUserUsernameInput\" type=\"text\" class=\"pageUserLoginInput\" value=\"Username\" style=\"width:200px;\" onfocus=\"setText(this, 'Username');\" onblur=\"setText(this, 'Username');\" onkeydown=\"tryLogin(event);\" />" +
                        "</div>" +
                        "<div class=\"modalItemsPanel\">" +
                            "<div class=\"pageUserLoginLabel\" style=\"width:100px;\">Password</div>" +
                            "<input id=\"pageUserPasswordInput\" type=\"password\" class=\"pageUserLoginInput\" value=\"Password\" style=\"width:200px;\" onfocus=\"setText(this, 'Password');\" onblur=\"setText(this, 'Password');\" onkeydown=\"tryLogin(event);\" />" +
                        "</div>" +
                        "<div class=\"modalItemsPanel\">" +
                            "<input class=\"pageUserCancelButton\" type=\"button\" value=\"" + getMyAttribute(elem.id, "cancelbtntext") + "\" onclick=\"window.location = '\home.html'\" />" +
                            "<input class=\"pageUserLoginButton\" type=\"button\" value=\"" + getMyAttribute(elem.id, "loginbtntext") + "\" onclick=\"pageUserLogin();\" />" +
                        "</div>" +
                    "</div>" +
                "</div>";

    editPanel3Inner.innerHTML = panel;
    setEditPanel3Position();
}

function pageUserLogin() {
    $.post("/Handlers/pageUserLogin.ashx?d=" + new Date().getTime(), {
        pid: pageID,
        uname: document.getElementById('pageUserUsernameInput').value,
        pword: document.getElementById('pageUserPasswordInput').value
    }, function (data) {
        if (data == "None") {
            showPopupMessage("You do not have access to this page", "OK");
        }
        else if (data == "-1") {
            showPopupMessage("Incorrect Username", "OK");
        }
        else if (data == "0") {
            showPopupMessage("Incorrect Password", "OK");
        }
        else if (data == "1") {
            document.getElementById('container').style.height = "";
            HideModal3();
        }
    });
}

function setText(element, text) {
    var tempText = element.value;
    if (tempText == text) {
        element.value = "";
    }
    else {
        if (element.value == "") {
            element.value = text;
        }
    }
}

function tryLogin(e) {
    var keycode;
    if (window.event) keycode = window.event.keyCode;
    else if (e) keycode = e.which;
    if (keycode == 13) {
        if (isSecureLogin) {
            secureLogin();
        }
        else {
            pageUserLogin();
        }
    }
}

//#endregion

//#region New Secure Login

function showSecureLoginPanel(elem) {
    ShowModal3();
    isSecureLogin = true;
    if (getMyAttribute(elem.id, "trade") == "1") {
        isSecureLogin = false;
    }
    var panel = "<div class=\"pageUserLoginBackPanel\">" +
                    "<div id=\"modalMainPanel\">" +
                        "<div class=\"pageUserLoginMainLabel\">Please enter your login details</div>" +
                        "<div class=\"modalItemsPanel\">" +
                            "<div class=\"pageUserLoginLabel\" style=\"width:100px;\">Username</div>" +
                            "<input id=\"pageUserUsernameInput\" type=\"text\" class=\"pageUserLoginInput\" value=\"Username\" style=\"width:200px;\" onfocus=\"setText(this, 'Username');\" onblur=\"setText(this, 'Username');\" onkeydown=\"tryLogin(event);\" />" +
                        "</div>" +
                        "<div class=\"modalItemsPanel\">" +
                            "<div class=\"pageUserLoginLabel\" style=\"width:100px;\">Password</div>" +
                            "<input id=\"pageUserPasswordInput\" type=\"password\" class=\"pageUserLoginInput\" value=\"Password\" style=\"width:200px;\" onfocus=\"setText(this, 'Password');\" onblur=\"setText(this, 'Password');\" onkeydown=\"tryLogin(event);\" />" +
                        "</div>" +
                        "<div class=\"modalItemsPanel\">" +
                            "<input class=\"pageUserCancelButton\" type=\"button\" value=\"" + getMyAttribute(elem.id, "cancelbtntext") + "\" onclick=\"HideModal3();\" />" +
                            "<input class=\"pageUserLoginButton\" type=\"button\" value=\"" + getMyAttribute(elem.id, "loginbtntext") + "\" onclick=\"secureLogin();\" />" +
                        "</div>" +
                    "</div>" +
                "</div>";

    editPanel3Inner.innerHTML = panel;
    setEditPanel3Position();
}

function secureLogin() {
    $.post("/Handlers/secureUserLogin.ashx?d=" + new Date().getTime(), {
        compid: companyID,
        shopid: shopID,
        uname: document.getElementById('pageUserUsernameInput').value,
        pword: document.getElementById('pageUserPasswordInput').value,
        secure: isSecureLogin
    }, function (data) {
        if (data == "None") {
            showPopupMessage("You do not have access to this page", "OK");
        }
        else if (data == "-1") {
            showPopupMessage("Incorrect Username", "OK");
        }
        else if (data == "0") {
            showPopupMessage("Incorrect Password", "OK");
        }
        else {
            if (isSecureLogin) {
                showLoadingPanel("redirecting...");
                window.location = '/ecomRedirect.aspx?secure=1&uid=' + data + "&pid=" + pageID;
            }
            else {
                tradeUserID = data.split('^^')[0];
                shipCountryID = data.split('^^')[2];
                getCookie();
                showPopupMessage("Logged in as<br/><br/>" + data.split('^^')[1], "OK");
                HideModal3();
            }
        }
    });
}

function doSecureLogout() {
    window.location = '/ecomRedirect.aspx?secure=0';
}

//#endregion

//#region Form

var dataToSend = "";
var currentInputPanel;
var sendingMessage = false;
var sendingReview = false;
var filesToUpload = "";

function validateData(clickedButton) {
    if (!sendingMessage) {
        var errorMessage = "The fields highlighted in red";
        sendingMessage = true;
        showLoadingPanel("Sending...");
        var bValid = true;
        var contentCheck = new Array();
        dataToSend = "";
        var found = false;
        currentInputPanel = clickedButton;
        while (!found) {
            currentInputPanel = currentInputPanel.parentNode;
            if (currentInputPanel.id) {
                if (currentInputPanel.id.indexOf("dragMeInput") == 0 || currentInputPanel.id.indexOf("moveItInput") == 0) {
                    found = true;
                }
            }
        }

        if (found) {
            var divs = currentInputPanel.childNodes;
            for (var i = 0; i < divs.length; i++) {
                var type = divs[i].getAttribute("inputtype");
                if (type == "textBox") {
                    $(divs[i]).find('.formTextBox').each(function () {
                        var isCompulsory = false;
                        var inputPanel = this.parentNode;
                        var labelField;
                        var inputField = this;
                        $(inputPanel).find('.formLabel').each(function () {
                            labelField = this;
                        });
                        $(inputPanel).find('.formCompStar').each(function () {
                            isCompulsory = this.style.display == "inline";
                        });
                        if (isCompulsory) {
                            if (inputField.value == "") {
                                bValid = false;
                                errorMessage += "<br/>at least one text box need to be completed";
                                inputPanel.style.backgroundColor = "#fbcce8";
                            }
                        }
                        if (this.getAttribute("valid")) {
                            if (this.getAttribute("valid") == "numbers") {
                                if (validateNumbers(this)) {
                                    dataToSend += labelField.innerHTML + "--" + this.value + "--Numbers__";
                                    contentCheck.push("data");
                                }
                                else {
                                    bValid = false;
                                    inputPanel.style.backgroundColor = "#fbcce8";
                                    errorMessage += "<br/>at least one is not numeric!";
                                }
                            }
                            else if (inputField.getAttribute("valid") == "email") {
                                if (validateFormEmail(inputField)) {
                                    dataToSend += labelField.innerHTML + "--" + inputField.value + "--Email__";
                                    contentCheck.push("data");
                                }
                                else {
                                    bValid = false;
                                    inputPanel.style.backgroundColor = "#fbcce8";
                                    errorMessage += "<br/>at least one needs a valid email address!";
                                }
                            }
                            else if (inputField.getAttribute("valid") == "postcode") {
                                if (validatePostcode(inputField)) {
                                    dataToSend += labelField.innerHTML + "--" + inputField.value + "--Postcode^__";
                                    contentCheck.push("data");
                                }
                                else {
                                    bValid = false;
                                    inputPanel.style.backgroundColor = "#fbcce8";
                                    errorMessage += "<br/>at least one needs a valid postcode!";
                                }
                            }
                        }
                        else {
                            if (inputField.value != "") {
                                dataToSend += labelField.innerHTML + "--" + inputField.value + "--Any__";
                                contentCheck.push("data");
                            }
                            else {
                                dataToSend += labelField.innerHTML + "--No Information Provided--Any__";
                                contentCheck.push("empty");
                            }
                        }
                    });
                }
                else if (type == "textArea") {
                    $(divs[i]).find('.formTextArea').each(function () {
                        var isCompulsory = false;
                        var inputPanel = this.parentNode;
                        var labelField;
                        var inputField = this;
                        $(inputPanel).find('.formLabel').each(function () {
                            labelField = this;
                        });
                        $(inputPanel).find('.formCompStar').each(function () {
                            isCompulsory = this.style.display == "inline";
                        });
                        if (isCompulsory) {
                            if (inputField.value == "") {
                                bValid = false;
                                errorMessage += "<br/>at least one text area need to be completed";
                                inputPanel.style.backgroundColor == "#fbcce8";
                            }
                            else {
                                dataToSend += labelField.innerHTML + "--" + inputField.value + "--Any__";
                                contentCheck.push("data");
                            }
                        }
                        else {
                            if (inputField.value != "") {
                                dataToSend += labelField.innerHTML + "--" + inputField.value + "--Any__";
                                contentCheck.push("data");
                            }
                            else {
                                dataToSend += labelField.innerHTML + "--No Information Provided--Any__";
                                contentCheck.push("empty");
                            }
                        }
                    });
                }
                else if (type == "comboBox") {
                    $(divs[i]).find('.formComboBox').each(function () {
                        var isCompulsory = false;
                        var inputPanel = this.parentNode;
                        var labelField;
                        var inputField = this;
                        $(inputPanel).find('.formLabel').each(function () {
                            labelField = this;
                        });
                        $(inputPanel).find('.formCompStar').each(function () {
                            isCompulsory = this.style.display == "inline";
                        });
                        if (isCompulsory) {
                            if (inputField.value == "") {
                                bValid = false;
                                inputPanel.style.backgroundColor == "#fbcce8";
                                errorMessage += "<br/>at least one drop down needs to be selected";
                            }
                            else {
                                dataToSend += labelField.innerHTML + "--" + inputField.value + "--Any__";
                                contentCheck.push("data");
                            }
                        }
                        else {
                            if (inputField.value == "") {
                                dataToSend += labelField.innerHTML + "--No Information Provided--Any__";
                                contentCheck.push("empty");
                            }
                            else {
                                dataToSend += labelField.innerHTML + "--" + inputField.value + "--Any__";
                                contentCheck.push("data");
                            }
                        }
                    });
                }
                else if (type == "checkBox") {
                    $(divs[i]).find('.formCheckBox').each(function () {
                        var inputPanel = this.parentNode;
                        var labelField;
                        var inputField = this;
                        $(inputPanel).find('.formLabel').each(function () {
                            labelField = this;
                        });
                        var checkState = "Not Selected";
                        if (inputField.checked) {
                            checkState = "Selected";
                        }
                        dataToSend += labelField.innerHTML + "--" + checkState + "__";
                        contentCheck.push("data");
                    });
                }
                else if (type == "upload") {
                    $(divs[i]).find('.formUpload').each(function () {
                        var isCompulsory = false;
                        var inputPanel = this.parentNode;
                        var labelField;
                        var inputField = this;
                        $(inputPanel).find('.formLabel').each(function () {
                            labelField = this;
                        });
                        $(inputPanel).find('.formCompStar').each(function () {
                            isCompulsory = this.style.display == "inline";
                        });
                        if (isCompulsory) {
                            if (filesToUpload == "") {
                                bValid = false;
                                inputPanel.style.backgroundColor == "#fbcce8";
                                errorMessage += "<br/>at least one file needs to be uploaded";
                            }
                            else {
                                dataToSend += "UPLOAD--" + filesToUpload + "--Any__";
                                contentCheck.push("data");
                            }
                        }
                        else {
                            if (filesToUpload == "") {
                                dataToSend += "UPLOAD--No Files Provided--Any__";
                                contentCheck.push("empty");
                            }
                            else {
                                dataToSend += "UPLOAD--" + filesToUpload + "--Any__";
                                contentCheck.push("data");
                            }
                        }
                    });
                }
            }
            
            if (bValid) {
                var hasContent = false;
                for (var k = 0; k < contentCheck.length; k++) {
                    if (contentCheck[k] != "empty") {
                        hasContent = true;
                    }
                }
                if (hasContent) {
                    sendData();
                }
                else {
                    hideLoadingPanel();
                    showPopupMessage("You must fill out the form prior to sending!", "OK");
                    sendingMessage = false;
                }
            }
            else {
                hideLoadingPanel();
                showPopupMessage(errorMessage, "OK");
                sendingMessage = false;
            }
        }
    }
}

function limitText(elem, limitVal) {
    var text = elem.value;
    if (text.length > limitVal) {
        elem.setAttribute("disabled", "disabled");
        var newText = text.substring(0, limitVal);
        elem.value = newText;
        elem.removeAttribute("disabled");
        elem.focus();
    }
}

function sendData() {
    linkUrl = getMyAttribute(currentInputPanel.id, 'urlLink');
    $.post("/Handlers/sendFormDataHandler.ashx?d=" + new Date().getTime(), {
        CompanyID: companyID,
        Data: dataToSend,
        mailto: linkUrl,
        VIPID: vipid,
        subj: getMyAttribute(currentInputPanel.id, "subj")
    }, function (data) {
        if (data == "success") {
            showPopupMessage("Your message has been sent.", "OK");
            $(currentInputPanel).find('.formTextBox').each(function () {
                this.value = "";
            });
            $(currentInputPanel).find('.formTextArea').each(function () {
                this.value = "";
            });
            $(currentInputPanel).find('.formComboBox').each(function () {
                this.firstChild.selected = true;
            });
            $(currentInputPanel).find('.formCheckBox').each(function () {
                this.checked = false;
            });
        }
        else if (data == "spam") {
            showPopupMessage("Your message has not been sent as it violates our terms and conditions!", "OK");
        }
        hideLoadingPanel();
        sendingMessage = false;
    });
}

function validateNumbers(element) {
    var ValidChars = "0123456789";
    var IsNumber = true;
    var Char;
    var text = element.value.replace(" ", "");
    if (text == "") {
        IsNumber = false;
    }
    else {
        for (i = 0; i < text.length && IsNumber == true; i++) {
            Char = text.charAt(i);
            if (ValidChars.indexOf(Char) == -1) {
                IsNumber = false;
            }
        }
    }
    if (!IsNumber || text == "") {
        element.parentNode.style.backgroundColor = "#fbcce8";
    }
    else {
        element.parentNode.style.backgroundColor = "";
    }
    return IsNumber;
}

function validateFormEmail(element) {
    var text = element.value.toLowerCase();
    var valid = false;
    if (text.indexOf("@") > 0 && text.indexOf(".") > 0) {
        valid = true;
    }
    if (valid) {
        element.parentNode.style.backgroundColor = "";
    }
    else {
        showPopupMessage("Please enter a valid email address!", "OK");
        element.parentNode.style.backgroundColor = "#fbcce8";
        valid = false;
    }
    return valid;
}

function validatePostcode(element) {
    var rePostCode = new RegExp(/[A-Za-z]{1,2}[0-9]{1,2}[A-Za-z]{0,1}[ ]{1}[0-9]{1,2}[A-Za-z]{2}$/);
    var valid = true;
    if (rePostCode.test(element.value)) {
        element.parentNode.style.backgroundColor = "";
    }
    else {
        element.parentNode.style.backgroundColor = "#fbcce8";
        valid = false;
    }
    return valid;
}

function customerUploaded(id) {
    var count = 0;
    if (filesToUpload == "") {
        filesToUpload = id;
        count = 1;
    }
    else {
        filesToUpload += "," + id;
        count = (filesToUpload.split(",")).length;
    }
    showPopupMessage(count + " File(s) Uploaded, you may now submit your enquiry", "OK");
}

function comboOptionChanged(elem) {

}

//#endregion

//#region Blog

function showBlogPopup(id) {
    $.post("/Handlers/getBlog.ashx?d=" + new Date().getTime(), {
        compid: companyID,
        blogid: id
    }, function (data) {
        ShowModal2();

        var panel = "<div class=\"blogPopupBackPanel\" style=\"width:980px;\">" +
                        "<div class=\"modalScrollOuter\" style=\"width:980px;max-height:" + (GetHeight() - 200) + "px;margin:0;\">" +
                            "<div class=\"modalScrollInner\" style=\"width:960px;\">" +
                                data +
                            "</div>" +
                        "</div>" +
                        "<div class=\"modalItemsPanel\" style=\"margin:10px 0px 10px 0px;\">" +
                            "<input type=\"button\" onclick=\"HideModal2();\" value=\"Close\" style=\"position:relative;float:right;margin-right:20px;\"></div>" +
                        "</div>" +
                    "</div>";

        editPanel2Inner.innerHTML = panel;
        setEditPanel2Position();
    });
}

//#endregion

//#region email
var linkUrl;
var sending = false;

function linkClicked(elem) {
    linkUrl = getMyAttribute(elem.id, 'urlLink');
    if (linkUrl.indexOf("@") > -1 && linkUrl.indexOf("@@") == -1) {
        if (isMobileV2) {
            showMobiV2Panel('mobiV2MainEmailPanel');
            scrollTo(0, 0);
        }
        else {
            showEmailModal();
        }
    }
    else {
        if (linkUrl.indexOf("paypalPayment.aspx?bskID:") > -1) {
            linkUrl = linkUrl.replace(":", "=");
        }
        if (getMyAttribute(elem.id, "option") == "_self") {
            window.location = linkUrl;
        }
        else {
            window.open(linkUrl, "_blank");
        }
    }
}

//#region Modal Panel

function showEmailModal() {
    if (emailModalPanel) {
        emailModalPanel.style.visibility = "visible";
    }
}

function closeEmailModalPanel() {
    emailModalPanel.style.visibility = "hidden";
}

//#endregion

function resetEmail() {
    document.getElementById('addInput').value = "Your Email Address";
    document.getElementById('telInput').value = "Your Mobile/Telephone";
    document.getElementById('messageInput').value = "Your Message";
    document.getElementById('namesInput').value = "Your Name or Company Name";
}

// Handles the default text in the contact text fields
function setTextBox2(element, type) {
    if (type == "clear") {
        var tempText = element.value;
        if (tempText == "Your Email Address" || tempText == "Your Mobile/Telephone" || tempText == "Your Message" || tempText == "Your Name or Company Name") {
            element.value = "";
        }
    }
    else {
        if (element.value == "") {
            element.value = type;
        }
    }
}

function sendMessage() {
    if (!sending) {
        sending = true;
        var canSend = true;
        var emailAdd = "";
        var phoneNum = "";
        var addText = document.getElementById('addInput').value;
        var telText = document.getElementById('telInput').value;
        var mesText = document.getElementById('messageInput').value;
        var namText = document.getElementById('namesInput').value;
        if ((addText == "" || addText == "Your Email Address") && (telText == "" || telText == "Your Mobile/Telephone")) {
            showPopupMessage("You must enter either a phone number or an email address!", "OK");
            sending = false;
        }
        else {
            if (mesText != "" && mesText != "Your Message") {
                if (addText != "" && addText != "Your Email Address") {
                    if (validateEmail(addText)) {
                        emailAdd = addText;
                    }
                    else {
                        sending = false;
                        canSend = false;
                    }
                }
                if (telText != "" && telText != "Your Mobile/Telephone") {
                    var tempTel = telText.replace(/ /gi, "").replace("+", "");
                    if (isNumber(tempTel)) {
                        if (tempTel != "") {
                            phoneNum = telText;
                        }
                        else {
                            showPopupMessage("Please enter a valid phone number!", "OK");
                            sending = false;
                            canSend = false;
                        }
                    }
                    else {
                        showPopupMessage("Please enter a valid phone number!", "OK");
                        sending = false;
                        canSend = false;
                    }
                }
                if (namText == "" || namText == "Your Name or Company Name") {
                    showPopupMessage("Please enter your name or company name!", "OK");
                    sending = false;
                    canSend = false;
                }
                if (canSend) {
                    var strURL2 = "/Handlers/sendPDQuery.ashx";
                    $.post(strURL2, {
                        compID: companyID,
                        mailto: linkUrl,
                        phone: phoneNum,
                        mailfrom: emailAdd,
                        name: namText,
                        msg: mesText,
                        VIPID: vipid
                    }, function (data) {
                        if (data == "success") {
                            if (isMobileV2) {
                                document.getElementById('addInput').value = "Your Email Address";
                                document.getElementById('telInput').value = "Your Mobile/Telephone";
                                document.getElementById('messageInput').value = "Your Message";
                                document.getElementById('namesInput').value = "Your Name or Company Name";
                                showMobiV2Panel('mobiV2MainEmailPanel');
                            }
                            else {
                                closeEmailModalPanel();
                            }
                            showPopupMessage("Your message has been sent.", "OK");
                            sending = false;
                        }
                        else if (data == "spam") {
                            showPopupMessage("Your message has not been sent as it violates our terms and conditions!", "OK");
                            sending = false;
                        }
                        else {
                            showPopupMessage("Failed, contact us on 01542 230250, or email support@contentys.com", "OK");
                            sending = false;
                        }
                    });
                }
            }
            else {
                showPopupMessage("Please enter a message to send!", "OK");
                sending = false;
            }
        }
    }
}

function isNumber(text) {
    var ValidChars = "0123456789";
    var valid = true;
    var Char;
    for (var i13 = 0; i13 < text.length && valid == true; i13++) {
        Char = text.charAt(i13);
        if (ValidChars.indexOf(Char) == -1) {
            valid = false;
        }
    }
    return valid;
}

//#endregion

//#region Reviews
function submitReview() {
    if (!sendingReview) {
        sendingReview = true;
        if (document.getElementById('reviewSubmitTitleInput').value != "" && document.getElementById('reviewSubmitTitleInput').value != "Enter the title of your review") {
            if (document.getElementById('reviewSubmitCommentsInput').value != "" && document.getElementById('reviewSubmitCommentsInput').value != "Enter your comments here") {
                if (document.getElementById('reviewSubmitEmailInput').value != "" && document.getElementById('reviewSubmitEmailInput').value != "Your email address (required)") {
                    if (document.getElementById('reviewSubmitEmailInput').value.indexOf("@") > -1) {
                        if (validateEmail(document.getElementById('reviewSubmitEmailInput').value)) {
                            postReview();
                        }
                        else {
                            sendingReview = false;
                        }
                    }
                    else {
                        showPopupMessage("The email address you entered is not valid.", "OK");
                        sendingReview = false;
                    }
                }
                else {
                    showPopupMessage("Please enter your email address to continue", "OK");
                    sendingReview = false;
                }
            }
            else {
                showPopupMessage("Please enter your comments to continue.", "OK");
                sendingReview = false;
            }
        }
        else {
            showPopupMessage("Please enter a title for your review.", "OK");
            sendingReview = false;
        }
    }
}

// This actually passes the question details on to a handler for actual submition and resets all fields back to their defaults on success
function postReview() {
    var strURL = "/Handlers/submitReview.ashx";
    $.post(strURL, {
        cID: companyID,
        title: document.getElementById('reviewSubmitTitleInput').value,
        comments: document.getElementById('reviewSubmitCommentsInput').value,
        email: document.getElementById('reviewSubmitEmailInput').value,
        VIPID: vipid
    }, function (data) {
        if (data == "success") {
            showPopupMessage("Your review has been submitted.", "OK");
            document.getElementById('reviewSubmitTitleInput').value = "Enter the title of your review";
            document.getElementById('reviewSubmitCommentsInput').value = "Enter your comments here";
            document.getElementById('reviewSubmitEmailInput').value = "Your email address (required)";
            sendingReview = false;
        }
        else {
            showPopupMessage("System error!", "OK");
            sendingReview = false;
        }
    });
}

// Handles the default text in the contact text fields
function setTextBox(element, type) {
    if (type == "clear") {
        var tempText = element.value;
        if (tempText == "Enter the title of your review" || tempText == "Enter your comments here" || tempText == "Your email address (required)") {
            element.value = "";
        }
    }
    else {
        if (element.value == "") {
            element.value = type;
        }
    }
}

//#endregion

//#region Ecommerce

var basket = new Array();
var priceToSubmit = "0";
var shippingToSubmit = "0";
var billing = "";
var shipping = "";
var billingAddressID = "0";
var shippingAddressID = "0";
var ecomCustomerID = "0";
var ecomEmail = "";
var deliveryFirstName = "";
var deliveryLastName = "";
var deliveryPhone = "";
var deliveryMobile = "";
var gotFilters = false;
var useGoogleEcom = false;
var showZeros = true;
var dMode = false
var gateway = "paypal";

var currBasketPanel = 'basketSummaryPanel';
var register = false;
var groupPanelWidth = 0;
var shipAdd1 = "";
var shipAdd2 = "";
var shipTown = "";
var shipCounty = "";
var shipPCode = "";
var shipCountry = "";
var shipCountryID = "";
var basketString = "";
var currentShipping = null;
var shippingIndex = 0;
var currencySign = "";
var preShip = true;
var promoCode = "";
var firstBasketRun = true;
var lastOptionFilters = new Array();
var cusFiltersArray = new Array();
var divsMoved = new Array();
var cusFilters = "";
var allDDValueIDs = "";
var showMobileReminder = true;
var finalBasket = "";
var ecomUrlLink = "";
var tradeUserID = "0";
var ga = null;
var isPrimary = false;
var elemToResize;
var elemToResize2;
var hasTabs = false;
//var showVATReliefForm = false;
var gotVATReliefForm = false;
var giveVATReliefOnMarkedProducts = false;
var VATExemptShipAddress = false;
var agreedToTermsConditions = false;
var hasCraftyClicks = false;
var craftyClicksAddresses;
var craftyClicksLookupTag = "bill";
var loyaltyPoints = 0;
var cookie = "";
var multiPacksAdded = 0;

//#region MobiV2 Setup Functions

var currV2MobiPanel = "";
var mobiV2AdvNavRootElem;
var mobiV2AdvNavRootElemWidth = 0;
var mobiV2AdvNavSubElemWidth = 0;
var mobiV2AdvNavLvl = "0";
var mobiV2AdvNavLvl0Elem;
var mobiV2AdvNavLvl1Elem;
var mobiV2AdvNavLvl2Elem;
var mobiRoute = "";

function showMobiV2Panel(tag) {
    if (currV2MobiPanel != "") {
        document.getElementById(currV2MobiPanel).style.overflow = "hidden";
        if (currV2MobiPanel == "mobiV2NavigationPanel") {
            if (mobiV2AdvNavLvl == "1") {
                $(mobiV2AdvNavLvl0Elem).animate({ width: mobiV2AdvNavSubElemWidth + "px" }, 250, function () {
                    this.style.overflow = "hidden";
                });
            }
            if (mobiV2AdvNavLvl == "2") {
                $(mobiV2AdvNavLvl0Elem).animate({ width: mobiV2AdvNavSubElemWidth + "px" }, 250, function () {
                    this.style.overflow = "hidden";
                });
                $(mobiV2AdvNavLvl1Elem).animate({ width: mobiV2AdvNavSubElemWidth + "px" }, 250, function () {
                    this.style.overflow = "hidden";
                });
            }
            if (mobiV2AdvNavLvl == "3") {
                $(mobiV2AdvNavLvl0Elem).animate({ width: mobiV2AdvNavSubElemWidth + "px" }, 250, function () {
                    this.style.overflow = "hidden";
                });
                $(mobiV2AdvNavLvl1Elem).animate({ width: mobiV2AdvNavSubElemWidth + "px" }, 250, function () {
                    this.style.overflow = "hidden";
                });
                $(mobiV2AdvNavLvl2Elem).animate({ width: mobiV2AdvNavSubElemWidth + "px" }, 250, function () {
                    this.style.overflow = "hidden";
                });
            }
            $(mobiV2AdvNavRootElem).animate({ left: "0px" }, 250);
            mobiV2AdvNavLvl = "0";
        }
        if (currV2MobiPanel == "mobiV2SearchPanel" || currV2MobiPanel == "mobiV2BasketPanel") {
            $('#' + currV2MobiPanel).animate({ height: "0px" }, 250);
        }
        else {
            $('#' + currV2MobiPanel).animate({ width: "0px" }, 500, function () {
                closeMenus();
            });
        }
    }
    if (currV2MobiPanel != tag && tag != "") {
        var hasOpened = false;
        var first = document.getElementById(tag).firstChild;
        if (tag == "mobiV2NavigationPanel") {
            first = first.firstChild;
            $('#mobiV2NavigationPanel').find('.mobiMenuSubWrapper').each(function () {
                this.firstChild.style.width = first.offsetWidth + "px";
            });
        }
        if (tag == "mobiV2SearchPanel" || tag == "mobiV2BasketPanel") {
            $('#' + tag).animate({ height: first.offsetHeight + "px" }, 250, function () {
                this.style.overflow = "visible";
            });
            hasOpened = true;
        }
        else {
            $('#' + tag).animate({ width: "980px" }, 500, function () {
                this.style.overflow = "visible";
            });
            hasOpened = true;
        }
        if (hasOpened) {
            currV2MobiPanel = tag;
        }
        else {
            currV2MobiPanel = "";
        }
    }
    else {
        currV2MobiPanel = "";
    }

    resizeMobileContainer(tag);
}

function closeMenus() {
    $('#mobiV2NavigationPanel').find('.mobiMenuSubWrapper').each(function () {
        if (this.offsetHeight > 0) {
            this.style.height = "0px";
        }
    });
}

function setMobileV2MainMenu() {
    var c = $('#mobiV2MenuBar').css("backgroundColor");
    var t = document.getElementById('mobiV2MenuBar').offsetHeight + 1;
    document.getElementById('mobiV2NavigationPanel').style.top = t + "px";
    if (document.getElementById('mobiV2BasketPanel')) {
        document.getElementById('mobiV2BasketPanel').style.top = t + "px";
        $('.ecomBasketBackPanel').css("backgroundColor", c);
        document.getElementById('mobiV2MainBasketPanel').style.top = t + "px";
        document.getElementById('mobiV2MainBasketPanel').style.backgroundColor = c;
    }
    if (document.getElementById('mobiV2SearchPanel')) {
        document.getElementById('mobiV2SearchPanel').style.top = t + "px";
    }
    if (document.getElementById('mobiV2MainEmailPanel')) {
        document.getElementById('mobiV2MainEmailPanel').style.top = t + "px";
        document.getElementById('mobiV2MainEmailPanel').style.backgroundColor = c;
    }
    if (document.getElementById('mobiV2FilterPanel')) {
        document.getElementById('mobiV2FilterPanel').style.top = t + "px";
        document.getElementById('mobiV2FilterPanel').style.backgroundColor = c;
    }
}

function toggleShowAdvNavLevel(elem, lvl) {
    if (lvl == "0") {
        //if we are going back close the current level
        if (mobiV2AdvNavLvl == "1") {
            $(mobiV2AdvNavLvl0Elem).animate({ width: mobiV2AdvNavSubElemWidth + "px" }, 250, function () {
                this.style.overflow = "hidden";
            });
        }
        $(mobiV2AdvNavRootElem).animate({ left: "0px", width: mobiV2AdvNavRootWidth + "px" }, 250);
        $(mobiV2AdvNavLvl1Elem).animate({ width: mobiV2AdvNavSubElemWidth + "px" }, 250, function () {
            this.style.overflow = "hidden";
        });
    }
    else if (lvl == "1") {
        //if we are going back close the current level
        if (mobiV2AdvNavLvl == "2") {
            $(mobiV2AdvNavLvl0Elem).animate({ width: (mobiV2AdvNavSubElemWidth + mobiV2AdvNavRootWidth) + "px" }, 250);
            $(mobiV2AdvNavLvl1Elem).animate({ width: mobiV2AdvNavSubElemWidth + "px" }, 250, function () {
                this.style.overflow = "hidden";
            });
        }
        else {
            mobiV2AdvNavLvl0Elem = elem.parentNode;
        }
        $(mobiV2AdvNavLvl0Elem).animate({ width: (mobiV2AdvNavSubElemWidth + mobiV2AdvNavRootWidth) + "px" }, 250, function () {
            this.style.overflow = "visible";
        });
        $(mobiV2AdvNavRootElem).animate({ left: "-" + mobiV2AdvNavRootWidth + "px" }, 250);
    }
    else if (lvl == "2") {
        //if we are going back close the current level
        if (mobiV2AdvNavLvl == "3") {
            $(mobiV2AdvNavLvl0Elem).animate({ width: ((mobiV2AdvNavSubElemWidth * 2) + mobiV2AdvNavRootWidth) + "px" }, 250);
            $(mobiV2AdvNavLvl1Elem).animate({ width: (mobiV2AdvNavSubElemWidth + mobiV2AdvNavRootWidth) + "px" }, 250);
            $(mobiV2AdvNavLvl2Elem).animate({ width: mobiV2AdvNavSubElemWidth + "px" }, 250, function () {
                this.style.overflow = "hidden";
            });
        }
        else {
            mobiV2AdvNavLvl1Elem = elem.parentNode;
        }
        $(mobiV2AdvNavLvl0Elem).animate({ width: ((mobiV2AdvNavSubElemWidth * 2) + mobiV2AdvNavRootWidth) + "px" }, 250);
        $(mobiV2AdvNavLvl1Elem).animate({ width: (mobiV2AdvNavSubElemWidth + mobiV2AdvNavRootWidth) + "px" }, 250, function () {
            this.style.overflow = "visible";
        });
        $(mobiV2AdvNavRootElem).animate({ left: "-" + (mobiV2AdvNavSubElemWidth + mobiV2AdvNavRootWidth) + "px" }, 250);
    }
    else if (lvl == "3") {
        mobiV2AdvNavLvl2Elem = elem.parentNode;
        $(mobiV2AdvNavLvl0Elem).animate({ width: ((mobiV2AdvNavSubElemWidth * 3) + mobiV2AdvNavRootWidth) + "px" }, 250);
        $(mobiV2AdvNavLvl1Elem).animate({ width: ((mobiV2AdvNavSubElemWidth * 2) + mobiV2AdvNavRootWidth) + "px" }, 250);
        $(mobiV2AdvNavLvl2Elem).animate({ width: (mobiV2AdvNavSubElemWidth + mobiV2AdvNavRootWidth) + "px" }, 250, function () {
            this.style.overflow = "visible";
        });

        $(mobiV2AdvNavRootElem).animate({ left: "-" + ((mobiV2AdvNavSubElemWidth * 2) + mobiV2AdvNavRootWidth) + "px" }, 250, function () {
            this.style.overflow = "visible";
        });
    }
    mobiV2AdvNavLvl = lvl;
}

function updateDescriptionHeight() {
    var ecomDescWidget = document.getElementById('ecomProductSingleDescriptionPanel_' + currProduct.productID).parentNode;
    var innerDesc = document.getElementById('ecomProductSingleDescriptionPanel_' + currProduct.productID);
    var amoutToChangeBy = document.getElementById('ecomProductSingleDescriptionPanel_' + currProduct.productID).offsetHeight - ecomDescWidget.offsetHeight;
    if (amoutToChangeBy != 0) {
        var heightbefore = ecomDescWidget.offsetHeight + ecomDescWidget.offsetTop;
        var divs = document.getElementById('content01').childNodes;
        for (var i = 0; i < divs.length; i++) {
            if (divs[i] != ecomDescWidget) {
                if (divs[i].offsetTop > heightbefore) {
                    divs[i].style.top = (divs[i].offsetTop + amoutToChangeBy) + "px";
                }
            }
        }
        ecomDescWidget.style.height = (ecomDescWidget.offsetHeight + amoutToChangeBy) + "px";
        document.getElementById('content01').style.height = ((document.getElementById('content01').offsetHeight + amoutToChangeBy) + 20) + "px";
    }
}

function updateExtraDescriptionHeight() {
    var ecomExtraDescWidget = document.getElementById('ecomProductExtraDescriptionPanel_' + currProduct.productID).parentNode;
    if (ecomExtraDescWidget) {
        var innerDesc = document.getElementById('ecomProductExtraDescriptionPanel_' + currProduct.productID);
        var amoutToChangeBy = document.getElementById('ecomProductExtraDescriptionPanel_' + currProduct.productID).offsetHeight - ecomExtraDescWidget.offsetHeight;
        if (amoutToChangeBy != 0) {
            var heightbefore = ecomExtraDescWidget.offsetHeight + ecomExtraDescWidget.offsetTop;
            var divs = document.getElementById('content01').childNodes;
            for (var i = 0; i < divs.length; i++) {
                if (divs[i] != ecomExtraDescWidget) {
                    if (divs[i].offsetTop > heightbefore) {
                        divs[i].style.top = (divs[i].offsetTop + amoutToChangeBy) + "px";
                    }
                }
            }
            ecomExtraDescWidget.style.height = (ecomExtraDescWidget.offsetHeight + amoutToChangeBy) + "px";
            document.getElementById('content01').style.height = ((document.getElementById('content01').offsetHeight + amoutToChangeBy) + 20) + "px";
        }
    }
}

//#endregion

//#region Setup Functions

function equaliseEcomFilters() {
    var ecomOptFilterMainLabelHeight = 0;
    var ecomOptFilterSubPanelHeight = 0;
    var maxHeight = 0;
    var maxWidth = 0;
    var maxLblWidth = 0;
    var ecomOptBackColour = "";
    var elem;

    $(".ecomOptFilterInner").each(function () {
        $(this).css("background-color", ecomOptBackColour);
        this.parentNode.style.maxHeight = (maxHeight - ecomOptFilterMainLabelHeight) + "px";
    });
    $(".ecomFilterPanel").each(function () {
        maxHeight = parseInt($(this).css("max-height").replace("px", ""), 10);
        maxWidth = this.parentNode.offsetWidth - 20;
        maxLblWidth = maxWidth - 30;
        elem = this.parentNode.parentNode;
        return false;
    });
    $(".ecomOptFilterMainLabel").each(function () {
        ecomOptFilterMainLabelHeight = $(this).outerHeight(true);
        return false;
    });
    $(".ecomFilterPanel").each(function () {
        var ecomOptFilterMinWidth = 0;
        var tempWidth = 0;
        $(this).find(".ecomOptFilterSubPanel").each(function () {
            this.style.width = maxWidth + "px";
        });
        $(this).find('.ecomOptFilterSubInnerPanel').each(function () {
            tempWidth = $(this).outerWidth(true);
            if (tempWidth > ecomOptFilterMinWidth) {
                ecomOptFilterMinWidth = tempWidth;
            }
        });
        ecomOptFilterMinWidth += 5;
        $(this).find(".ecomOptFilterSubPanel").each(function () {
            ecomOptBackColour = $(this).css("background-color");
            this.style.width = ecomOptFilterMinWidth + "px";
        });
    });
    $(".ecomOptFilterInner").each(function () {
        $(this).css("background-color", ecomOptBackColour);
        this.parentNode.style.maxHeight = (maxHeight - ecomOptFilterMainLabelHeight) + "px";
    });
    $('.ecomOptFilterSubLabel').each(function () {
        this.style.maxWidth = maxLblWidth + "px";
        if (ecomOptFilterSubPanelHeight == 0) {
            ecomOptFilterSubPanelHeight = $(this).outerHeight(true);
        }
    });
    $(".ecomFilterCheckBox").each(function () {
        this.style.marginTop = ((ecomOptFilterSubPanelHeight - this.offsetHeight) / 2) + "px";
    });
    if (elem) {
        elem.style.visibility = "visible";
        var totalHeight = elem.firstChild.offsetHeight;
        elem.style.height = totalHeight + "px";
        elem.parentNode.style.height = totalHeight + "px";
        var toGrow = 0;
        if ((elem.offsetTop + elem.offsetHeight) > document.getElementById('content01').offsetHeight) {
            toGrow = (elem.offsetTop + totalHeight) - document.getElementById('content01').offsetHeight;
        }
        if (toGrow > 0) {
            ecomProductsSize = ecomProductsSize.split("^")[0] + "^" + (parseInt(ecomProductsSize.split("^")[1]) + toGrow);
        }
    }
}

function equaliseEcomAutoFilters() {
    var ecomOptFilterSubPanelHeight = 0;
    $(document).find('.ecomOptFilterSubLabel').each(function () {
        ecomOptFilterSubPanelHeight = $(this).outerHeight(true);
        return false;
    });
    var ecomOptFilterWidth = 0;
    $(document).find(".ecomFilterPanel").each(function () {
        this.style.width = "100%";
        $(this).find(".ecomOptFilterSubPanel").each(function () {
            this.style.width = "980px";
        });
        $(this).find('.ecomOptFilterSubInnerPanel').each(function () {
            var tWidth = $(this).outerWidth(true);
            if (tWidth > ecomOptFilterWidth) {
                ecomOptFilterWidth = tWidth;
            }
        });
    });
    ecomOptFilterWidth += 5;
    $(document).find(".ecomFilterPanel").each(function () {
        $(this).find(".ecomOptFilterSubPanel").each(function () {
            ecomOptBackColour = $(this).css("background-color");
            this.style.width = ecomOptFilterWidth + "px";
        });;
    });
    $(document).find(".ecomFilterCheckBox").each(function () {
        this.style.marginTop = ((ecomOptFilterSubPanelHeight - this.offsetHeight) / 2) + "px";
    });
}

function updateEcomOptsFilter(elem, valid, optid) {
    if (isMobileV2) {
        if (elem.className != "ecomFilterCheckboxDisMobi") {
            if (elem.className == "ecomOptFilterSubLabel") {
                elem = elem.parentNode.getElementsByTagName("input")[0];
            }
            var action = "rem";
            if (elem.className == "ecomFilterCheckboxOffMobi") {
                action = "add";
                elem.className = "ecomFilterCheckboxOnMobi"
            }
            else {
                elem.className = "ecomFilterCheckboxOffMobi"
            }
        }
    }
    else {
        if (elem.className == "ecomOptFilterSubLabel") {
            elem = elem.parentNode.getElementsByTagName("input")[0];
            if (elem.checked) {
                elem.checked = false;
            }
            else {
                elem.checked = true;
            }
        }
        var action = "rem";
        if (elem.className == "") {
            action = "add";
            document.getElementById('optCheck' + valid).checked = true;
        }
        else {
            if (elem.checked) {
                action = "add";
            }
        }
    }
    var newHash = window.location.hash;
    if (action == "add") {
        newHash = newHash + "_" + valid;
    }
    else {
        newHash = newHash.replace("_" + valid, "");
        if (newHash == "#") {
            newHash = "";
        }
    }
    if (newHash == "") {
        window.location = window.location.href.substring(0, window.location.href.indexOf("#"));
    }
    else {
        window.location.hash = newHash;
    }
}

$(window).on('hashchange', function (e) {
    var hash = window.location.hash.replace("#", "");
    if (hash.indexOf("_") > -1) {
        getHashFilters(hash);
    }
});

function getHashFilters(hash) {
    cusFiltersArray = new Array();
    pageIndex = 1;
    if (window.location.hash != "") {
        hash = hash.split("_");
        for (var j = 0; j < hash.length; j++) {
            if (hash[j].indexOf("page=") > -1) {
                pageIndex = hash[j].replace("page=", "");
            }
            else if (isNumber(hash[j])) {
                if (hash[j] != "") {
                    cusFiltersArray.push(hash[j]);
                }
            }
        }
    }
    updateProducts();
}

function variationSelected(url) {
    showLoadingPanel("Redirecting...");
    window.location = url;
}

function advNavClicked(url) {
    showLoadingPanel("Redirecting...");
    window.location = url;
}

function updateProducts() {
    var resetPage = false;
    lastItem = false;
    if (lastOptionFilters.length == cusFiltersArray.length) {
        var test = true;
        for (var k = 0; k < cusFiltersArray.length; k++) {
            if (cusFiltersArray[k] != lastOptionFilters[k]) {
                test = false;
            }
        }
        if (!test) {
            resetPage = true;
        }
    }
    else {
        resetPage = true;
    }
    if (resetPage) {
        if (window.location.hash.indexOf("_page=") > -1) {
            window.location.hash = window.location.hash.replace("_page=" + pageIndex + "_", "");
        }
        pageIndex = 1;
        lastOptionFilters = new Array();
        for (var l = 0; l < cusFiltersArray.length; l++) {
            lastOptionFilters.push(cusFiltersArray[l]);
        }
    }
    var urlToUse = "";
    if (advNavGroupID == 0 && !isAdvNav) {
        getBasicNavProducts();
    }
    else {
        getAdvNavProducts();
    }
}

function getBasicNavProducts() {
    showLoadingPanel("Getting Shop Items");
    buildOptFiltersText();
    $.ajax({
        dataType: "json",
        url: "/Handlers/getVariationsFiltered.ashx?d=" + new Date().getTime(),
        type: "POST",
        data: "siteid=" + siteID + "&shopid=" + shopID + "&compid=" + companyID + "&prdid=" + currProduct.productID + "&prefil=" + preFilters + "&cusfil=" + cusFilters + "&specs=" + specialsFilter +
                "&size=" + ecomProductsSize + "&page=" + pageIndex + "&rows=" + rowsToShow + "&gotfil=" + gotFilters + "&mobv2=" + isMobileV2 + "&gecom=" + useGoogleEcom + "&anim=" + ecomTextAnim +
                "&url=" + window.location.href
    }).done(function (result) {
        buildProductPage(result);
    });
}

function getAdvNavProducts() {
    showLoadingPanel("Getting Shop Items");
    buildOptFiltersText();
    $.ajax({
        dataType: "json",
        url: "/Handlers/getAdvNavVariationsFiltered.ashx?d=" + new Date().getTime(),
        type: "POST",
        data: "siteid=" + siteID + "&shopid=" + shopID + "&compid=" + companyID + "&navid=" + advNavGroupID + "&cusfil=" + cusFilters + "&size=" + ecomProductsSize +
                "&page=" + pageIndex + "&rows=" + rowsToShow + "&gotfil=" + gotFilters + "&mobv2=" + isMobileV2 + "&gecom=" + useGoogleEcom + "&anim=" + ecomTextAnim +
                "&url=" + window.location.href
    }).done(function (result) {
        buildProductPage(result);
    });
}

function buildProductPage(result) {
    if (result.error != "") {
        showPopupMessage(result.error, "OK");
        hideLoadingPanel();
    }
    else {
        if (result.variations.length == 0 && result.navLinks.length == 0) {
            showPopupMessage("No products available at this point.", "OK");
            hideLoadingPanel();
        }
        else {
            if (result.variations.length == 1 && result.showLast == false) {
                showLoadingPanel();
                gotoItemPage(result.variations[0].productID, 0, result.variations[0].variationID, result.variations[0].url, true);
            }
            else {
                if (!gotFilters) {
                    if (result.filters == "") {
                        ecomViewFiltersButton
                        $("#container").find('.ecomViewFiltersButton').each(function () {
                            this.parentNode.style.visibility = "hidden";
                        });
                    }
                    else {
                        $("#container").find('.ecomViewFiltersButton').each(function () {
                            this.parentNode.style.visibility = "visible";
                        });
                    }
                    $(".innerFilters").each(function () {
                        this.innerHTML = result.filters;
                        equaliseEcomFilters();
                    });
                    $(".innerAutoFilters").each(function () {
                        this.innerHTML = result.filters;
                        $(this).find('.ecomFilterBackground').each(function () {
                            this.style.maxHeight = "1000px";
                        });
                        setTimeout('equaliseEcomAutoFilters();', 1000);
                    });
                    gotFilters = true;
                }
                if (result.pageCount > 1) {
                    for (var i = 0; i < pagesWidgetArray.length; i++) {
                        pagesWidgetArray[i].innerHTML = result.pages;
                        pagesWidgetArray[i].style.visibility = "visible";
                    }
                }
                else {
                    for (var i = 0; i < pagesWidgetArray.length; i++) {
                        pagesWidgetArray[i].style.visibility = "hidden";
                    }
                }
                var prodPanel = "";
                if (result.navLinks.length > 0) {
                    prodPanel = "<div id=\"ecomNavGroupPanel\" class=\"ecomNavGroupPanel\">";
                    for (var j = 0; j < result.navLinks.length; j++) {
                        prodPanel += result.navLinks[j];
                    }
                    prodPanel += "</div>";
                    prodPanel += "<div id=\"ecomProductsSubPanel\" style=\"position:relative;float:left;width:100%;\">";
                }
                for (var k = 0; k < result.variations.length; k++) {
                    prodPanel += result.variations[k].itemText;
                    if (useGoogleEcom) {
                        addImpression(result.variations[k]);
                    }
                }
                if (result.navLinks.length > 0) {
                    prodPanel += "</div>";
                }
                ecomProductsInner.innerHTML = prodPanel;

                updateAdvNavPanels();
                if (result.enabledOptionValues) {
                    updateDisabledFilter(result.enabledOptionValues, result.clickedOptions);
                }

                if (!isMobileV2 && imageScrolling) {
                    $(ecomProductsInner).find('.slideShow').each(function () {
                        $(this).flexslider({
                            animation: imageScrollingAnimation,
                            directionNav: false,
                            controlNav: false,
                            slideDirection: "horizontal",
                            slideshowSpeed: imageScrollingInterval,
                            animationSpeed: imageScrollingSpeed,
                            pauseOnAction: false,
                            autoStart: false,
                            animationLoop: imageScrollingLoop
                        });
                        $(this.parentNode).hover(function () {
                            startImageScrolling(this);
                        }, function () {
                            stopImageScrolling(this);
                        });
                    });
                }
                if (useGoogleEcom) {
                    sendPageView();
                }
                hideLoadingPanel();
            }
            if (result.isAnimated) {
                $('.ecomProductGroupedItemPanel').hover(function () {
                    var top = this.getAttribute('atop');
                    $(".ecommerceAnimationPanel", this).stop().animate({ top: top + 'px' }, { queue: false, duration: 250 });
                }, function () {
                    var top = this.offsetHeight;
                    $(".ecommerceAnimationPanel", this).stop().animate({ top: top + 'px' }, { queue: false, duration: 250 });
                });
            }
        }
    }
}

function updatePreLoadProducts() {
    $(".innerFilters").each(function () {
        equaliseEcomFilters();
    });
    $(".innerAutoFilters").each(function () {
        $(this).find('.ecomFilterBackground').each(function () {
            this.style.maxHeight = "1000px";
        });
        setTimeout('equaliseEcomAutoFilters();', 1000);
    });
    gotFilters = true;
    if (ecomTextAnim.split(',')[0] = "1") {
        $('.ecomProductGroupedItemPanel').hover(function () {
            var top = this.getAttribute('atop');
            $(".ecommerceAnimationPanel", this).stop().animate({ top: top + 'px' }, { queue: false, duration: 250 });
        }, function () {
            var top = this.offsetHeight;
            $(".ecommerceAnimationPanel", this).stop().animate({ top: top + 'px' }, { queue: false, duration: 250 });
        });
    }
    if (!isMobileV2 && imageScrolling) {
        $(ecomProductsInner).find('.slideShow').each(function () {
            $(this).flexslider({
                animation: imageScrollingAnimation,
                directionNav: false,
                controlNav: false,
                slideDirection: "horizontal",
                slideshowSpeed: imageScrollingInterval,
                animationSpeed: imageScrollingSpeed,
                pauseOnAction: false,
                autoStart: false,
                animationLoop: imageScrollingLoop
            });
            $(this.parentNode).hover(function () {
                startImageScrolling(this);
            }, function () {
                stopImageScrolling(this);
            });
        });
    }
    if (isAdvNav) {
        updateAdvNavPanels();
    }
    if (useGoogleEcom) {
        sendPageView();
    }
    if (useGoogleEcom) {
        var varIDs = "";
        $(ecomProductsInner).find('.ecomProductGroupedItemPanel').each(function () {
            if (varIDs == "") {
                varIDs = this.id.replace("ecomItem", "");
            }
            else {
                varIDs += "," + this.id.replace("ecomItem", "");
            }
        });
        if (varIDs != "") {
            $.ajax({
                dataType: "json",
                url: "/Handlers/getVariationsInfo.ashx?d=" + new Date().getTime(),
                type: "POST",
                data: "shopid=" + shopID + "&compid=" + companyID + "&varids=" + varIDs + "&navid=" + advNavGroupID + "&index=" + pageIndex
            }).done(function (items) {
                for (var i = 0; i < items.length; i++) {
                    addImpression(items[i]);
                }
            });
        }
    }
}

function switchProductImage(elem, varid) {
    var imW = 0;
    var imH = 0;
    elem = elem.parentNode.parentNode;
    $(elem).find('.ecomProductGroupImagePanel').each(function () {
        imW = this.offsetWidth;
        imH = this.offsetHeight;
    });
    $.post("/Handlers/getProductImageSet.ashx?d=" + new Date().getTime(), {
        compid: companyID,
        shopid: shopID,
        varid: varid,
        imw: imW,
        imh: imH
    }, function (data) {
        $(elem).find('.ecomProductGroupImagePanel').each(function () {
            this.innerHTML = data;
            $(elem).find('.slideShow').each(function () {
                $(this).flexslider({
                    animation: imageScrollingAnimation,
                    directionNav: false,
                    controlNav: false,
                    slideDirection: "horizontal",
                    slideshowSpeed: imageScrollingInterval,
                    animationSpeed: imageScrollingSpeed,
                    pauseOnAction: false,
                    autoStart: false,
                    animationLoop: imageScrollingLoop
                });
                $(this.parentNode).hover(function () {
                    startImageScrolling(this);
                }, function () {
                    stopImageScrolling(this);
                });
            });
        });
    });
}

function updateDisabledFilter(valIDs, optIDs) {
    $(".ecomFilterPanel").each(function () {
        $(this).find('.ecomOptFilterSubPanel').each(function () {
            $(this).find('.ecomOptFilterSubLabelDisabled').each(function () {
                this.className = "ecomOptFilterSubLabel";
            });
            var inp2 = this.getElementsByTagName("input")[0];
            if (isMobileV2) {
                inp2.className = "ecomFilterCheckboxOffMobi";
            }
            else {
                inp2.disabled = "";
            }
        });
    });
    var elem;
    if (valIDs.length > 0) {
        $(".ecomFilterPanel").each(function () {
            elem = this.parentNode;
            $(this).find('.ecomOptFilterSubPanel').each(function () {
                var inp2 = this.getElementsByTagName("input")[0];
                var div2;
                $(this).find('.ecomOptFilterSubLabel').each(function () {
                    div2 = this;
                });
                $(this).find('.ecomOptFilterSubLabelDisabled').each(function () {
                    div2 = this;
                });
                var tid2 = this.id.replace("optCheck", "");
                var found = false;
                for (var j = 0; j < valIDs.length; j++) {
                    if (tid2 == valIDs[j]) {
                        found = true;
                        break;
                    }
                }
                if (found) {
                    div2.className = "ecomOptFilterSubLabel";
                    if (isMobileV2) {
                        inp2.className = "ecomFilterCheckboxOffMobi";
                    }
                    else {
                        inp2.disabled = "";
                    }
                }
                else {
                    div2.className = "ecomOptFilterSubLabelDisabled";
                    if (isMobileV2) {
                        inp2.className = "ecomFilterCheckboxDisMobi";
                    }
                    else {
                        inp2.disabled = "disabled";
                    }
                }
                for (var jj = 0; jj < cusFiltersArray.length; jj++) {
                    if (tid2 == cusFiltersArray[jj]) {
                        if (isMobileV2) {
                            inp2.className = "ecomFilterCheckboxOnMobi";
                        }
                        else {
                            inp2.checked = true;
                        }
                    }
                }
            });
        });
    }
    for (var i = 0; i < optIDs.length; i++) {
        $("#ecomOptFilterPanel" + optIDs[i]).find('.ecomOptFilterSubPanel').each(function () {
            var inp3 = this.getElementsByTagName("input")[0];
            if (!inp3.checked) {
                $(this).find('.ecomOptFilterSubLabel').each(function () {
                    this.className = "ecomOptFilterSubLabelDisabled";
                });
                if (isMobileV2) {
                    inp3.className = "ecomFilterCheckboxDisMobi";
                }
                else {
                    inp3.disabled = "disabled";
                }
            }
        });
    }
}

function updatePageIndex(tag, tag2) {
    var hash = window.location.hash;
    if (hash.indexOf("_page=") > -1) {
        hash = hash.replace("_page=" + pageIndex, "");
    }
    if (tag == "all") {
        pageIndex = 0;
    }
    else if (tag == "next") {
        pageIndex++;
    }
    else if (tag == "prev") {
        pageIndex--;
    }
    else {
        pageIndex = parseInt(tag, 10);
    }
    hash = hash + "_page=" + pageIndex;
    if (tag2 == "products") {
        window.location.hash = hash;
    }
    else if (tag2 == "promotions") {
        getEcomPromotions();
    }
    else if (tag2 == "articles") {
        getMagazineArticles(tag2)
    }
}

function updateVariationDropDowns(elem, prdID) {
    for (var i = 0; i < products.length; i++) {
        if (products[i].productID == prdID) {
            currProduct = products[i];
        }
    }
    $('#ecomProductOptionsSelectPanel_' + prdID).find('.ddOpts').each(function () {
        drdOrder = this.innerHTML.split(':')[3];
    });
    var tempDDOpts = "";
    isPrimary = false;
    var found = false;
    var enabled = false;
    drdIndex = -1;
    $('#ecomProductOptionsSelectPanel_' + prdID).find('.ecomProductItemDropDown').each(function () {
        if (!found) {
            var ddValID = $(this).val();
            if (tempDDOpts == "") {
                tempDDOpts = ddValID;
            }
            else {
                tempDDOpts += "," + ddValID;
            }
            drdIndex++;
        }
        else {
            if (!enabled) {
                if (useCustomSelects) {
                    $(this).selectbox('enable');
                }
                else {
                    this.removeAttribute("disabled");
                }
                enabled = true;
            }
            else {
                if (useCustomSelects) {
                    $(this).selectbox('disable');
                }
                else {
                    this.setAttribute("disabled", "disabled");
                }
            }
            loading = true;
            if (useCustomSelects) {
                $(this).selectbox('change', "0", this.options[0].innerHTML);
            }
            else {
                this.selectedIndex = 0;
            }
            loading = false;
        }
        if (this == elem) {
            found = true;
        }
    });
    drdFilters = tempDDOpts;
    updateVariationData();
}

function updateVariationData() {
    showLoadingPanel("Fetching data...");
    videoData = "";
    ecomUrlLink = "";
    $('.ecomVideoButton').each(function () {
        this.style.visibility = "hidden";
    });
    $('.ecomFileButton').each(function () {
        this.style.visibility = "hidden";
    });
    $('.ecomLinkButton').each(function () {
        this.style.visibility = "hidden";
    });
    loading = true;
    var width = "0";
    var height = "0";
    if (document.getElementById('mainEcomImage_' + currProduct.productID)) {
        if (document.getElementById('mainEcomImage_' + currProduct.productID).parentNode) {
            width = document.getElementById('mainEcomImage_' + currProduct.productID).parentNode.offsetWidth;
            height = document.getElementById('mainEcomImage_' + currProduct.productID).parentNode.offsetHeight;
        }
        document.getElementById('mainEcomImage_' + currProduct.productID).style.visibility = "hidden";
    }
    else if (document.getElementById('slideShow_' + currProduct.productID)) {
        if (document.getElementById('slideShow_' + currProduct.productID).parentNode) {
            width = document.getElementById('slideShow_' + currProduct.productID).parentNode.offsetWidth;
            height = document.getElementById('slideShow_' + currProduct.productID).parentNode.offsetHeight;
        }
    }
    var thHeight = 0;
    if (document.getElementById('ecomProductSubImagesPanel_' + currProduct.productID)) {
        thHeight = document.getElementById('ecomProductSubImagesPanel_' + currProduct.productID).parentNode.offsetHeight - 20;
    }
    var pricetype = "";
    var custtext = "";
    if (document.getElementById('ecomProductPricePanel_auto_' + currProduct.productID)) {
        pricetype = "auto"
    }
    if (document.getElementById('ecomProductPricePanel_inc_' + currProduct.productID)) {
        pricetype = "inc";
        custtext = getMyAttribute(document.getElementById('ecomProductPricePanel_inc_' + currProduct.productID).parentNode.id, "text");
    }
    if (document.getElementById('ecomProductPricePanel_exc_' + currProduct.productID)) {
        pricetype = "exc";
        custtext = getMyAttribute(document.getElementById('ecomProductPricePanel_exc_' + currProduct.productID).parentNode.id, "text");
    }
    $.ajax({
        dataType: "json",
        url: "/Handlers/getVariationData.ashx?d=" + new Date().getTime(),
        type: "POST",
        data: "shopid=" + shopID + "&siteid=" + siteID + "&compid=" + companyID + "&prdid=" + currProduct.productID + "&specs=" + specialsFilter + "&drdopts=" + drdFilters +
                "&width=" + width + "&height=" + height + "&theight=" + thHeight + "&mobiv2=" + isMobileV2 + "&gecom=" + useGoogleEcom + "&primary=" + isPrimary +
                "&hastabs=" + hasTabs + "&ismulti=" + isMultiPack + "&pricetype=" + pricetype + "&custtext=" + custtext + "&preopts=" + preFilters
    }).done(function (variation) {
        if (variation.inStock) {
            if (currProduct.productID != variation.productID) {
                for (var i = 0; i < products.length; i++) {
                    if (products[i].productID == variation.productID) {
                        currProduct = products[i];
                    }
                }
            }
            if (variation.attachmentType == 1) {
                $('.uploadResultPanel').each(function () {
                    this.style.display = "inline";
                });
                $('.uploadWrapperPanel').each(function () {
                    this.style.display = "inline";
                });
                $('.uploadTextInput').each(function () {
                    this.style.display = "none";
                });
            }
            else if (variation.attachmentType == 2) {
                $('.uploadResultPanel').each(function () {
                    this.style.display = "none";
                });
                $('.uploadWrapperPanel').each(function () {
                    this.style.display = "none";
                });
                $('.uploadTextInput').each(function () {
                    this.style.display = "inline";
                });
            }
            if (optionals.length > 0) {
                for (var j = 0; j < optionals.length; j++) {
                    $('#' + optionals[j].ID).find('p').each(function () {
                        if (optionals[j].Type == "sku") {
                            this.innerHTML = variation.sku;
                        }
                        else if (optionals[j].Type == "bcode") {
                            this.innerHTML = variation.barcode;
                        }
                    });
                }
            }
            currProduct.currentVariation = variation;
            if (isPrimary && currProduct.currentVariation.url != "") {
                var url = window.location.pathname;
                url = window.location.pathname.substring(0, window.location.pathname.lastIndexOf("/"));
                url += currProduct.currentVariation.url;
                window.location = url;
            }
            else {
                var mainImage = document.getElementById('mainEcomImage_' + currProduct.productID);
                
                if (mainImage) {
                    if (isMobileV2) {
                        try {
                            $('#slideShow_' + currProduct.productID).flexslider("destroy");
                        }
                        catch (e) { }
                        mainImage.innerHTML = currProduct.currentVariation.mainImage;
                        $('#slideShow_' + currProduct.productID).flexslider({
                            animation: "slide",
                            directionNav: false,
                            controlNav: false,
                            slideDirection: "horizontal",
                            slideshowSpeed: 7000,
                            animationDuration: 600,
                            pauseOnAction: true
                        });
                    }
                    else {
                        if (currProduct.currentVariation.mainImage.indexOf("image") > -1) {
                            mainImage.style.marginTop = "0px";
                            mainImage.style.marginLeft = "0px";
                            mainImage.width = width;
                            mainImage.height = height;
                            mainImage.src = currProduct.currentVariation.mainImage;
                            mainImage.alt = currProduct.currentVariation.mainAltTag;
                        }
                        else {
                            setMainEcomImage(currProduct.currentVariation.mainImage, currProduct.productID);
                        }
                        if (currProduct.currentVariation.mainImage.split('^^')[0].indexOf("No-Image-Available") > -1) {
                            var newDiv = document.createElement("div");
                            newDiv.className = "noImageTextPanel";
                            newDiv.style.lineHeight = height;
                            newDiv.innerHTML = "<p>NO IMAGE AVALABLE</p>";
                            mainImage.parentNode.appendChild(newDiv);
                        }
                        if (currProduct.currentVariation.bannerText != "") {
                            var newDiv2 = document.createElement("div");
                            newDiv2.className = currProduct.currentVariation.bannerText;
                            mainImage.parentNode.appendChild(newDiv2);
                        }
                    }
                }
                if (document.getElementById('ecomProductSubImagesPanel_' + currProduct.productID)) {
                    document.getElementById('ecomProductSubImagesPanel_' + currProduct.productID).innerHTML = currProduct.currentVariation.thumbNails;
                }
                if (document.getElementById('ecomProductItemNamePanel_' + currProduct.productID)) {
                    document.getElementById('ecomProductItemNamePanel_' + currProduct.productID).innerHTML = currProduct.currentVariation.variationName;
                }
                if (document.getElementById('ecomTabsPanel_' + currProduct.productID)) {
                    $('#ecomTabsPanel_' + currProduct.productID).html(currProduct.currentVariation.tabsPanel);
                    $('#ecomTabsPanel_' + currProduct.productID).find('.ecomTabsWrapper').each(function () {
                        var height = (this.parentNode.offsetHeight - this.offsetHeight);
                        $('#ecomTabsPanel_' + currProduct.productID).find('.ecomTabPanelsWrapper').each(function () {
                            this.style.height = height + "px";
                        });
                    });
                }
                if (document.getElementById('ecomProductSingleDescriptionPanel_' + currProduct.productID)) {
                    document.getElementById('ecomProductSingleDescriptionPanel_' + currProduct.productID).innerHTML = currProduct.currentVariation.description;
                    if (isMobileV2) {
                        updateDescriptionHeight();
                    }
                    else {
                        var ecomDescWidget = document.getElementById('ecomProductSingleDescriptionPanel_' + currProduct.productID).parentNode;
                        if (ecomDescWidget.className.indexOf(scrollClass) > -1) {
                            $(ecomDescWidget).mCustomScrollbar("update");
                            $(ecomDescWidget).mCustomScrollbar("scrollTo", "top");
                        }
                        else {
                            ecomDescWidget.className = scrollClass;
                            $(ecomDescWidget).mCustomScrollbar({ scrollButtons: { enable: true } });
                        }
                    }
                }
                if (document.getElementById('ecomProductExtraDescriptionPanel_' + currProduct.productID)) {
                    document.getElementById('ecomProductExtraDescriptionPanel_' + currProduct.productID).innerHTML = currProduct.currentVariation.xtraDescription;
                    if (isMobileV2) {
                        updateExtraDescriptionHeight();
                    }
                    else {
                        var ecomExtraDescWidget = document.getElementById('ecomProductExtraDescriptionPanel_' + currProduct.productID).parentNode;
                        if (ecomExtraDescWidget.className.indexOf(scrollClass) > -1) {
                            $(ecomExtraDescWidget).mCustomScrollbar("update");
                            $(ecomExtraDescWidget).mCustomScrollbar("scrollTo", "top");
                        }
                        else {
                            ecomExtraDescWidget.className = scrollClass;
                            $(ecomExtraDescWidget).mCustomScrollbar({ scrollButtons: { enable: true } });
                        }
                    }
                }
                if (document.getElementById('ecomProductPricePanel_auto_' + currProduct.productID)) {
                    document.getElementById('ecomProductPricePanel_auto_' + currProduct.productID).innerHTML = currProduct.currentVariation.priceText;
                }
                if (document.getElementById('ecomProductPricePanel_inc_' + currProduct.productID)) {
                    document.getElementById('ecomProductPricePanel_inc_' + currProduct.productID).innerHTML = currProduct.currentVariation.priceText;
                }
                if (document.getElementById('ecomProductPricePanel_exc_' + currProduct.productID)) {
                    document.getElementById('ecomProductPricePanel_exc_' + currProduct.productID).innerHTML = currProduct.currentVariation.priceText;
                }
                if (document.getElementById('ecomProductQantityPanel_' + currProduct.productID)) {
                    document.getElementById('ecomProductQantityPanel_' + currProduct.productID).innerHTML = currProduct.currentVariation.stockText;
                    if (currProduct.currentVariation.stockText.indexOf("Out of Stock") > -1) {
                        $('.ecomQuantityInput').each(function () {
                            this.value = "0";
                        });
                    }
                }
                if (currProduct.currentVariation.pageTitle != "") {
                    document.title = currProduct.currentVariation.pageTitle;
                }
                if (useGoogleEcom) {
                    addDetail(currProduct.currentVariation);
                }
                getVariationOtherOptions();
                hideLoadingPanel();
            }
        }
        else {
            hideLoadingPanel();
            showPopupMessage("The product you selected is currently Out of Stock", "OK");
        }
        loading = false;
    });
}

function getVariationOtherOptions() {
    $.ajax({
        dataType: "json",
        url: "/Handlers/getVariationOtherOptions.ashx?d=" + new Date().getTime(),
        type: "POST",
        data: "shopid=" + shopID + "&compid=" + companyID + "&varid=" + currProduct.currentVariation.variationID +
                "&ddopts=" + drdFilters + "&ddord=" + drdOrder + "&ddind=" + drdIndex + "&specs=" + specialsFilter
    }).done(function (variation) {
        updateDropDowns(variation.disabledOptions, currProduct.productID);
        getEcomPromotions();
        for (var iSug = 0; iSug < ecomSuggestedArray.length; iSug++) {
            getSuggestedProducts(ecomSuggestedArray[iSug]);
        }
        if (ecomOthersPanel) {
            getOtherProducts(ecomOthersPanel);
        }
        videoData = variation.videoData;
        if (videoData != "") {
            $('.ecomVideoButton').each(function () {
                this.style.visibility = "visible";
            });
        }
        if (variation.fileData != "") {
            $('.ecomFileButton').each(function () {
                this.style.visibility = "visible";
                this.setAttribute("fid", variation.fileData);
            });
        }
        if (variation.urlLink != "") {
            $('.ecomLinkButton').each(function () {
                this.style.visibility = "visible";
                ecomUrlLink = variation.urlLink;
            });
        }
        if (variation.iframeLinks.length > 0 && ecomIframesArray.length > 0) {
            var ifPanel = "";
            for (var ifp = 0; ifp < variation.iframeLinks.length; ifp++) {
                ifPanel += "<iframe src=\"" + variation.iframeLinks[ifp].url + "\" class=\"ecomIframesItemPanel\" scrolling=\"no\" frameborder=\"0\"></iframe>";
            }

            for (var ifr = 0; ifr < ecomIframesArray.length; ifr++) {
                ecomIframesArray[ifr].innerHTML = ifPanel;
            }
        }
    });
}

function getBreadcrumbTrail() {
    $.post("/Handlers/getBreadCrumbTrail.ashx?d=" + new Date().getTime(), {
        shopid: shopID,
        compid: companyID,
        varid: currProduct.currentVariation.variationID,
        navid: advNavGroupID,
        bct: breadCrumbs
    }, function (data) {
        $('.ecomBreadCrumbPanel').each(function () {
            this.innerHTML = data;
        });
    });
}

function checkStock(elem, max) {
    if (isNaN(parseInt(elem.value, 10))) {
        showPopupMessage("please enter a number", "OK");
        elem.value = "1";
    }
    else {
        if (parseInt(elem.value, 10) == 0) {
            elem.value = "1";
        }
        if (parseInt(elem.value, 10) > max) {
            elem.value = max;
        }
    }
}

function getEcomPromotions() {
    if (ecomPromotionsArray.length > 0) {
        for (var ip = 0; ip < ecomPromotionsArray.length; ip++) {
            var ecomPromotionsWrapper = document.getElementById(ecomPromotionsArray[ip].id + 'ecomProductsWrapper');
            var ecomProductsInner = document.getElementById(ecomPromotionsArray[ip].id + 'ecomProductsInner');
            ecomProductsSize = getMyAttribute(ecomPromotionsWrapper.parentNode.id, "w") + "^" + getMyAttribute(ecomPromotionsWrapper.parentNode.id, "h");
            var maxItems = "20";
            if (getMyAttribute(ecomPromotionsWrapper.parentNode.id, "max") != "") {
                maxItems = getMyAttribute(ecomPromotionsWrapper.parentNode.id, "max");
            }
            var firstRun = true;
            if (pagesWidgetArray.length > 0) {
                if (pagesWidgetArray[0].innerHTML.indexOf("ecomProductPagesButton") > -1) {
                    firstRun = false;
                }
            }
            showLoadingPanel("Getting Shop Items");
            $.post("/Handlers/getPromotionsFiltered.ashx?d=" + new Date().getTime(), {
                siteid: siteID,
                shopid: shopID,
                compid: companyID,
                filtype: specialsFilter,
                size: ecomProductsSize,
                page: pageIndex,
                first: firstRun.toString(),
                max: maxItems
            }, function (data) {
                if (data == "No Products Available") {
                    showPopupMessage("No products available at this point.", "OK");
                }
                else {
                    var tArray = data.split("*^^*");
                    ecomProductsInner.innerHTML = tArray[0];
                    if (scrollClass == null) {
                        var thisColor;
                        $(ecomProductsInner).find(".ecomProductGroupDescriptionPanel").each(function () {
                            thisColor = $(this).css("color");
                            return false;
                        });
                        scrollClass = checkScrollColour(thisColor);
                    }
                    if (ecomPromotionsWrapper.className.indexOf(scrollClass) > -1) {
                        $(ecomPromotionsWrapper).mCustomScrollbar("update");
                    }
                    else {
                        ecomPromotionsWrapper.className = ecomPromotionsWrapper.className + " " + scrollClass;
                        $(ecomPromotionsWrapper).mCustomScrollbar({ scrollButtons: { enable: true } });
                    }

                    if (firstRun) {
                        for (var i = 0; i < pagesWidgetArray.length; i++) {
                            pagesWidgetArray[i].innerHTML = tArray[1];
                        }
                    }
                }
                hideLoadingPanel();
            });
        }
    }
}

function updateAdvNavPanels() {
    if (document.getElementById('ecomNavGroupPanel')) {
        var npanel = document.getElementById('ecomNavGroupPanel');
        var pwidth = npanel.offsetWidth;
        var awidth = 0;
        $('#ecomNavGroupPanel').find('.ecomNavGroupLink').each(function () {
            if ($(this).outerWidth() > awidth) {
                awidth = $(this).outerWidth();
            }
        });
        $('#ecomNavGroupPanel').find('.ecomNavGroupLink').each(function () {
            this.style.width = awidth + "px";
        });
        if (document.getElementById('ecomProductsSubPanel')) {
            document.getElementById('ecomProductsSubPanel').style.marginTop = "20px";
        }
    }
    updateWidgetHeight("products");
}

function getSuggestedProducts(elem) {
    if (currProduct.currentVariation.variationID != 0) {
        var maxRows = "1";
        if (getMyAttribute(elem.id, "maxrows") != "" && getMyAttribute(elem.id, "maxrows") != "null") {
            maxRows = getMyAttribute(elem.id, "maxrows");
        }
        var filType = "linkedproducts";
        if (getMyAttribute(elem.id, "tag") != "" && getMyAttribute(elem.id, "tag") != "null") {
            filType = getMyAttribute(elem.id, "tag");
        }
        buildOptFiltersText();
        $.post("/Handlers/getSuggestedProducts.ashx?d=" + new Date().getTime(), {
            siteid: siteID,
            shopid: shopID,
            compid: companyID,
            varid: currProduct.currentVariation.variationID,
            filtype: filType,
            prdid: currProduct.productID,
            maxrows: maxRows,
            width: elem.offsetWidth,
            height: elem.offsetHeight,
            advnav: isAdvNav
        }, function (data) {
            if (data == "No Products Available") {
                $(elem).find('.innerTextElement').each(function () {
                    this.style.display = "none";
                });
                $(elem).find('.innerFloat').each(function () {
                    this.innerHTML = "";
                    elemToResize2 = elem;
                    setTimeout('updateWidgetHeight("elem", "2");', 2000);
                });
            }
            else {
                $(elem).find('.innerTextElement').each(function () {
                    this.style.display = "inline";
                });
                $(elem).find('.innerFloat').each(function () {
                    this.innerHTML = data;
                    this.style.display = "inline"
                    elemToResize = elem;
                    updateWidgetHeight("elem", "1");
                });
            }
        });
    }
}

function getOtherProducts(elem) {
    if (currProduct.currentVariation.variationID != 0 && drdFilters.indexOf(",") == -1) {
        var maxRows = "1";
        if (getMyAttribute(elem.id, "maxrows") != "" && getMyAttribute(elem.id, "maxrows") != "null") {
            maxRows = getMyAttribute(elem.id, "maxrows");
        }
        buildOptFiltersText();
        $.post("/Handlers/getOtherItems.ashx?d=" + new Date().getTime(), {
            siteid: siteID,
            shopid: shopID,
            compid: companyID,
            varid: currProduct.currentVariation.variationID,
            prdid: currProduct.productID,
            prefil: drdFilters,
            maxrows: maxRows,
            width: elem.offsetWidth,
            height: elem.offsetHeight
        }, function (data) {
            if (data == "No Products Available") {
                $(elem).find('.innerTextElement').each(function () {
                    this.style.display = "none";
                });
                $(elem).find('.innerFloat').each(function () {
                    this.innerHTML = "";
                    elemToResize2 = elem;
                    setTimeout('updateWidgetHeight("elem", "2");', 2000);
                });
            }
            else {
                $(elem).find('.innerTextElement').each(function () {
                    this.style.display = "inline";
                });
                $(elem).find('.innerFloat').each(function () {
                    this.innerHTML = data;
                    this.style.display = "inline"
                    elemToResize2 = elem;
                    setTimeout('updateWidgetHeight("elem", "2");', 2000);
                });
            }
        });
    }
}

function buildOptFiltersText() {
    cusFilters = "";
    if (cusFiltersArray.length > 0) {
        for (var a = 0; a < cusFiltersArray.length; a++) {
            if (cusFilters == "") {
                cusFilters = cusFiltersArray[a];
            }
            else {
                cusFilters += "," + cusFiltersArray[a];
            }
        }
    }
}

function toggleShowAutoFilters() {
    $(".innerAutoFilters").each(function () {
        if (this.parentNode.offsetHeight > 0) {
            hideAutoFilters();
        }
        else {
            showAutoFilters();
        }
    });
}

function showAutoFilters() {
    $(".innerAutoFilters").each(function () {
        $(this.parentNode).animate({ height: this.offsetHeight + "px" }, 250);
    });
}

function hideAutoFilters() {
    $(".innerAutoFilters").each(function () {
        $(this.parentNode).animate({ height: "0px" }, 250);
    });
}

function updateDropDowns(disVals, prdID) {
    if (disVals != "") {
        var dsValArray = disVals.split(',');
        var disOptID = dsValArray[0];
        dsValArray.splice(0, 1);
        var selects = document.getElementById('ecomProductOptionsSelectPanel_' + currProduct.productID).getElementsByTagName('select');
        for (var i = 0; i < selects.length; i++) {
            var ddOptID = selects[i].id.replace("ddOption", "");
            if (ddOptID == disOptID) {
                var options = selects[i].getElementsByTagName('option');
                for (var j = 0; j < options.length; j++) {
                    options[j].removeAttribute("disabled");
                }
                for (var j = 0; j < options.length; j++) {
                    var ddValID = options[j].value;
                    for (var k = 0; k < dsValArray.length; k++) {
                        if (ddValID == dsValArray[k]) {
                            options[j].disabled = true;
                        }
                    }
                }
                if (useCustomSelects) {
                    $(selects[i]).selectbox('detach');
                    $(selects[i]).selectbox({
                        theme: "Ecom",
                        height: parseInt(selects[i].style.height.replace("px", ""), 10),
                        onChange: function (val, inst, cls) {
                            if (!loading) {
                                updateVariationDropDowns(inst.input[0], prdID);
                            }
                        },
                    });
                }
            }
        }
    }
}

//#endregion

// #region Enhanced Ecommerce Tracking

function addImpression(variation) {
    if (ga) {
        ga('ec:addImpression', {
            'id': variation.productID,
            'name': variation.productName,
            'category': variation.category,
            'brand': variation.brand,
            'variant': variation.variant,
            'list': variation.list,
            'position': variation.position
        });
    }
}

function sendPageView() {
    if (ga) {
        ga('send', 'pageview');
    }
}

function gotoProduct(id, pos, vid, url, bid) {
    showLoadingPanel();
    $.ajax({
        dataType: "json",
        url: "/Handlers/getVariationInfo.ashx?d=" + new Date().getTime(),
        type: "POST",
        data: "shopid=" + shopID + "&compid=" + companyID + "&varid=" + id + "&bunid=" + bid + "&navid=" + advNavGroupID + "&index=" + pageIndex
    }).done(function (variation) {
        if (ga) {
            ga('ec:addProduct', {
                'id': variation.productID,
                'name': variation.productName,
                'category': variation.category,
                'brand': variation.brand,
                'variant': variation.variant,
                'position': pos
            });

            ga('ec:setAction', 'click', { list: variation.list });

            ga('send', 'event', 'UX', 'click', 'Results', {
                'hitCallback': function () {
                    if (vid) {
                        gotoItemPage(variation.productID, bid, vid, url, false);
                    }
                    else {
                        gotoItemPage(variation.productID, bid, variation.variationID, url, false);
                    }
                }
            });
        }
        else {
            if (vid) {
                gotoItemPage(variation.productID, bid, vid, url, false);
            }
            else {
                gotoItemPage(variation.productID, bid, variation.variationID, url, false);
            }
        }
    });
}

function gotoItemPage(prdid, bunid, varid, url, replace) {
    $.post("/Handlers/setSessionFilters.ashx?d=" + new Date().getTime(), {
        prdid: prdid,
        varid: varid,
        prefil: preFilters,
        cusfil: cusFilters,
        specs: specialsFilter
    }, function (data) {
        if (replace) {
            window.location.replace(url);
        }
        else {
            window.location = url;
        }
    });
}

function addDetail(variation) {
    if (ga) {
        ga('ec:addProduct', {
            'id': variation.productID,
            'name': variation.productName,
            'category': variation.category,
            'brand': variation.brand,
            'variant': variation.variant + " (" + variation.variationID + ")"
        });

        ga('ec:setAction', 'detail');

        ga('send', 'pageview');
    }
}

function addToCart(basketRow, qty) {
    if (ga) {
        ga('ec:addProduct', {
            'id': basketRow.productID,
            'name': basketRow.itemName,
            'category': basketRow.googlecategory,
            'brand': basketRow.googleBrand,
            'variant': basketRow.itemVariant,
            'price': basketRow.itemPrice,
            'quantity': qty
        });
        ga('ec:setAction', 'add');
        ga('send', 'event', 'UX', 'click', 'add to basket');     // Send data using an event.
    }
}

function removeFromCart(basketRow, qty) {
    if (ga) {
        ga('ec:addProduct', {
            'id': basketRow.productID,
            'name': basketRow.itemName,
            'category': basketRow.googlecategory,
            'brand': basketRow.googleBrand,
            'variant': basketRow.itemVariant,
            'price': basketRow.itemPrice,
            'quantity': qty
        });
        ga('ec:setAction', 'remove');
        ga('send', 'event', 'UX', 'click', 'remove from basket');     // Send data using an event.
    }
}

// #endregion

//#region Basket Functions

function checkAddToBasket() {
    if (isMultiPack) {
        checkAddMultiToBasket();
    }
    else {
        addSingleToBasket();
    }
}

function checkAddMultiToBasket() {

    var error = "";
    for (var k = 0; k < products.length; k++) {
        if (products[k].currentVariation.variationID == 0) {
            error += "Item (" + products[k].productName + ") has not been selected, you must select one of each item visisble!<br/>";
        }
        else {
            if (products[k].currentVariation.priceGross == 0) {
                error += "Item (" + products[k].productName + ") has a price of 0.00 and therefore cannot be added!<br/>";
            }
            else {
                if (products[k].currentVariation.stockLevel == 0) {
                    error += "Item (" + products[k].productName + ") is currently out of stock, please try again later!<br/>";
                }
                else {
                    $('#ecomProductOptionsSelectPanel_' + products[k].productID).find('.ecomProductItemDropDown').each(function () {
                        if (getDropDowSelectedIndex(this) == 0 && this.options[0].innerHTML.indexOf("Select") == 0) {
                            error += "Item (" + products[k].productName + "), Please " + this.options[0].innerHTML + "<br/>";
                        }
                    });
                }
            }
        }
    }
    
    if (error == "") {
        addMultiToBasket();
    }
    else {
        showPopupMessage(error, "OK");
    }
}

function addMultiToBasket() {
    var quant = 1;
    var showMessage = false;
    if (document.getElementById('mainBasketButton')) {
        var btnCentreX = document.getElementById('mainBasketButton').offsetWidth / 2;
        
        var pos2 = getPosition(document.getElementById('mainBasketButton'), document.getElementById('container'));
        var btnLeft = parseInt(pos2.split("^^")[1].replace("px", ""), 10) + btnCentreX;

        for (var k = 0; k < products.length; k++) {
            if (document.getElementById('mainEcomImage_' + products[k].productID)) {

                var pos = getPosition(document.getElementById('mainEcomImage_' + products[k].productID), document.getElementById('container'));
                
                var imgCopy = document.createElement('img');
                imgCopy.src = document.getElementById('mainEcomImage_' + products[k].productID).src;
                imgCopy.style.position = "absolute";
                imgCopy.style.zIndex = "1000000";
                imgCopy.style.top = pos.split("^^")[0];
                imgCopy.style.left = pos.split("^^")[1];
                imgCopy.style.width = document.getElementById('mainEcomImage_' + products[k].productID).offsetWidth + "px";
                imgCopy.style.height = document.getElementById('mainEcomImage_' + products[k].productID).offsetHeight + "px";

                document.getElementById('container').appendChild(imgCopy);

                var imgWidth = document.getElementById('mainEcomImage_' + products[k].productID).offsetWidth / 2;
                var imgHeight = document.getElementById('mainEcomImage_' + products[k].productID).offsetHeight / 2;

                $(imgCopy).animate({ top: pos2.split("^^")[0], left: (btnLeft - (imgWidth / 2)) + "px", width: imgWidth + "px", height: imgHeight + "px" }, 500, function () {
                    $(this).animate({ left: btnLeft + "px", width: "0px", height: "0px" }, 500, function () {
                        this.parentNode.removeChild(this);
                    });
                });
                
            }
            else {
                showMessage = true;
            }
        }

        multiPacksAdded++;
    }
    else {
        showMessage = true;
    }
    for (var k = 0; k < products.length; k++) {
        var bsktRow = new BasketRow();
        bsktRow.variationID = products[k].currentVariation.variationID;
        bsktRow.navGroupID = products[k].currentVariation.navGroupID;
        bsktRow.multiPackID = multiPackID + "_" + multiPacksAdded;

        $('.uploadResultItem').each(function () {
            if (bsktRow.attachments == "") {
                bsktRow.attachments = this.id.replace("uploadResultItem_", "");
            }
            else {
                bsktRow.attachments += "," + this.id.replace("uploadResultItem_", "");
            }
        });
       
        $('#ecomProductQuantityPanel_' + products[k].productID).each(function () {
            quant = parseInt(this.value, 10);
        });
        if (quant < 1) {
            quant = 1;
        }

        if (useGoogleEcom) {
            addToCart(bsktRow, quant);
        }
        bsktRow.rowQuantity = quant;
        bsktRow.items = new Array();
        for (var j = 0; j < bsktRow.rowQuantity; j++) {
            bsktRow.items.push(new BasketItem());
        }

        basket.push(bsktRow);
    }

    multiPacksAdded++;
    if (showMessage) {
        showPopupMessage("The items have been added to your basket", "OK");
    }
    updateBasketWidgetPanel(false);
    scrollTo(0, 0);
}

function addSingleToBasket() {
    if (currProduct.currentVariation.priceGross != 0) {
        var missingAttachment = checkForSalesAttachment(currProduct.currentVariation);
        if (!missingAttachment) {
            var quant = 1;
            $('.ecomQuantityInput').each(function () {
                quant = parseInt(this.value, 10);
            });
            if (quant < 1) {
                quant = 1;
            }

            var bsktRow = null;
            var newItem = false;
            for (var i = 0; i < basket.length; i++) {
                if (basket[i].variationID == currProduct.currentVariation.variationID) {
                    bsktRow = basket[i];
                }
            }
            if (bsktRow == null) {
                bsktRow = new BasketRow();
                bsktRow.variationID = currProduct.currentVariation.variationID;
                bsktRow.navGroupID = currProduct.currentVariation.navGroupID;
                newItem = true;
            }
            if ((quant + bsktRow.rowQuantity) > currProduct.currentVariation.stockLevel) {
                quant = currProduct.currentVariation.stockLevel;
                if (currProduct.currentVariation.stockLevel == 0) {
                    showPopupMessage("This item is currently out of stock<br>Please try again later", "OK");
                }
                else {
                    showPopupMessage("You cannot order more items than there are available<br>Only " + currProduct.currentVariation.stockLevel + " item(s) available", "OK");
                }
            }
            else {
                if (quant > 0) {
                    var canAddToBasketError = "";
                    $('#ecomProductOptionsSelectPanel_' + currProduct.productID).find('.ecomProductItemDropDown').each(function () {
                        if (getDropDowSelectedIndex(this) == 0 && this.options[0].innerHTML.indexOf("Select") == 0) {
                            canAddToBasketError += "Please " + this.options[0].innerHTML + "<br/>";
                        }
                    });
                    if (canAddToBasketError == "") {
                        if (document.getElementById('mainEcomImage_' + currProduct.productID) && document.getElementById('mainBasketButton') && currProduct.currentVariation.variationID != 0) {
                            var pos = getPosition(document.getElementById('mainEcomImage_' + currProduct.productID), document.getElementById('container'));
                            var imgCopy = document.createElement('img');
                            imgCopy.src = document.getElementById('mainEcomImage_' + currProduct.productID).src;
                            imgCopy.style.position = "absolute";
                            imgCopy.style.zIndex = "1000000";
                            imgCopy.style.top = pos.split("^^")[0];
                            imgCopy.style.left = pos.split("^^")[1];
                            imgCopy.style.width = document.getElementById('mainEcomImage_' + currProduct.productID).offsetWidth + "px";
                            imgCopy.style.height = document.getElementById('mainEcomImage_' + currProduct.productID).offsetHeight + "px";

                            document.getElementById('container').appendChild(imgCopy);

                            var btnCentreX = document.getElementById('mainBasketButton').offsetWidth / 2;
                            var pos2 = getPosition(document.getElementById('mainBasketButton'), document.getElementById('container'));
                            var btnLeft = parseInt(pos2.split("^^")[1].replace("px", ""), 10) + btnCentreX;

                            var imgWidth = document.getElementById('mainEcomImage_' + currProduct.productID).offsetWidth / 2;
                            var imgHeight = document.getElementById('mainEcomImage_' + currProduct.productID).offsetHeight / 2;

                            $(imgCopy).animate({ top: pos2.split("^^")[0], left: (btnLeft - (imgWidth / 2)) + "px", width: imgWidth + "px", height: imgHeight + "px" }, 500, function () {
                                $(imgCopy).animate({ left: btnLeft + "px", width: "0px", height: "0px" }, 500, function () {
                                    imgCopy.parentNode.removeChild(imgCopy);
                                });
                            });
                        }
                        else {
                            showPopupMessage("The item has been added to your basket", "OK");
                        }
                        if (useGoogleEcom) {
                            if (bsktRow.rowQuantity > quant) {
                                removeFromCart(bsktRow, (bsktRow.rowQuantity - quant));
                            }
                            else {
                                addToCart(bsktRow, (quant - bsktRow.rowQuantity));
                            }
                        }

                        var attchs = "";
                        $('.uploadResultItem').each(function () {
                            if (attchs == "") {
                                attchs = this.id.replace("uploadResultItem_", "");
                            }
                            else {
                                attchs += "," + this.id.replace("uploadResultItem_", "");
                            }
                        });
                        bsktRow.attachments = attchs;
                        bsktRow.rowQuantity += quant;
                        bsktRow.items = new Array();
                        for (var j = 0; j < bsktRow.rowQuantity; j++) {
                            bsktRow.items.push(new BasketItem());
                        }
                        if (newItem) {
                            basket.push(bsktRow);
                        }
                        updateBasketWidgetPanel(false);
                        scrollTo(0, 0);
                    }
                    else {
                        showPopupMessage(canAddToBasketError, "OK");
                    }
                }
            }
        }
    }
    else {
        showPopupMessage("This item has a price of 0.00 and therefore cannot be added!", "OK");
    }
}

function checkForSalesAttachment(tempVar) {
    var attachMissing = true;
    if (tempVar.attachmentType > 0) {
        $('.uploadResultItem').each(function () {
            attachMissing = false;
        });
        if (attachMissing) {
            if (tempVar.attachmentType == 2) {
                $('.uploadTextInput').each(function () {
                    var test = this.onblur.toString().split('\'')[1];
                    if (this.value != "" && this.value != test) {
                        showLoadingPanel();
                        handleSalesAttchTextUpload(this, tempVar.productID, tempVar.variationID);
                    }
                    else {
                        showPopupMessage("This item requires an attachment please either upload a file or type your text in the field provided!", "OK");
                    }
                });
            }
            else {
                showPopupMessage("This item requires an attachment please either upload a file or type your text in the field provided!", "OK");
            }
        }
    }
    else {
        attachMissing = false;
    }
    return attachMissing;
}

function getPosition(elem1, elem2) {
    var pTop = elem1.offsetTop;
    var pLeft = elem1.offsetLeft;
    var telem = elem1.parentNode;
    while (telem != elem2 && telem != null) {
        pTop += telem.offsetTop;
        pLeft += telem.offsetLeft;
        telem = telem.parentNode;
    }
    return pTop + "px^^" + pLeft + "px";
}

function updateBasketWidgetPanel() {
    if (basket.length > 0) {
        $.ajax({
            dataType: "json",
            url: "/Handlers/updateBasketWidgetPanel.ashx?d=" + new Date().getTime(),
            type: "POST",
            data: JSON.stringify({ siteID: siteID, companyID: companyID, shopID: shopID, basketRows: basket })
        }).done(function (result) {
            basket = result.basketRows;
            $(".ecomBasketQuant").each(function () {
                if (this.getAttribute("tag") == "items") {
                    this.innerHTML = result.totalQuantity;
                }
                if (this.getAttribute("tag") == "price") {
                    this.innerHTML = result.totalPrice;
                }
            });
            if (document.getElementById('mobiV2BasketCount')) {
                document.getElementById('mobiV2BasketCount').innerHTML = result.totalQuantity;
                document.getElementById('mobiV2BasketCount').style.visibility = "visible";
            }
            updateCookie();
        });
    }
    else {
        if (document.getElementById('mobiV2BasketCount')) {
            document.getElementById('mobiV2BasketCount').innerHTML = "0";
            document.getElementById('mobiV2BasketCount').style.visibility = "hidden";
        }
        $(".ecomBasketQuant").each(function () {
            if (this.getAttribute("tag") == "items") {
                this.innerHTML = "0";
            }
            if (this.getAttribute("tag") == "price") {
                this.innerHTML = currencySign + "0.00";
            }
        });
        updateCookie();
    }
}

function updateBasketRequired(elem, id) {
    showLoadingPanel();
    $.get("/Handlers/getStock.ashx?varid=" + id + "&d=" + new Date().getMilliseconds(), function (data) {
        var stockLevel = parseInt(data, 10);
        var requ = 0;
        if (elem) {
            requ = parseInt(elem.value, 10);
        }
        for (var i = 0; i < basket.length; i++) {
            if (basket[i].variationID == id) {
                var quantity = basket[i].rowQuantity;;
                if (requ == 0) {
                    var mpID = basket[i].multiPackID;
                    if (mpID != "") {
                        for (var j = 0; j < basket.length; j++) {
                            if (basket[j].multiPackID == mpID) {
                                basket[j].multiPackID = "";
                                basket[j].items[0].itemPriceGross = basket[j].itemPrice;
                                basket[j].items[0].itemDiscount = 0;
                            }
                        }
                    }
                    if (useGoogleEcom) {
                        removeFromCart(basket[i], quantity)
                    }
                    basket.splice(i, 1);
                }
                else {
                    if (basket[i].multiPackID != "") {
                        showPopupMessage("This item is part of a Bundle and therefore cannot be increased, you can add the Bundle again though.", "OK");
                    }
                    else {
                        if (requ > stockLevel) {
                            requ = stockLevel;
                            if (useGoogleEcom) {
                                if (requ > quantity) {
                                    addToCart(basket[i], (requ - quantity))
                                }
                                if (requ < quantity) {
                                    removeFromCart(basket[i], (quantity - requ))
                                }
                            }
                            showPopupMessage("This quantity you required is not available at this time.", "OK");
                        }
                        var item;
                        if (basket[i].items.length > 0) {
                            item = basket[i].items[0];
                        }
                        basket[i].items = new Array();
                        for (var j = 0; j < requ; j++) {
                            var newItem = new BasketItem();
                            newItem.itemPriceGross = item.itemPriceGross;
                            newItem.itemDiscount = item.itemDiscount;
                            newItem.itemShipping = item.itemShipping;
                            newItem.itemSaleName = item.itemSaleName;
                            basket[i].items.push(newItem);
                        }
                        basket[i].rowQuantity = requ;
                    }
                }
            }
        }
        updateCookie();
        if (preShip) {
            buildModalBasket();
        }
        else {
            checkShipping();
        }
        if (basket.length == 0) {
            HideModal2();
        }
        updateBasketWidgetPanel(false);
    });
}

function removeItem(varid) {
    updateBasketRequired(null, varid)
}

function emptyBasket() {
    basket = new Array();
    setCookie("");
    updateBasketWidgetPanel(false);
    HideModal2();
}

function formatPrice(price) {
    var increment = false;
    var strPart1 = price.toString();
    var strPart2 = "00";
    if (strPart1.indexOf(".") > -1) {
        strPart2 = strPart1.split('.')[1];
        strPart1 = strPart1.split('.')[0];
    }
    var isZero = false;
    if (strPart2.length > 2) {
        if (strPart2.indexOf("0") == 0) {
            isZero = true;
        }
        var part2 = parseInt(strPart2.substring(0, 2));
        var thirdNum = parseInt(strPart2[2]);
        if (thirdNum > 4) {
            part2++;
        }
        if (part2 == 100) {
            part2 = 0;
            var part1 = parseInt(strPart1);
            part1++;
            strPart1 = part1.toString();
        }
        strPart2 = part2.toString();
    }
    if (strPart2.length == 1) {
        if (isZero) {
            strPart2 = "0" + strPart2;
        }
        else {
            strPart2 += "0";
        }
    }
    if (strPart1.length > 3) {
        var strTemp = "";
        var nCount = 1;
        for (var k = strPart1.length - 1; k > -1; k--) {
            strTemp += strPart1[k];
            if (nCount % 3 == 0) {
                strTemp += ",";
            }
            nCount++;
        }
        strPart1 = strTemp.split("").reverse().join("");
    }
    if (showZeros) {
        return strPart1 + "." + strPart2;
    }
    else {
        return strPart1;
    }
}

function goToBasket() {
    if (basket.length > 0) {
        currentShipping = null;
        shippingIndex = 0;
        preShip = true;
        buildModalBasket();
    }
}

function checkShipping() {
    if (shipCountryID != "") {
        showLoadingPanel("Building...");
        preShip = false;
        $.ajax({
            dataType: "json",
            url: "/Handlers/checkShipping.ashx?d=" + new Date().getTime(),
            type: "POST",
            data: JSON.stringify({
                siteID: siteID, companyID: companyID, shopID: shopID, countryID: shipCountryID, address1: shipAdd1, address2: shipAdd2, town: shipTown,
                county: shipCounty, postcode: shipPCode, country: shipCountry, price: priceToSubmit, shipIndex: shippingIndex, basketRows: basket
            })
        }).done(function (result) {
            if (result.isFree) {
                currentShipping = null;
                buildModalBasket();
            }
            else {
                currentShipping = result;
                if (!result.isBackend) {
                    basket = result.basketRows;
                }
                buildModalBasket();
            }
        });
    }
}

function buildModalBasket() {
    showLoadingPanel();

    giveVATReliefOnMarkedProducts = (document.cookie.indexOf("applyVATRelief") > -1) ? true : false;

    if (firstBasketRun) {
        promoCode = "firstRun";
    }
    $.ajax({
        dataType: "json",
        url: "/Handlers/buildBasketSummary.ashx?d=" + new Date().getTime(),
        type: "POST",
        data: JSON.stringify({
            siteID: siteID,
            companyID: companyID,
            customerID: ecomCustomerID,
            shopID: shopID,
            preShip: preShip,
            promoCode: promoCode,
            mobiv2: isMobileV2,
            basketRows: basket,
            shippingIndex: shippingIndex,
            shipping: currentShipping,
            giveVATReliefOnMarkedProducts: giveVATReliefOnMarkedProducts,
            shippingAddress: shipping,
            agreedToTermsConditions: agreedToTermsConditions
        })
    }).done(function (result) {
        basket = result.basketRows;
        VATExemptShipAddress = result.VATExemptShipAddress;

        updateBasketWidgetPanel(false);

        var showVATReliefOption = false; // Set to false once it can read the items
        // loop through basket and check for presence of checkout option related flags

        for (var i = 0; i < basket.length; i++) {
            var basketRow = basket[i];
            if (basketRow.offerVATRelief) showVATReliefOption = true;
            if (showVATReliefOption) break;
        }

        if (showVATReliefOption) {
            displayBasket(result, showVATReliefOption);
        }
        else {
            displayBasket(result);
        }
    });
}

function displayBasket(result, showVATReliefOption) {
    showVATReliefOption = showVATReliefOption || false;

    basket = result.basketRows;

    var itemsPanel = "";
    var shipsPanel = "";
    var promoPanel = "";
    var termsPanel = "";
    var shipItems = "";
    var loyalPanel = "";
    var label = "";
    if (!preShip && currentShipping != null) {
        for (var k = 0; k < currentShipping.options.length; k++) {
            var shipItem = currentShipping.options[k];
            if (shippingIndex == k) {
                label = shipItem.name;
                shipItems += "<option value=\"" + shipItem.ID + "\" selected=\"selected\">" + shipItem.name + "</option>";
            }
            else {
                shipItems += "<option value=\"" + shipItem.ID + "\">" + shipItem.name + "</option>";
            }
        }
    }
    var totalPanel = "";
    var readOnly = "";
    if (isMultiPack) {
        readOnly = "readonly=\"readonly\"";
    }
    var quantReadOnly = "";
    if (!preShip && readOnly == "") {
        quantReadOnly = "readonly=\"readonly\"";
    }
    var panel = "";
    if (isMobileV2) {

        // #region Items
        for (var i = 0; i < basket.length; i++) {
            var bsktRow = basket[i];

            itemsPanel += "<div class=\"ecomOptionItemMobi\">" +
                            "<div class=\"innerTextElement\" style=\"margin:5px 0px 5px 0px;\">" +
                                "<div class=\"ecomOptionLabelMobi\" style=\"max-width:580px;margin-left:10px;\">" +
                                    bsktRow.itemName + bsktRow.itemVariant +
                                "</div>" +
                                "<input type=\"button\" class=\"ecomOptionClearBasketButtonMobi\" onclick=\"removeItem(" + bsktRow.variationID + ");\" value=\"\" />" +
                                "<div class=\"ecomOptionLabelMobi\" style=\"width:180px;float:right;text-align:right;\">" +
                                    currencySign + formatPrice(bsktRow.rowPriceGross) +
                                "</div>" +
                                "<input  class=\"ecomOptionInputMobi\" style=\"float:right;width:60px;text-align:center;margin-right:10px;text-indent:0px;\" " + readOnly + quantReadOnly + " value=\"" + bsktRow.rowQuantity + "\" onkeyup=\"updateBasketRequired(this, " + bsktRow.variationID + ", " + bsktRow.stockLevel + ");\" type=\"text\">" +
                            "</div>" +
                            "</div>";
        }

        // #endregion

        //#region Totals

        if (result.totalDiscount > 0) {
            totalPanel += "<div class=\"innerTextElement\">" +
                            "<input type=\"button\" class=\"ecomOptionClearBasketButtonMobi\" style=\"visibility:hidden;\" value=\"\" />" +
                            "<div class=\"ecomOptionTitleMobi\" style=\"width:300px;float:right;text-align:right;\">" + currencySign + formatPrice(result.totalDiscount) + "</div>" +
                            "<div class=\"ecomOptionTitleMobi\" style=\"float:right;text-align:right;\">Discounts:</div>" +
                        "</div>";
        }
        if (result.useVat) {
            totalPanel += "<div class=\"innerTextElement\">" +
                            "<input type=\"button\" class=\"ecomOptionClearBasketButtonMobi\" style=\"visibility:hidden;\" value=\"\" />" +
                            "<div class=\"ecomOptionTitleMobi\" style=\"width:300px;float:right;text-align:right;\">" + currencySign + formatPrice(result.totalNet) + "</div>" +
                            "<div class=\"ecomOptionTitleMobi\" style=\"float:right;text-align:right;\">Total Net:</div>" +
                        "</div>" +
                        "<div class=\"innerTextElement\">" +
                            "<input type=\"button\" class=\"ecomOptionClearBasketButtonMobi\" style=\"visibility:hidden;\" value=\"\" />" +
                            "<div class=\"ecomOptionTitleMobi\" style=\"width:300px;float:right;text-align:right;\">" + currencySign + formatPrice(result.totalVAT) + "</div>" +
                            "<div class=\"ecomOptionTitleMobi\" style=\"float:right;text-align:right;\">Total VAT:</div>" +
                        "</div>";
        }
        else {
            totalPanel += "<div class=\"innerTextElement\">" +
                            "<input type=\"button\" class=\"ecomOptionClearBasketButtonMobi\" style=\"visibility:hidden;\" value=\"\" />" +
                            "<div class=\"ecomOptionTitleMobi\" style=\"width:300px;float:right;text-align:right;\">" + currencySign + formatPrice(result.totalGross) + "</div>" +
                            "<div class=\"ecomOptionTitleMobi\" style=\"float:right;text-align:right;\">Total:</div>" +
                        "</div>";
        }
        if (result.totalShipping > 0) {
            totalPanel += "<div class=\"innerTextElement\">" +
                            "<input type=\"button\" class=\"ecomOptionClearBasketButtonMobi\" style=\"visibility:hidden;\" value=\"\" />" +
                            "<div id=\"shippingToSubmit\" shipping=\"" + formatPrice(result.totalShipping) + "\" class=\"ecomOptionTitleMobi\" style=\"width:300px;float:right;text-align:right;\">" + currencySign + formatPrice(result.totalShipping) + "</div>" +
                            "<div class=\"ecomOptionTitleMobi\" style=\"float:right;text-align:right;\">Shipping:</div>" +
                        "</div>";
        }
        totalPanel += "<div class=\"innerTextElement\">" +
                        "<input type=\"button\" class=\"ecomOptionClearBasketButtonMobi\" onclick=\"emptyBasket();\" value=\"\" />" +
                        "<div id=\"totalToSubmit\" total=\"" + formatPrice(result.grandTotal) + "\" class=\"ecomOptionTotalMobi\" style=\"width:300px;float:right;text-align:right;\">" + currencySign + formatPrice(result.grandTotal) + "</div>" +
                        "<div class=\"ecomOptionTotalMobi\" style=\"float:right;text-align:right;\">Grand Total:</div>" +
                    "</div>";

        // #endregion

        // #region Shipping

        if (result.offerVATRelief) {
            if (giveVATReliefOnMarkedProducts) {
                shipsPanel = "<div style=\"margin-bottom: 5px; min-height: 50px;\">" +
                        "<div class=\"ecomOptionTitleMobi\" style=\"margin-left:10px;width:450px;text-align:right;\">Claim VAT Relief?</div>" +
                        "<input type=\"checkbox\" id=\"claim-vat-relief-checkbox-mobi\" onclick=\"processCheckoutOption('vatrelief', 'remove');\" checked/>" +
                        "<div class=\"ecomOptionTitleMobi\">(worth " + currencySign + result.totalVATRelief + ")</div>" +
                    "</div>";
            } else {
                shipsPanel = "<div style=\"margin-bottom: 5px; min-height: 50px;\">" +
                        "<div class=\"ecomOptionTitleMobi\" style=\"margin-left:10px;width:450px;text-align:right;\">Claim VAT Relief?</div>" +
                        "<input type=\"checkbox\" id=\"claim-vat-relief-checkbox-mobi\" onclick=\"processCheckoutOption('vatrelief', 'apply');\"/>" +
                    "</div>";
            }
        }
        if (tradeUserID == "0" && promoCode == "firstRun" && preShip) {
            shipsPanel += "<div class=\"ecomOptionTitleMobi\" style=\"margin-left:10px;width:450px;text-align:right;clear:both\">Promotion Code:</div>" +
                        "<input type=\"text\" class=\"ecomOptionInputMobi\" id=\"promoCodeInput\" style=\"width:450px;margin-left:10px;\">";
        }
        else if (!preShip && currentShipping != null) {
            if (currentShipping.options.length > 1 && !currentShipping.isFreeAbove) {
                var label = "";
                shipsPanel += "<div class=\"ecomOptionTitleMobi\" style=\"margin-left:10px;width:450px;text-align:right;\">Shipping Options:</div>" +
                                "<select class=\"ecomOptionSelectMobi\" id=\"shippingOptionsSelect\" style=\"margin:0px 0px 0px 10px;width:400px;\" onchange=\"updateShippingOption(this);\">" +
                                shipItems +
                            "</select>";
            }
            else if (currentShipping.isFreeAbove) {
                shipsPanel += "<div id=\"ecomOptionLabelMobi\" class=\"ecomOptionLabel\" style=\"position:relative;float:left;width:500px;\">" +
                                    "Shipping is free, order total greater than " + currencySign + formatPrice(currentShipping.freeAbove) +
                                "</div>";
            }
        }

        if (!preShip && billing.length > 0) {
            shipsPanel += "<div id=\"orderNote\" style=\"clear:both; float: left; width: 900px;\">" +
                "<div class=\"ecomOptionTitleMobi\" style=\"text-align:right; padding-left: 70px; margin-bottom: 10px\">Delivery Instructions:</div>" +
                "<textarea id=\"txtAreaNote\" style=\"width: 825px; height: 150px; margin-left: 75px;\" class=\"ecomOptionInputMobi\"></textarea>" +
            "</div>";
        }

        if (result.forceTCsToOrder && !agreedToTermsConditions) {
            shipsPanel += "<div class=\"ecomOptionLabelMobi\" style=\"margin:20px;\">Please acknowledge you have read the "
                + "<a href=\"/terms-and-conditions.html\" target=\"_blank\">Terms and Conditions</a> before continuing with your order."
                + "<input id=\"IAcceptTerms\" type=\"checkbox\"/ class=\"mobi\">"
                + "</div>";
        }

        // #endregion

        panel = "<div class=\"innerTextElement\">" +
                    "<div class=\"innerTextElement\">" +
                        "<div class=\"ecomBasketIconMobi\"></div>" +
                        "<div class=\"ecomOptionLabelMobi\" style=\"line-height:110px;\">Your Order Summary</div>" +
                        "<input type=\"button\" class=\"ecomOptionContinueButtonMobi\" onclick=\"resetBasketStartUps();\" value=\"\" />" +
                    "</div>" +
                    "<div class=\"ecomOptionItemMobi\">" +
                        "<div class=\"ecomOptionTitleMobi\" style=\"margin-left:10px;\">Item Name</div>" +
                        "<div class=\"ecomOptionTitleMobi\" style=\"width:170px;float:right;text-align:right;margin-right:70px;\">Price</div>" +
                        "<div class=\"ecomOptionTitleMobi\" style=\"width:160px;float:right;text-align:center;\">Items</div>" +
                    "</div>" +
                    "<div id=\"mobiV2SummaryItemsInnerPanel\" class=\"innerTextElement\">" +
                        itemsPanel +
                    "</div>" +
                    "<div class=\"ecomOptionItemMobi\" style=\"background-image:url(//image.contentys.com/pageServer/trans_50.png);\">" +
                        "<div id=\"mobiV2SummaryTotalsPanel\" class=\"innerTextElement\" style=\"margin:10px 0px 10px 0px;float:left;\">" +
                            totalPanel +
                        "</div>" +
                    "</div>" +
                    "<div class=\"ecomOptionItemMobi\">" +
                        "<div class=\"innerTextElement\" style=\"margin:10px 0px 10px 0px;float:left;\">" +
                            shipsPanel +
                        "</div>" +
                    "</div>" +
                    "<div  id=\"paymentGatewayOptionsMobi\" class=\"ecomOptionItemMobi\"></div>" +
                    "<div class=\"innerTextElement\" style=\"margin:20px 0px 20px 0px;\">" +
                        "<input type=\"button\" class=\"ecomOptionCheckoutButtonMobi\" style=\"margin-right:20px;\" onclick=\"" + result.functionName + "\" value=\"\" />" +
                    "</div>" +
                "</div>";
        document.getElementById('mobiV2MainBasketInnerPanel').innerHTML = panel;
        if (document.getElementById('mobiV2MainBasketPanel').offsetWidth < 600) {
            showMobiV2Panel('mobiV2MainBasketPanel');
        } else {
            resizeMobileContainer('mobiV2MainBasketPanel');
        }
    }
    else {
        var lastItemClass = "ecomModalSummaryItemPanelLight";
        // #region Headers

        var headPanel = "<div class=\"ecomOptionLabel\" style=\"top:30px;left:65px;\">Your Order Summary</div>" +
                        "<input type=\"button\" class=\"ecomOptionContinueButton\" value=\"\" onclick=\"resetBasketStartUps();\" />" +
                        "<div class=\"ecomOptionTitle\" style=\"top:70px;left:24px;width:910px;\">" +
                            "<div class=\"ecomOptionTitle\" style=\"position:relative;float:left;font-size:16px;margin-left:5px;\">Items in Basket</div>" +
                            "<div class=\"ecomOptionTitle\" style=\"position:relative;float:right;font-size:14px;width:80px;text-align:center;margin-right:20px;\">Total</div>" +
                            "<div class=\"ecomOptionTitle\" style=\"position:relative;float:right;font-size:14px;width:80px;text-align:center;\">Discount</div>";
        if (result.useVat) {
            headPanel += "<div class=\"ecomOptionTitle\" style=\"position:relative;float:right;font-size:14px;width:80px;text-align:center;\">VAT</div>";
        }
        headPanel += "<div class=\"ecomOptionTitle\" style=\"position:relative;float:right;font-size:14px;width:80px;text-align:center;\">Quantity</div>" +
                        "<div class=\"ecomOptionTitle\" style=\"position:relative;float:right;font-size:14px;width:80px;text-align:center;\">Item Cost</div>";
        if (result.offerVATRelief) {
            headPanel += "<div class=\"ecomOptionTitle\" style=\"position:relative;float:right;font-size:14px;width:80px;text-align:center;\">VAT Relief</div>";
        }
        headPanel += "</div>";

        // #endregion

        // #region Items

        var pWidth = "550";
        if (result.useVat || result.offerVATRelief) {
            pWidth = "470";
        }

        for (var i = 0; i < basket.length; i++) {
            var bsktRow = basket[i];

            itemsPanel += "<div class=\"" + lastItemClass + "\">" +
                            "<div class=\"ecomOptionLabel\" style=\"top:0px;left:5px;font-size:12px;width:" + pWidth + "px;height:34px;overflow:hidden;\">" +
                                "<span style=\"font-weight:bold;\">" + bsktRow.itemName + " </span>" + bsktRow.itemVariant +
                                "</div>";
            if (result.useVat) {
                itemsPanel += "<input type=\"button\" value=\"\" class=\"ecomBasketDeleteButton\" onclick=\"removeItem(" + bsktRow.variationID + ");\" style=\"float:right;\" />";
                itemsPanel += "<div class=\"ecomOptionLabel\" style=\"position:relative;float:right;font-size:14px;width:80px;text-align:center;\">" +
                                currencySign + formatPrice(bsktRow.rowPriceGross) +
                            "</div>";
                itemsPanel += "<div class=\"ecomOptionLabel\" style=\"position:relative;float:right;font-size:14px;width:80px;text-align:center;\">" +
                                currencySign + formatPrice(bsktRow.rowDiscount) +
                            "</div>";
                itemsPanel += "<div class=\"ecomOptionLabel\" style=\"position:relative;float:right;font-size:14px;width:80px;text-align:center;\">" +
                                currencySign + formatPrice(bsktRow.rowPriceVAT) +
                            "</div>";
                itemsPanel += "<input class=\"ecomOptionTitle ecomOptionInput\" " + readOnly + quantReadOnly + " style=\"position:relative;float:right;width:48px;text-align:center;text-indent:0px;height:22px;line-height:24px;margin:5px 16px 0px 16px;\" value=\"" + bsktRow.rowQuantity + "\" onkeyup=\"updateBasketRequired(this, " + bsktRow.variationID + ");\" type=\"text\">" +
                            "<div class=\"ecomOptionLabel\" style=\"position:relative;float:right;font-size:14px;width:80px;text-align:center;font-weigth:bold;\">" +
                                currencySign + formatPrice(bsktRow.itemPrice) +
                            "</div>";

            }
            else {

                itemsPanel += "<input type=\"button\" value=\"\" class=\"ecomBasketDeleteButton\" onclick=\"removeItem(" + bsktRow.variationID + ");\" style=\"float:right;\" />";
                itemsPanel += "<div class=\"ecomOptionLabel\" style=\"position:relative;float:right;font-size:14px;width:80px;text-align:center;\">" +
                                currencySign + formatPrice(bsktRow.rowPriceGross) +
                            "</div>";
                itemsPanel += "<div class=\"ecomOptionLabel\" style=\"position:relative;float:right;font-size:14px;width:80px;text-align:center;\">" +
                                currencySign + formatPrice(bsktRow.rowDiscount) +
                            "</div>";
                itemsPanel += "<input class=\"ecomOptionTitle ecomOptionInput\"" + readOnly + quantReadOnly + " style=\"position:relative;float:right;width:48px;text-align:center;text-indent:0px;height:22px;line-height:24px;margin:5px 16px 0px 16px;\" value=\"" + bsktRow.rowQuantity + "\" onkeyup=\"updateBasketRequired(this, " + bsktRow.variationID + ");\" type=\"text\">" +
                            "<div class=\"ecomOptionLabel\" style=\"position:relative;float:right;font-size:14px;width:80px;text-align:center;font-weigth:bold;\">" +
                                currencySign + formatPrice(bsktRow.itemPrice) +
                            "</div>";

            }

            if (result.offerVATRelief) {
                itemsPanel += "<div class=\"ecomOptionLabel\" style=\"position:relative;float:right;font-size:14px;width:80px;text-align:center;\">";
                if (giveVATReliefOnMarkedProducts && bsktRow.VATReliefApplied) {
                    itemsPanel += '<div onclick="processCheckoutOption(\'vatrelief\', \'remove\');" title="VAT relief applied - click to disable for this order" class="ecomOptionTickPanelOn" style="top:7px;left:30px"></div>';
                } else if (bsktRow.offerVATRelief) {
                    itemsPanel += '<div onclick="processCheckoutOption(\'vatrelief\', \'apply\');" title="VAT relief available - click to claim for this order" class="ecomOptionTickPanelOff" style="top:7px;left:30px"></div>';
                } else {
                    itemsPanel += '';
                }
                itemsPanel += "</div>";
            }

            if (bsktRow.attachments != "") {
                itemsPanel += '<div class="attachmentIcon"></div>';
            }

            itemsPanel += "</div>";

            if (lastItemClass == "ecomModalSummaryItemPanelLight") {
                lastItemClass = "ecomModalSummaryItemPanelDark";
            }
            else {
                lastItemClass = "ecomModalSummaryItemPanelLight";
            }
        }

        // #endregion

        //#region Totals

        if (giveVATReliefOnMarkedProducts) {
            if (result.totalVATRelief > 0) {
                totalPanel += "<div class=\"ecomModalSummaryTotalsPanel\">" +
                        "<div class=\"ecomOptionLabel\" style=\"top:4px;left:0px;font-size:14px;width:235px;text-align:right;\">VAT Relief:</div>" +
                        "<div class=\"ecomModalSummaryItemPanelLight\" style=\"float:right;width:160px;\">" +
                            "<div class=\"ecomOptionLabel\" style=\"top:0px;left:0px;font-size:14px;width:145px;text-align:right;\">-" + currencySign + formatPrice(result.totalVATRelief) + "</div>" +
                        "</div>" +
                    "</div>";
            }
        }

        if (result.VATExemptShipAddress) {
            if (result.totalVATExemptAddress > 0) {
                totalPanel += "<div class=\"ecomModalSummaryTotalsPanel\">" +
                        "<div class=\"ecomOptionLabel\" style=\"top:4px;left:0px;font-size:14px;width:235px;text-align:right;\">VAT Exemption:</div>" +
                        "<div class=\"ecomModalSummaryItemPanelLight\" style=\"float:right;width:160px;\">" +
                            "<div class=\"ecomOptionLabel\" style=\"top:0px;left:0px;font-size:14px;width:145px;text-align:right;\">-" + currencySign + formatPrice(result.totalVATExemptAddress) + "</div>" +
                        "</div>" +
                    "</div>";
            }
        }

        if (result.totalDiscount > 0) {
            totalPanel += "<div class=\"ecomModalSummaryTotalsPanel\">" +
                            "<div class=\"ecomOptionLabel\" style=\"top:4px;left:0px;font-size:14px;width:235px;text-align:right;\">Discounts:</div>" +
                            "<div class=\"ecomModalSummaryItemPanelLight\" style=\"float:right;width:160px;\">" +
                                "<div class=\"ecomOptionLabel\" style=\"top:0px;left:0px;font-size:14px;width:145px;text-align:right;\">-" + currencySign + formatPrice(result.totalDiscount) + "</div>" +
                            "</div>" +
                        "</div>";
        }
        if (result.useVat) {
            totalPanel += "<div class=\"ecomModalSummaryTotalsPanel\">" +
                            "<div class=\"ecomOptionLabel\" style=\"top:4px;left:0px;font-size:14px;width:235px;text-align:right;\">Total Net:</div>" +
                            "<div class=\"ecomModalSummaryItemPanelLight\" style=\"float:right;width:160px;\">" +
                                "<div class=\"ecomOptionLabel\" style=\"top:0px;left:0px;font-size:14px;width:145px;text-align:right;\">" + currencySign + formatPrice(result.totalNet) + "</div>" +
                            "</div>" +
                        "</div>" +
                        "<div class=\"ecomModalSummaryTotalsPanel\">" +
                            "<div class=\"ecomOptionLabel\" style=\"top:4px;left:0px;font-size:14px;width:235px;text-align:right;\">Total VAT:</div>" +
                            "<div class=\"ecomModalSummaryItemPanelLight\" style=\"float:right;width:160px;\">" +
                                "<div class=\"ecomOptionLabel\" style=\"top:0px;left:0px;font-size:14px;width:145px;text-align:right;\">" + currencySign + formatPrice(result.totalVAT) + "</div>" +
                            "</div>" +
                        "</div>";
        }
        else {
            totalPanel += "<div class=\"ecomModalSummaryTotalsPanel\">" +
                            "<div class=\"ecomOptionLabel\" style=\"top:4px;left:0px;font-size:14px;width:235px;text-align:right;\">Total:</div>" +
                            "<div class=\"ecomModalSummaryItemPanelLight\" style=\"float:right;width:160px;\">" +
                                "<div class=\"ecomOptionLabel\" style=\"top:0px;left:0px;font-size:14px;width:145px;text-align:right;\">" + currencySign + formatPrice(result.totalGross) + "</div>" +
                            "</div>" +
                        "</div>";
        }

        if (result.totalShipping > 0) {
            totalPanel += "<div class=\"ecomModalSummaryTotalsPanel\">" +
                            "<div class=\"ecomOptionLabel\" style=\"top:4px;left:0px;font-size:14px;width:235px;text-align:right;\">Shipping:</div>" +
                            "<div class=\"ecomModalSummaryItemPanelLight\" style=\"float:right;width:160px;\">" +
                                "<div id=\"shippingToSubmit\" shipping=\"" + formatPrice(result.totalShipping) + "\" class=\"ecomOptionLabel\" style=\"top:0px;left:0px;font-size:14px;width:145px;text-align:right;\">" + currencySign + formatPrice(result.totalShipping) + "</div>" +
                            "</div>" +
                        "</div>";
        }
        if (result.loyaltyPoints > 0) {
            totalPanel += "<div class=\"ecomModalSummaryTotalsPanel\">" +
                            "<div class=\"ecomOptionLabel\" style=\"top:4px;left:0px;font-size:14px;width:235px;text-align:right;\">Loyalty Discount:</div>" +
                            "<div class=\"ecomModalSummaryItemPanelLight\" style=\"float:right;width:160px;\">" +
                                "<div id=\"LoyaltyPointsValue\" class=\"ecomOptionLabel\" style=\"top:0px;left:0px;font-size:14px;width:145px;text-align:right;\">" + currencySign + "0.00</div>" +
                            "</div>" +
                        "</div>";
        }

        totalPanel += "<div class=\"ecomModalSummaryTotalsPanel\">" +
                        "<div class=\"ecomOptionTitle\" style=\"top:4px;left:0px;width:235px;text-align:right;font-size:18px;\">Grand Total:</div>" +
                        "<div class=\"ecomModalSummaryItemPanelDark\" style=\"float:right;width:160px;\">" +
                            "<div id=\"totalToSubmit\" total=\"" + formatPrice(result.grandTotal) + "\" class=\"ecomOptionTitle\" style=\"top:0px;left:0px;width:145px;text-align:right;font-size:18px;\">" + currencySign + formatPrice(result.grandTotal) + "</div>" +
                        "</div>" +
                    "</div>" +
                    "<div class=\"ecomModalSummaryTotalsPanel\" style=\"height:90px;margin-top:10px;\">" +
                        "<input type=\"button\" class=\"ecomOptionClearBasketButton\" onclick=\"emptyBasket();\" value=\"\" />" +
                        "<input type=\"button\" class=\"ecomOptionCheckoutButton\" onclick=\"" + result.functionName + "\" style=\"top:0px;left:210px;\" value=\"\" />" +
                    "</div>";

        // #endregion

        // #region Shipping

        if (tradeUserID == "0" && promoCode == "firstRun" && preShip) {
            promoPanel = "<div id=\"ecomModalSummaryPromoPanel\">" +
                            "<div class=\"ecomOptionLabel\" style=\"position:relative;float:none;font-size:14px;\">If you have a promotion code, please enter it here</div>" +
                            "<div class=\"ecomOptionTitle\" style=\"position:relative;float:left;font-size:16px;\">Promotion Code:</div>" +
                            "<input type=\"text\" class=\"ecomOptionTitle ecomOptionInput\" id=\"promoCodeInput\" style=\"position:relative;margin-left:10px;\">" +
                        "</div>";
        }
        else if (!preShip && currentShipping != null) {
            if (!currentShipping.isFreeAbove) {
                var label = "";
                shipsPanel = "<div id=\"ecomModalSummaryShippingPanel\">" +
                                "<div class=\"ecomOptionTitle\" style=\"position:relative;float:left;font-size:16px;\">Shipping Options:</div>" +
                                "<select class=\"ecomOptionDropDown\" id=\"shippingOptionsSelect\" style=\"margin-left:10px;width:356px;\" onchange=\"updateShippingOption(this);\">" +
                                    shipItems +
                                "</select>" +
                            "</div>";
            }
            else if (currentShipping.isFreeAbove) {
                shipsPanel = "<div id=\"ecomModalSummaryShippingPanel\">" +
                                "<div id=\"ecomOptionLabelMobi\" class=\"ecomOptionLabel\" style=\"position:relative; float:left;width:500px;\">" +
                                    "Shipping is free due to order total being greater than " + currencySign + formatPrice(currentShipping.freeAbove) +
                                "</div>" +
                            "</div>";
            }
        }

        if (result.forceTCsToOrder && !agreedToTermsConditions) {
            termsPanel = "<div id=\"ecomModalSummaryPromoPanel\">" +
                            "<div class=\"ecomOptionTitle\" style=\"font-size: 14px; line-height: 20px; margin-top: 20px;\">Please acknowledge you have read the " +
                                "<a href=\"/terms-and-conditions.html\" target=\"_blank\">Terms and Conditions</a> before continuing with your order." +
                                "<input id=\"IAcceptTerms\" type=\"checkbox\"/>" +
                            "</div>" +
                        "</div>";
        }

        // #endregion

        // #region Loyalty Points

        if (result.loyaltyPoints > 0) {
            loyalPanel = "<div id=\"ecomModalSummaryLoyaltyPanel\" class=\"loyaltyBackPanel\">" +
                            "<div class=\"ecomOptionLabel\" style=\"position:relative;float:left;font-size:13px;margin:4px 0px 0px 40px;\">You have <span id=\"lpAvailable\">" + result.loyaltyPoints + "</span> loyalty points worth " + currencySign + formatPrice(result.loyaltyTotal) + ". I would like to use</div>" +
                            "<input id=\"loyaltyInput\" class=\"ecomOptionInput\" onkeyup=\"updateLoyaltyPointValues(this);\" type=\"text\" value=\"0\">" +
                            "<div class=\"ecomOptionLabel\" style=\"position:relative;float:left;font-size:13px;margin:4px 0px 0px 5px;\">points.</div>" +
                         "</div>";
        }

        // #endregion

        if (!preShip && billing.length > 0) {
            shipsPanel += "<div id=\"orderNote\" style=\"width:500px;\">" +
                            "<div class=\"ecomOptionTitle\" style=\"position:relative;font-size:16px;\">Delivery Instructions:</div>" +
                            "<textarea id=\"txtAreaNote\" style=\"width:500px;height:60px;\"></textarea>" +
                        "</div>";
        }

        panel += "</div>";

        ShowModal2();
        panel = "<div id=\"ecomModalSummaryPanel\">" +
                    "<div id=\"ecomModalSummaryHeaderPanel\">" +
                        headPanel +
                    "</div>" +
                    "<div id=\"ecomModalSummaryItemsOuterPanel\" style=\"max-height:" + (GetHeight() - 160) + "px\">" +
                        "<div id=\"ecomModalSummaryItemsInnerPanel\">" +
                            itemsPanel +
                            "<div id=\"ecomModalSummaryLeftPanel\">" +
                                shipsPanel +
                                loyalPanel +
                                promoPanel +
                                termsPanel +
                                "<div id=\"paymentGatewayOptions\"></div>" +
                            "</div>" +
                            "<div id=\"ecomModalSummaryRightPanel\">" +
                                "<div id=\"ecomModalSummaryTotalsPanel\">" +
                                    totalPanel +
                                "</div>" +
                            "</div>" +
                        "</div>" +
                    "</div>";
                
        
        editPanel2Inner.innerHTML = panel;
        editPanel2Inner.style.width = "980px";

        setTimeout('setEditPanel2Position();', 500);
    }

    if (document.getElementById('shippingToSubmit')) {
        shippingToSubmit = document.getElementById('shippingToSubmit').getAttribute("shipping");
    }
    else {
        shippingToSubmit = "0";
    }
    priceToSubmit = result.grandTotal;
    if (preShip) {
        if (result.promoResult != "") {
            promoCode = "firstRun";
            showPopupMessage("The items in your basket do not meet the criteria set for this promotion!", "OK");
        }
    }
    scrollTo(0, 0);
    hideLoadingPanel();

    if (!firstBasketRun && dMode == false)
    {
        getActivePaymentGateways();
    }
}

function checkAgreedToTerms() {
    if ($('#IAcceptTerms').is(':checked')) {
        agreedToTermsConditions = true;
        //showLoginOptionsPanel();
        checkPromCode();
    } else {
        agreedToTermsConditions = false;
        var message = (isMobileV2)
            ? 'Please agree to our terms and conditions<br>before continuing with your order.'
            : 'Please agree to our terms and conditions before continuing with your order.';
        showPopupMessage(message, 'OK');
    }
}

function getActivePaymentGateways()
{
    $.ajax({
        dataType: "json",
        url: "/Handlers/getActivePaymentGateways.ashx?d=" + new Date().getTime(),
        type: "POST",
        data: { shopID: shopID, ismobi: isMobileV2 }
    }).done(function (result) {
        // console.log(result);
        BuildGatewayList(result);

        if (result.length == 1) {
            setGatewayID(result[0].GatewayID);
        }

    });

}

function BuildGatewayList(result)
{
    var strHtml = "";
    if (result.length > 0)
    {
        if (isMobileV2) {
            strHtml += "<div style=\"padding-left: 70px;width:100%;\" class=\"ecomOptionTitleMobi\">Choose Payment Method:</div>";
        }
        else {
            strHtml = "<div id=\"gatewaySelector\">" +
                        "<div style=\"position:relative;font-size:16px;\" class=\"ecomOptionTitle\">Choose Payment Method:</div>";
        }

        for (var i = 0; i < result.length; i++)
        {
            if (result[i].GatewayID == 4)
            {
                //  strHtml += "<div id=\"cashFlowsLogoContainer\" class=\"imgGatewaySelector\" onclick=\"setGatewayID(" + result[i].GatewayID + ")\">" +
                strHtml += "<div    id=\"gatewayImgButton" + result[i].GatewayID + "\" class=\"imgGatewaySelector cashFlowsLogoContainer\" onclick=\"setGatewayID(" + result[i].GatewayID + ")\">" +
                            "<div class=\"gatewayOn\"></div>" +
                            "<img alt=\"Visa Credit - CashFlows\" src=\"http://www.cashflows.com/support/images/cards/visa.gif\">" +
                            "<img alt=\"Visa Debit - CashFlows\" src=\"http://www.cashflows.com/support/images/cards/visa_debit.gif\">" +
                            "<img alt=\"Visa Electron - CashFlows\" src=\"http://www.cashflows.com/support/images/cards/visa_electron.gif\">" +
                            "<img alt=\"MasterCard - CashFlows\" src=\"http://www.cashflows.com/support/images/cards/mastercard.gif\">" +
                            "<img alt=\"American Express - CashFlows\" src=\"http://www.cashflows.com/support/images/cards/amex.gif\">" +
                            "<img alt=\"Verified by Visa - CashFlows\" src=\"http://www.cashflows.com/support/images/cards/vbv.gif\"> " +
                            "<img alt=\"MasterCard SecureCode - CashFlows\" src=\"http://www.cashflows.com/support/images/cards/spa.gif\">" +
                            "<a title=\"Payment Processing - CashFlows - Opens in new browser window\"  target=\"_blank\" href=\"http://www.cashflows.com/\"><img border=\"0\" alt=\"CashFlows Payments Processing\" src=\"http://www.cashflows.com/support/images/payments_by_cashflows.png\" id=\"cashFlowsLinkedImage\"></a>" +
                            "</div>";
            }
            else
            {
                var marg = "";
                if (isMobileV2) {
                    marg = "style=\"margin:0px 0px 10px 70px;\"";
                }
                strHtml += "<div id=\"gatewayImgButton" + result[i].GatewayID + "\" " + marg + ">" +
                                "<img src=\"" + result[i].iconUrl + "\" onclick=\"setGatewayID(" + result[i].GatewayID + ")\" class=\"imgGatewaySelector\" />" +
                            "</div>";
            }
        }
        if (!isMobileV2) {
            strHtml += "</div>";
        }

        if (isMobileV2) {
            document.getElementById("paymentGatewayOptionsMobi").innerHTML = strHtml;
        }
        else {
            document.getElementById("paymentGatewayOptions").innerHTML = strHtml;
        }
    }
}

function setGatewayID(gateID) {
    if (isMobileV2) {
        $('.gatewayOnMobi').remove();
    }
    else {
        $('.gatewayOn').remove();
    }
   
    gatewayID = gateID;
    var divName = "gatewayImgButton" + gateID;
    var div = document.getElementById(divName);
    if (isMobileV2) {
        div.innerHTML += "<div class=\"gatewayOnMobi\"></div>";
    }
    else {
        div.innerHTML += "<div class=\"gatewayOn\"></div>";
    }
}

// This updateBasket function does not appear to be in use...
function updateBasket() {
    showLoadingPanel("Updating...");

    giveVATReliefOnMarkedProducts = (document.cookie.indexOf("applyVATRelief") > -1) ? true : false;

    $.ajax({
        dataType: "json",
        url: "/Handlers/buildBasketSummary.ashx?d=" + new Date().getTime(),
        type: "POST",
        data: JSON.stringify({
            siteID: siteID,
            companyID: companyID,
            shopID: shopID,
            preShip: preShip,
            promoCode: promoCode,
            mobiv2: isMobileV2,
            basketRows: basket,
            giveVATReliefOnMarkedProducts: giveVATReliefOnMarkedProducts
        })
    }).done(function (result) {
        basket = result.basketRows;
        var itemsPanel = "";
        var totalPanel = "";
        var lastItemClass = "ecomModalSummaryItemPanelLight";

        if (isMobileV2) {
            // #region Items

            for (var i = 0; i < basket.length; i++) {
                var bsktRow = basket[i];

                itemsPanel += "<div class=\"ecomOptionItemMobi\">" +
                                "<div class=\"innerTextElement\" style=\"margin:5px 0px 5px 0px;\">" +
                                    "<div class=\"ecomOptionLabelMobi\" style=\"max-width:580px;margin-left:10px;\">" +
                                        bsktRow.itemName + bsktRow.itemVariant +
                                    "</div>" +
                                    "<input type=\"button\" class=\"ecomOptionClearBasketButtonMobi\" onclick=\"removeItem(" + bsktRow.variationID + ");\" value=\"\" />" +
                                    "<div class=\"ecomOptionLabelMobi\" style=\"width:180px;float:right;text-align:right;\">" +
                                        currencySign + formatPrice(bsktRow.rowPriceGross) +
                                    "</div>" +
                                    "<input  class=\"ecomOptionInputMobi\" style=\"float:right;width:60px;text-align:center;margin-right:10px;text-indent:0px;\"" + readOnly + quantReadOnly + " value=\"" + bsktRow.rowQuantity + "\" onkeyup=\"updateBasketRequired(this, " + bsktRow.variationID + ", " + bsktRow.stockLevel + ");\" type=\"text\">" +
                                "</div>" +
                                "</div>";
            }

            // #endregion

            //#region Totals

            if (result.totalDiscount > 0) {
                totalPanel += "<div class=\"innerTextElement\">" +
                                "<input type=\"button\" class=\"ecomOptionClearBasketButtonMobi\" style=\"visibility:hidden;\" value=\"\" />" +
                                "<div class=\"ecomOptionTitleMobi\" style=\"width:300px;float:right;text-align:right;\">" + currencySign + formatPrice(result.totalDiscount) + "</div>" +
                                "<div class=\"ecomOptionTitleMobi\" style=\"float:right;text-align:right;\">Discounts:</div>" +
                            "</div>";
            }
            if (result.useVat) {
                totalPanel += "<div class=\"innerTextElement\">" +
                                "<input type=\"button\" class=\"ecomOptionClearBasketButtonMobi\" style=\"visibility:hidden;\" value=\"\" />" +
                                "<div class=\"ecomOptionTitleMobi\" style=\"width:300px;float:right;text-align:right;\">" + currencySign + formatPrice(result.totalNet) + "</div>" +
                                "<div class=\"ecomOptionTitleMobi\" style=\"float:right;text-align:right;\">Total Net:</div>" +
                            "</div>" +
                            "<div class=\"innerTextElement\">" +
                                "<input type=\"button\" class=\"ecomOptionClearBasketButtonMobi\" style=\"visibility:hidden;\" value=\"\" />" +
                                "<div class=\"ecomOptionTitleMobi\" style=\"width:300px;float:right;text-align:right;\">" + currencySign + formatPrice(result.totalVAT) + "</div>" +
                                "<div class=\"ecomOptionTitleMobi\" style=\"float:right;text-align:right;\">Total VAT:</div>" +
                            "</div>";
            }
            else {
                totalPanel += "<div class=\"innerTextElement\">" +
                                "<input type=\"button\" class=\"ecomOptionClearBasketButtonMobi\" style=\"visibility:hidden;\" value=\"\" />" +
                                "<div class=\"ecomOptionTitleMobi\" style=\"width:300px;float:right;text-align:right;\">" + currencySign + formatPrice(result.totalGross) + "</div>" +
                                "<div class=\"ecomOptionTitleMobi\" style=\"float:right;text-align:right;\">Total:</div>" +
                            "</div>";
            }
            if (result.totalShipping > 0) {
                totalPanel += "<div class=\"innerTextElement\">" +
                                "<input type=\"button\" class=\"ecomOptionClearBasketButtonMobi\" style=\"visibility:hidden;\" value=\"\" />" +
                                "<div id=\"shippingToSubmit\" shipping=\"" + formatPrice(result.totalShipping) + "\" class=\"ecomOptionTitleMobi\" style=\"width:300px;float:right;text-align:right;\">" + currencySign + formatPrice(result.totalShipping) + "</div>" +
                                "<div class=\"ecomOptionTitleMobi\" style=\"float:right;text-align:right;\">Shipping:</div>" +
                            "</div>";
            }
            totalPanel += "<div class=\"innerTextElement\">" +
                            "<input type=\"button\" class=\"ecomOptionClearBasketButtonMobi\" onclick=\"emptyBasket();\" value=\"\" />" +
                            "<div id=\"totalToSubmit\" total=\"" + formatPrice(result.grandTotal) + "\" class=\"ecomOptionTotalMobi\" style=\"width:300px;float:right;text-align:right;\">" + currencySign + formatPrice(result.grandTotal) + "</div>" +
                            "<div class=\"ecomOptionTotalMobi\" style=\"float:right;text-align:right;\">Grand Total:</div>" +
                        "</div>";

            // #endregion

            document.getElementById('mobiV2SummaryItemsInnerPanel').innerHTML = itemsPanel;
            document.getElementById('mobiV2SummaryTotalsPanel').innerHTML = totalPanel;
        }
        else {
            // #region Items

            var pWidth = "550";
            if (result.useVat) {
                pWidth = "470";
            }

            for (var i = 0; i < basket.length; i++) {
                var bsktRow = basket[i];

                itemsPanel += "<div class=\"" + lastItemClass + "\">" +
                                "<div class=\"ecomOptionLabel\" style=\"top:0px;left:5px;font-size:12px;width:" + pWidth + "px;height:34px;overflow:hidden;\">" +
                                    "<span style=\"font-weight:bold;\">" + bsktRow.itemName + " </span>" + bsktRow.itemVariant +
                                    "</div>";
                if (result.useVat) {
                    itemsPanel += "<input type=\"button\" value=\"\" class=\"ecomBasketDeleteButton\" onclick=\"removeItem(" + bsktRow.variationID + ");\" style=\"float:right;\" />";
                    itemsPanel += "<div class=\"ecomOptionLabel\" style=\"position:relative;float:right;font-size:14px;width:80px;text-align:center;\">" +
                                    currencySign + formatPrice(bsktRow.rowPriceGross) +
                                "</div>";
                    itemsPanel += "<div class=\"ecomOptionLabel\" style=\"position:relative;float:right;font-size:14px;width:80px;text-align:center;\">" +
                                    currencySign + formatPrice(bsktRow.rowDiscount) +
                                "</div>";
                    itemsPanel += "<div class=\"ecomOptionLabel\" style=\"position:relative;float:right;font-size:14px;width:80px;text-align:center;\">" +
                                    currencySign + formatPrice(bsktRow.rowPriceVAT) +
                                "</div>";
                    itemsPanel += "<input class=\"ecomOptionTitle ecomOptionInput\" style=\"position:relative;float:right;width:48px;text-align:center;text-indent:0px;height:22px;line-height:24px;margin:5px 16px 0px 16px;\"" + readOnly + quantReadOnly + " value=\"" + bsktRow.rowQuantity + "\" onkeyup=\"updateBasketRequired(this, " + bsktRow.variationID + ");\" type=\"text\">" +
                                "<div class=\"ecomOptionLabel\" style=\"position:relative;float:right;font-size:14px;width:80px;text-align:center;font-weigth:bold;\">" +
                                    currencySign + formatPrice(bsktRow.itemPrice) +
                                "</div>";

                }
                else {

                    itemsPanel += "<input type=\"button\" value=\"\" class=\"ecomBasketDeleteButton\" onclick=\"removeItem(" + bsktRow.variationID + ");\" style=\"float:right;\" />";
                    itemsPanel += "<div class=\"ecomOptionLabel\" style=\"position:relative;float:right;font-size:14px;width:80px;text-align:center;\">" +
                                    currencySign + formatPrice(bsktRow.rowPriceGross) +
                                "</div>";
                    itemsPanel += "<div class=\"ecomOptionLabel\" style=\"position:relative;float:right;font-size:14px;width:80px;text-align:center;\">" +
                                    currencySign + formatPrice(bsktRow.rowDiscount) +
                                "</div>";
                    itemsPanel += "<input class=\"ecomOptionTitle ecomOptionInput\" style=\"position:relative;float:right;width:48px;text-align:center;text-indent:0px;height:22px;line-height:24px;margin:5px 16px 0px 16px;\"" + readOnly + quantReadOnly + " value=\"" + bsktRow.rowQuantity + "\" onkeyup=\"updateBasketRequired(this, " + bsktRow.variationID + ");\" type=\"text\">" +
                                "<div class=\"ecomOptionLabel\" style=\"position:relative;float:right;font-size:14px;width:80px;text-align:center;font-weigth:bold;\">" +
                                    currencySign + formatPrice(bsktRow.itemPrice) +
                                "</div>";

                }
                itemsPanel += "</div>";

                if (lastItemClass == "ecomModalSummaryItemPanelLight") {
                    lastItemClass = "ecomModalSummaryItemPanelDark";
                }
                else {
                    lastItemClass = "ecomModalSummaryItemPanelLight";
                }
            }

            // #endregion

            //#region Totals

            if (result.totalDiscount > 0) {
                totalPanel += "<div class=\"ecomModalSummaryTotalsPanel\">" +
                                "<div class=\"ecomOptionLabel\" style=\"top:4px;left:0px;font-size:14px;width:235px;text-align:right;\">Discounts:</div>" +
                                "<div class=\"ecomModalSummaryItemPanelLight\" style=\"float:right;width:160px;\">" +
                                    "<div class=\"ecomOptionLabel\" style=\"top:0px;left:0px;font-size:14px;width:145px;text-align:right;\">-" + currencySign + formatPrice(result.totalDiscount) + "</div>" +
                                "</div>" +
                            "</div>";
            }
            if (result.useVat) {
                totalPanel += "<div class=\"ecomModalSummaryTotalsPanel\">" +
                                "<div class=\"ecomOptionLabel\" style=\"top:4px;left:0px;font-size:14px;width:235px;text-align:right;\">Total Net:</div>" +
                                "<div class=\"ecomModalSummaryItemPanelLight\" style=\"float:right;width:160px;\">" +
                                    "<div class=\"ecomOptionLabel\" style=\"top:0px;left:0px;font-size:14px;width:145px;text-align:right;\">" + currencySign + formatPrice(result.totalNet) + "</div>" +
                                "</div>" +
                            "</div>" +
                            "<div class=\"ecomModalSummaryTotalsPanel\">" +
                                "<div class=\"ecomOptionLabel\" style=\"top:4px;left:0px;font-size:14px;width:235px;text-align:right;\">Total VAT:</div>" +
                                "<div class=\"ecomModalSummaryItemPanelLight\" style=\"float:right;width:160px;\">" +
                                    "<div class=\"ecomOptionLabel\" style=\"top:0px;left:0px;font-size:14px;width:145px;text-align:right;\">" + currencySign + formatPrice(result.totalVAT) + "</div>" +
                                "</div>" +
                            "</div>";
            }
            else {
                totalPanel += "<div class=\"ecomModalSummaryTotalsPanel\">" +
                                "<div class=\"ecomOptionLabel\" style=\"top:4px;left:0px;font-size:14px;width:235px;text-align:right;\">Total:</div>" +
                                "<div class=\"ecomModalSummaryItemPanelLight\" style=\"float:right;width:160px;\">" +
                                    "<div class=\"ecomOptionLabel\" style=\"top:0px;left:0px;font-size:14px;width:145px;text-align:right;\">" + currencySign + formatPrice(result.totalGross) + "</div>" +
                                "</div>" +
                            "</div>";
            }

            if (result.totalShipping > 0) {
                totalPanel += "<div class=\"ecomModalSummaryTotalsPanel\">" +
                                "<div class=\"ecomOptionLabel\" style=\"top:4px;left:0px;font-size:14px;width:235px;text-align:right;\">Shipping:</div>" +
                                "<div class=\"ecomModalSummaryItemPanelLight\" style=\"float:right;width:160px;\">" +
                                    "<div id=\"shippingToSubmit\" shipping=\"" + formatPrice(result.totalShipping) + "\" class=\"ecomOptionLabel\" style=\"top:0px;left:0px;font-size:14px;width:145px;text-align:right;\">" + currencySign + formatPrice(result.totalShipping) + "</div>" +
                                "</div>" +
                            "</div>";
            }

            totalPanel += "<div class=\"ecomModalSummaryTotalsPanel\">" +
                            "<div class=\"ecomOptionTitle\" style=\"top:4px;left:0px;width:235px;text-align:right;font-size:18px;\">Grand Total:</div>" +
                            "<div class=\"ecomModalSummaryItemPanelDark\" style=\"float:right;width:160px;\">" +
                                "<div id=\"totalToSubmit\" total=\"" + formatPrice(result.grandTotal) + "\" class=\"ecomOptionTitle\" style=\"top:0px;left:0px;width:145px;text-align:right;font-size:18px;\">" + currencySign + formatPrice(result.grandTotal) + "</div>" +
                            "</div>" +
                        "</div>" +
                        "<div class=\"ecomModalSummaryTotalsPanel\" style=\"height:90px;margin-top:10px;\">" +
                            "<input type=\"button\" class=\"ecomOptionClearBasketButton\" onclick=\"emptyBasket();\" value=\"\" />" +
                            "<input type=\"button\" class=\"ecomOptionCheckoutButton\" onclick=\"" + result.functionName + "\" style=\"top:0px;left:210px;\" value=\"\" />" +
                        "</div>";

            // #endregion

            document.getElementById('ecomModalSummaryItemsInnerPanel').innerHTML = itemsPanel;
            document.getElementById('ecomModalSummaryTotalsPanel').innerHTML = totalPanel;
        }
        priceToSubmit = result.grandTotal;
        hideLoadingPanel();
    });
}

function updateShippingOption(elem) {
    shippingIndex = elem.selectedIndex;
    ECommWebShopShippingItem = elem.value;
    if (document.getElementById('shippingToSubmit')) {
        shippingToSubmit = document.getElementById('shippingToSubmit').getAttribute("shipping");
    }
    if (currentShipping.isBackend) {
        buildModalBasket();
    }
    else {
        updateShipping();
    }
}

function updateShipping() {
    showLoadingPanel("Updating...");
    $.ajax({
        dataType: "json",
        url: "/Handlers/checkShipping.ashx?d=" + new Date().getTime(),
        type: "POST",
        data: JSON.stringify({
            siteID: siteID, companyID: companyID, shopID: shopID, countryID: shipCountryID, address1: shipAdd1, address2: shipAdd2, town: shipTown,
            county: shipCounty, postcode: shipPCode, country: shipCountry, price: priceToSubmit, shipIndex: shippingIndex, basketRows: basket
        })
    }).done(function (result) {
        currentShipping = result;
        basket = result.basketRows;
        buildModalBasket();
    });
}

function updateCookie() {
    var cookieString = "";
    for (var i = 0; i < basket.length; i++) {
        if (cookieString == "") {
            cookieString += basket[i].variationID + "~~" + basket[i].rowQuantity + "~~" + basket[i].multiPackID;
        }
        else {
            cookieString += "--" + basket[i].variationID + "~~" + basket[i].rowQuantity + "~~" + basket[i].multiPackID;
        }
    }
    setCookie(cookieString);
}

function getCookie() {
    var cArray = document.cookie.split(';');
    for (var i = 0; i < cArray.length; i++) {
        if (cArray[i].indexOf("llubasket") > -1) {
            if (cArray[i].indexOf("**") > -1) {
                setCookie("");
            }
            else {
                if (cArray[i].indexOf("=") > -1) {
                    cookie = cArray[i].substring(cArray[i].indexOf("=") + 1);
                    if (cookie.length > 1) {
                        if (cookie.toLocaleLowerCase().indexOf("null") == -1 && cookie.toLocaleLowerCase().indexOf("nan") == -1) {
                            basket = new Array();
                            var bskRows = cookie.split("--");
                            for (var j = 0; j < bskRows.length; j++) {
                                var bskRow = bskRows[j]
                                if (bskRow != "") {
                                    var bskRowData = bskRow.split("~~");
                                    var basketRow = new BasketRow();
                                    basketRow.variationID = parseInt(bskRowData[0], 10);
                                    var testQuant = bskRowData[1];
                                    if (testQuant != "0") {
                                        for (var k = 0; k < testQuant; k++) {
                                            basketRow.items.push(new BasketItem());
                                        }
                                    }
                                    if (bskRowData.length == 3) {
                                        basketRow.multiPackID = bskRowData[2];
                                    }
                                    basket.push(basketRow);
                                }
                            }
                            updateBasketWidgetPanel();
                        }
                    }
                }
                else {
                    var exdate2 = new Date();
                    exdate2.setDate(exdate2.getDate() - 14);
                    document.cookie = cArray[i] + "; expires=" + exdate2.toGMTString() + ";";
                }
            }
        }
    }
}

function setCookie(cookieString) {
    var exdate = new Date();
    exdate.setDate(exdate.getDate() + 14);
    document.cookie = "llubasket=" + cookieString + "; expires=" + exdate.toGMTString() + ";path=/;";
}

function checkPromCode() {
    if (tradeUserID != "0") {
        checkShipping();
    }
    else {
        if (document.getElementById('promoCodeInput')) {
            promoCode = document.getElementById('promoCodeInput').value;
            if (promoCode != "") {
                $.post("/Handlers/checkPromoCode.ashx?d=" + new Date().getTime(), {
                    shopid: shopID,
                    code: promoCode
                }, function (result) {
                    if (result == "Expired") {
                        showPopupMessage("The promotion code you used has now expired!", "OK");
                        promoCode = "";
                        document.getElementById('promoCodeInput').value = "";
                    }
                    else if (result == "Not Found") {
                        showPopupMessage("The promotion code you used could not be found!", "OK");
                        promoCode = "";
                        document.getElementById('promoCodeInput').value = "";
                    }
                    else {
                        firstBasketRun = false;
                        buildModalBasket();
                    }
                });
            }
            else {
                showLoginOptionsPanel();
            }
        }
        else {
            promoCode = "";
            showLoginOptionsPanel();
        }
    }
}

function resetBasketStartUps() {
    preShip = true;
    promoCode = "";
    firstBasketRun = true;
    if (isMobileV2) {
        showMobiV2Panel('');
    }
    else {
        HideModal2();
        HideModal3();
    }
}

function getVariationPrice(varid) {
    var res = $.ajax({
        type: 'GET',
        url: "/Handlers/getVariationPrice.ashx?shopid=" + shopID + "&varid=" + varid + "&d=" + new Date().getMilliseconds(),
        async: false
    });
    return res.responseText;
}

function Variation() {
    this.itemText = "";
    this.inStock = true;
    this.variationID = 0;
    this.productID = 0;
    this.variationName = "";
    this.variationFullName = "";
    this.productName = "";
    this.category = "";
    this.variant = "";
    this.list = "";
    this.position = 0;
    this.url = "";
    this.isSaleItem = false;
    this.mainImage = "";
    this.thumbNails = "";
    this.imageText = "";
    this.description = "";
    this.xtraDescription = "";
    this.priceText = "";
    this.stockText = "";
    this.bannerText = "";
    this.pageTitle = "";
    this.stockLevel = 0;
    this.inBasket = 0;
    this.navGroupID = 0;
    this.shippingFirstItem = 0.0;
    this.shippingExtraItem = 0.0;
    this.shippingFreeAbove = 0.0;
    this.discount = 0.0;
    this.shipping = 0.0;
    this.originalPrice = 0.0;
    this.priceGross = 0.0;
    this.priceNet = 0.0;
    this.VAT = 0.0;
}

function BasketRow() {
    this.variationID = 0;
    this.productID = 0;
    this.multiPackID = "";
    this.itemName = "";
    this.itemVariant = "";
    this.itemPrice = 0;
    this.rowQuantity = 0;
    this.rowDiscount = 0;
    this.rowShipping = 0;
    this.rowPriceGross = 0;
    this.rowPriceNet = 0;
    this.rowPriceVAT = 0;
    this.googleCategory = "";
    this.googleBrand = "";
    this.attachments = "";
    this.navGroupID = 0;
    this.rowShippingFirstItem = 0;
    this.rowShippingExtraItem = 0;
    this.rowShippingFreeAbove = 0;
    this.items = new Array();
}

function BasketItem() {
    this.itemPriceGross = 0;
    this.itemDiscount = 0;
    this.itemShipping = 0;
    this.itemSaleName = "";
}

function updateLoyaltyPointValues(elem) {
    var test = elem.value;
    if (test != "") {
        if (checkNumbers(test)) {
            var tempLP = parseInt(test, 10);
            var pointCheck = parseInt(document.getElementById('lpAvailable').innerHTML, 10);
            if (tempLP > pointCheck) {
                elem.value = loyaltyPoints;
                showPopupMessage("You are attempting to claim more points than you have!", "OK");
                return;
            }
            loyaltyPoints = tempLP;
        }
        else {
            showPopupMessage("Loyalty points must be a valid number!", "OK");
            return;
        }
        $.ajax({
            dataType: "json",
            url: "/Handlers/validateLoyaltyPoints.ashx?d=" + new Date().getTime(),
            type: "POST",
            data: { shopID: shopID, customerID: ecomCustomerID, loyaltyPoints: loyaltyPoints }
        }).done(function (result) {
            if (result.error == "") {
                document.getElementById('loyaltyInput').value = result.pointsClaimed;
                document.getElementById('LoyaltyPointsValue').innerHTML = currencySign + result.valueClaimed;
                document.getElementById('totalToSubmit').innerHTML = currencySign + result.newGross;
            }
            else {
                showPopupMessage(result.error, "OK");
            }
        });
    }
}

//#endregion

// #region Checkout Options

function mobiVATReliefInfo() {
    var panel = '<div class="ecomOptionItemMobi">'
                    + '<div class="innerTextElement" style="margin:10px 0px 10px 0px;">'
                        + '<h2 class="vat-relief-info-header-mobi">Will you be claiming VAT relief?</h2>'
                        + '<p class="vat-relief-info-mobi">You can claim VAT Relief on these items if you are chronically sick or disabled and need the item for personal or domestic use.</p>'
                        + '<p class="vat-relief-info-mobi">To make a claim, simply add the item to your basket and complete the short form and declaration. We\'ll then charge you the price excluding VAT provided you are eligible.</p>'
                        + '<p class="vat-relief-info-mobi">You can claim VAT Relief in the same way if you are:</p>'
                        + '<ul class="vat-relief-info-mobi">'
                            + '<li>a) buying this item on behalf of someone else who meets the criteria above.</li>'
                            + '<li>b) a registered charity providing this item to other people who meet the criteria above.</li>'
                        + '</ul>'
                        + '<h2 class="vat-relief-info-header-mobi">Eligibility Declaration</h2>'
                        + '<p class="vat-relief-info-mobi">Please note there are penalities for making false declarations. If you are in any doubt as to whether you are eligible to recieve goods '
                        + 'or services zero-rated for VAT you should consult Notice 701/7 VAT reliefs for disabled people available at www.hmrc.gov.uk or contact the '
                        + 'National Advice Service on 0845 010 9000 before signing the declaration.</p>'
                        + '<h2 class="vat-relief-info-header-mobi">Continue claiming VAT relief?</h2>'
                        + '<input type="button" class="vat-relief-yes-mobi" onclick="buildVATReliefForm(\'false\');" value="">'
                        + '<input type="button" class="vat-relief-no-mobi" onclick="goToBasket()" value="">'
                    + '</div>'
                + '</div>'
    ;
    document.getElementById('mobiV2MainBasketInnerPanel').innerHTML = panel;
    if (document.getElementById('mobiV2MainBasketPanel').offsetWidth < 600) {
        showMobiV2Panel('mobiV2MainBasketPanel');
    } else {
        resizeMobileContainer('mobiV2MainBasketPanel');
    }
}

function buildVATReliefForm(mobiSplash) {
    mobiSplash = mobiSplash || true;
    var address;

    if (isMobileV2 && mobiSplash == true) {
        mobiVATReliefInfo();
        return;
    }

    if (billing.length > 0) {
        var addressParts = billing.split('**');

        address = {
            address1: unescape(addressParts[0]),
            address2: unescape(addressParts[1]),
            town: unescape(addressParts[2]),
            region: unescape(addressParts[3]),
            postcode: unescape(addressParts[4]),
            countryID: unescape(addressParts[5])
        }
    } else {
        address = {
            address1: '',
            address2: '',
            town: '',
            region: '',
            postcode: '',
            countryID: 0
        }
    }


    if (isMobileV2) {

        var whoIsItemFor = '<div class="ecomOptionItemMobi">'
                                + '<div class="innerTextElement" style="margin:10px 0px 10px 0px;">'
                                    + '<div class="ecomOptionTotalMobi" style="margin-left:10px;">Who is the item for?</div>'
                                + '</div>'
                                + '<div class="innerTextElement" style="margin:10px 0px 20px 0px;">'
                                    + '<div class="vat-relief-label-mobi">Claiming for:</div>'
                                        + '<div class="innerTextElement" style="width:540px;">'
                                            + '<select id="who-is-the-item-for" class="ecomOptionSelectMobi" style="width:540px;">'
                                                + '<option value="me">Me</option>'
                                                + '<option value="someone_else">Someone Else</option>'
                                                + '<option value="uk_registered_charity">UK Registered Charity</option>'
                                            + '</select>'
                                        + '</div>'
                                    + '</div>'
                                + '</div>'
                            + '</div>';

        var forSomeoneElse = '<div id="someone-else-form" style="display: none; margin: 0; width: 100%;">'
                            + '<div class="ecomOptionItemMobi">'
                            + '<div class="innerTextElement" style="margin:10px 0px 10px 0px;">'
                                + '<div class="ecomOptionTotalMobi" style="margin-left:10px;">Your Details: (the Representative)</div>'
                            + '</div>'
                            + '<div class="innerTextElement" style="margin:10px 0px 20px 0px;">'
                                + '<div class="vat-relief-label-mobi">Relationship:</div>'
                                    + '<div class="innerTextElement" style="width:540px;">'
                                        + '<select id="relationship-to-claimant" class="ecomOptionSelectMobi" style="width:540px;">'
                                            + '<option value="">Please select...</option>'
                                            + '<option value="Parent">Parent</option>'
                                            + '<option value="Guardian">Guardian</option>'
                                            + '<option value="Spouse">Spouse</option>'
                                            + '<option value="Trustee">Trustee (Acting On Claimant\'s Behalf)</option>'
                                            + '<option value="Doctor">Doctor</option>'
                                            + '<option value="Other Health Professional">Other Health Professional</option>'
                                        + '</select>'
                                    + '</div>'
                                + '</div>'
                            + '</div>'
                            + '<div class="ecomOptionItemMobi">'
                            + '<div class="innerTextElement" style="margin:10px 0px 10px 0px;">'
                                + '<div class="ecomOptionTotalMobi" style="margin-left:10px;">Person Eligible Details: (the Claimant)</div>'
                            + '</div>'
                            + '<div class="innerTextElement" style="margin-top:10px;">'
                                + '<div class="vat-relief-label-mobi">Title:</div>'
                                + '<input id="claimant-title" class="ecomOptionInputMobi" style="width:540px;" type="text">'
                            + '</div>'
                            + '<div class="innerTextElement" style="margin-top:10px;">'
                                + '<div class="vat-relief-label-mobi">First Name:</div>'
                                + '<input id="claimant-first-name" class="ecomOptionInputMobi" style="width:540px;" type="text">'
                            + '</div>'
                            + '<div class="innerTextElement" style="margin-top:10px;">'
                                + '<div class="vat-relief-label-mobi">Last Name:</div>'
                                + '<input id="claimant-last-name" class="ecomOptionInputMobi" style="width:540px;" type="text">'
                            + '</div>'
                            + '<div class="innerTextElement" style="margin-top:10px;">'
                                + '<div class="vat-relief-label-mobi">Address 1:</div>'
                                + '<input id="claimant-address-1" class="ecomOptionInputMobi" style="width:540px;" type="text" value="' + address.address1 + '">'
                            + '</div>'
                            + '<div class="innerTextElement" style="margin-top:10px;">'
                                + '<div class="vat-relief-label-mobi">Address 2:</div>'
                                + '<input id="claimant-address-2" class="ecomOptionInputMobi" style="width:540px;" type="text" value="' + address.address2 + '">'
                            + '</div>'
                            + '<div class="innerTextElement" style="margin-top:10px;">'
                                + '<div class="vat-relief-label-mobi">Town/City:</div>'
                                + '<input id="claimant-city" class="ecomOptionInputMobi" style="width:540px;" type="text" value="' + address.town + '">'
                            + '</div>'
                            + '<div class="innerTextElement" style="margin-top:10px;">'
                                + '<div class="vat-relief-label-mobi">County/Province:</div>'
                                + '<input id="claimant-region" class="ecomOptionInputMobi" style="width:540px;" type="text" value="' + address.region + '">'
                            + '</div>'
                            + '<div class="innerTextElement" style="margin-top:10px;">'
                                + '<div class="vat-relief-label-mobi">Postcode/Zip:</div>'
                                + '<input id="claimant-postcode" class="ecomOptionInputMobi" style="width:540px;" type="text" value="' + address.postcode + '">'
                            + '</div>'
                            + '<div class="innerTextElement" style="margin:10px 0px 20px 0px;">'
                                + '<div class="vat-relief-label-mobi">Country:</div>'
                                    + '<div class="innerTextElement" style="width:540px;">'
                                        + '<select id="claimant-country" class="ecomOptionSelectMobi" style="width:540px;">'
                                            + '<option value=""> </option>'
                                            + '<option value="25">Australia</option>'
                                            + '<option value="55">Canada</option>'
                                            + '<option value="118">Ireland</option>'
                                            + '<option value="168">New Zealand</option>'
                                            + '<option value="1" selected="selected">United Kingdom</option>'
                                            + '<option value="247">United States</option>'
                                        + '</select>'
                                    + '</div>'
                                + '</div>'
                            + '</div>'
                        + '</div>'
                        + '</div>';

        var charityPurchase = '<div id="uk-registered-charity-form" style="display: none; margin: 0; width: 100%;">'
                            + '<div class="ecomOptionItemMobi">'
                                + '<div class="innerTextElement" style="margin:10px 0px 10px 0px;">'
                                    + '<div class="ecomOptionTotalMobi" style="margin-left:10px;">Your Details:</div>'
                                + '</div>'
                                + '<div class="innerTextElement" style="margin-top:10px;">'
                                    + '<div class="vat-relief-label-mobi">Title:</div>'
                                    + '<input id="your-title" class="ecomOptionInputMobi" style="width:540px;" type="text">'
                                + '</div>'
                                + '<div class="innerTextElement" style="margin-top:10px;">'
                                    + '<div class="vat-relief-label-mobi">First Name:</div>'
                                    + '<input id="your-first-name" class="ecomOptionInputMobi" style="width:540px;" type="text" value="' + deliveryFirstName + '">'
                                + '</div>'
                                + '<div class="innerTextElement" style="margin:10px 0px 20px 0px;">'
                                    + '<div class="vat-relief-label-mobi">Last Name:</div>'
                                    + '<input id="your-last-name" class="ecomOptionInputMobi" style="width:540px;" type="text" value="' + deliveryLastName + '">'
                                + '</div>'
                            + '</div>'
                            + '<div class="ecomOptionItemMobi">'
                                + '<div class="innerTextElement" style="margin:10px 0px 10px 0px;">'
                                    + '<div class="ecomOptionTotalMobi" style="margin-left:10px;">Charity Details:</div>'
                                + '</div>'
                                + '<div class="innerTextElement" style="margin-top:10px;">'
                                    + '<div class="vat-relief-label-mobi">Charity Name:</div>'
                                    + '<input id="charity-name" class="ecomOptionInputMobi" style="width:540px;" type="text">'
                                + '</div>'
                                + '<div class="innerTextElement" style="margin-top:10px;">'
                                    + '<div class="vat-relief-label-mobi">Charity Number:</div>'
                                    + '<input id="charity-number" class="ecomOptionInputMobi" style="width:540px;" type="text">'
                                + '</div>'
                                + '<div class="innerTextElement" style="margin-top:10px;">'
                                    + '<div class="vat-relief-label-mobi">Address 1:</div>'
                                    + '<input id="charity-address-1" class="ecomOptionInputMobi" style="width:540px;" type="text" value="' + address.address1 + '">'
                                + '</div>'
                                + '<div class="innerTextElement" style="margin-top:10px;">'
                                    + '<div class="vat-relief-label-mobi">Address 2:</div>'
                                    + '<input id="charity-address-2" class="ecomOptionInputMobi" style="width:540px;" type="text" value="' + address.address2 + '">'
                                + '</div>'
                                + '<div class="innerTextElement" style="margin-top:10px;">'
                                    + '<div class="vat-relief-label-mobi">Town/City:</div>'
                                    + '<input id="charity-city" class="ecomOptionInputMobi" style="width:540px;" type="text" value="' + address.town + '">'
                                + '</div>'
                                + '<div class="innerTextElement" style="margin-top:10px;">'
                                    + '<div class="vat-relief-label-mobi">County/Province:</div>'
                                    + '<input id="charity-region" class="ecomOptionInputMobi" style="width:540px;" type="text" value="' + address.region + '">'
                                + '</div>'
                                + '<div class="innerTextElement" style="margin-top:10px;">'
                                    + '<div class="vat-relief-label-mobi">Postcode/Zip:</div>'
                                    + '<input id="charity-postcode" class="ecomOptionInputMobi" style="width:540px;" type="text" value="' + address.postcode + '">'
                                + '</div>'
                                + '<div class="innerTextElement" style="margin:10px 0px 20px 0px;">'
                                    + '<div class="vat-relief-label-mobi">Country:</div>'
                                        + '<div class="innerTextElement" style="width:540px;">'
                                            + '<select id="charity-country" class="ecomOptionSelectMobi" style="width:540px;">'
                                                + '<option value=""> </option>'
                                                + '<option value="25">Australia</option>'
                                                + '<option value="55">Canada</option>'
                                                + '<option value="118">Ireland</option>'
                                                + '<option value="168">New Zealand</option>'
                                                + '<option value="1" selected="selected">United Kingdom</option>'
                                                + '<option value="247">United States</option>'
                                            + '</select>'
                                        + '</div>'
                                    + '</div>'
                                + '</div>'
                            + '</div>'
                        + '</div>';

        var claimReason = '<div class="ecomOptionItemMobi" id="reason-for-claim-form" style="width:100%; margin: 0;">'
                        + '<div class="innerTextElement" style="margin:10px 0px 10px 0px;">'
                            + '<div class="ecomOptionTotalMobi" style="margin-left:10px;">Reason for claim</div>'
                        + '</div>'
                        + '<div class="innerTextElement" style="margin:10px 0px 20px 0px;">'
                            + '<div class="vat-relief-label-mobi">Reason:</div>'
                                + '<div class="innerTextElement" style="width:540px;">'
                                    + '<select id="reason-for-claim" class="ecomOptionSelectMobi" style="width:540px;">'
                                    + '<option value="">Please select...</option>'
                                    + '<option value="Arthritis">Arthritis</option>'
                                    + '<option value="Blind">Blind</option>'
                                    + '<option value="Cardiovascular Disease">Cardiovascular Disease</option>'
                                    + '<option value="Deafness">Deafness</option>'
                                    + '<option value="Diabetes">Diabetes</option>'
                                    + '<option value="Epilepsy">Epilepsy</option>'
                                    + '<option value="Heart Disease">Heart Disease</option>'
                                    + '<option value="Hypertension">Hypertension</option>'
                                    + '<option value="Motor Neuron Disease">Motor Neuron Disease</option>'
                                    + '<option value="Multiple Sclerosis">Multiple Sclerosis</option>'
                                    + '<option value="Parkinsons Disease">Parkinson\'s Disease</option>'
                                    + '<option value="Physically Disabled">Physically Disabled</option>'
                                    + '<option value="Terminally Ill">Terminally Ill</option>'
                                    + '<option value="Other">Other</option>'
                                    + '</select>'
                                + '</div>'
                            + '</div>'
                        + '</div>'
                    + '</div>';

        var declaration = '<div class="ecomOptionItemMobi" id="declaration-form" style="width:100%; margin: 0;">'
                    + '<div class="innerTextElement" style="margin:10px 0px 30px 0px;">'
                        + '<h2 class="vat-relief-info-header-mobi">Declaration</h2>'
                        + '<p class="vat-relief-info-mobi"><input type="checkbox" id="declaration" value="1">I declare that I am chronically sick or disabled and need this item for personal or domestic use.</p>'
                    + '</div>'
                + '</div>'
                + '<div class="innerTextElement" style="margin:20px 0px 20px 0px;">'
                    + '<input type="button" class="ecomOptionCheckoutButtonMobi" style="margin-right:20px;" onclick="processCheckoutOption(\'vatrelief\', \'processform\');" value="">'
                + '</div>';

        panel = whoIsItemFor
            + forSomeoneElse
            + charityPurchase
            + claimReason
            + declaration;

        document.getElementById('mobiV2MainBasketInnerPanel').innerHTML = panel;
        if (document.getElementById('mobiV2MainBasketPanel').offsetWidth < 600) {
            showMobiV2Panel('mobiV2MainBasketPanel');
        } else {
            resizeMobileContainer('mobiV2MainBasketPanel');
        }
    } else {
        var claimingInfo = '<div id="claim-vat-relief" class="block no-margin">'
                                + '<div class="block-title">'
                                    + '<strong>Will you be claiming VAT relief?</strong>'
                                + '</div>'
                                + '<div class="block-content">'
                                    + '<div class="std">'
                                        + '<p><strong>Eligibility Declaration By A Disabled Person</strong></p>'
                                        + '<p>Please note there are penalities for making false declarations. If you are in any doubt as to whether you are eligible to recieve goods'
                                        + 'or services zero-rated for VAT you should consult Notice 701/7 VAT reliefs for disabled people available at www.hmrc.gov.uk or contact the'
                                        + 'National Advice Service on 0845 010 9000 before signing the declaration.</p>'
                                        + '<p>You can claim VAT Relief on these items if you are chronically sick or disabled and need the item for personal or domestic use</p>'
                                        + '<p>To make a claim, simply add the item to your basket and complete the short form and declaration. We\'ll then charge you the price excluding VAT provided you are eligible.</p>'
                                        + '<p>You can claim VAT Relief in the same way if you are:</p>'
                                        + '<ul>'
                                            + '<li>a) buying this item on behalf of someone else who meets the criteria above</li>'
                                            + '<li>b) a registered charity providing this item to other people who meet the criteria above.</li>'
                                        + '</ul>'
                                    + '</div>'
                                + '</div>'
                            + '</div>';

        var whoIsItemFor = '<div id="who-is-the-item-for-form">'
                                + '<div class="fieldset-header">Who is the item for?</div>'
                                    + '<div class="fieldset">'
                                    + '<ul class="vat-form-list">'
                                        + '<li>'
                                            + '<label for="who-is-the-item-for" class="input-label">Who is the item for?</label>'
                                            + '<select id="who-is-the-item-for" name="vat_relief_form[who_is_the_item_for]" title="Who is the item for?" class="validate-select required-entry ecomOptionDropDown">'
                                                + '<option value="me">Me</option>'
                                                + '<option value="someone_else">Someone Else</option>'
                                                + '<option value="uk_registered_charity">UK Registered Charity</option>'
                                            + '</select>'
                                        + '</li>'
                                    + '</ul>'
                                + '</div>'
                            + '</div>';

        var forSomeoneElse = '<div id="someone-else-form" style="display: none;">'
                                + '<div class="fieldset-header">Your details (the representative)</div>'
                                + '<div class="fieldset">'
                                    + '<ul class="vat-form-list">'
                                        + '<li>'
                                            + '<label for="relationship-to-claimant" class="input-label required"><em>*</em>Relationship To Claimant</label>'
                                            + '<select id="relationship-to-claimant" name="vat_relief_form[someone_else][relationship]" title="Relationship To Claimant" class="validate-select required-entry ecomOptionDropDown">'
                                                + '<option value="">Please select...</option>'
                                                + '<option value="Parent">Parent</option>'
                                                + '<option value="Guardian">Guardian</option>'
                                                + '<option value="Spouse">Spouse</option>'
                                                + '<option value="Trustee">Trustee (Acting On Claimant\'s Behalf)</option>'
                                                + '<option value="Doctor">Doctor</option>'
                                                + '<option value="Other Health Professional">Other Health Professional</option>'
                                            + '</select>'
                                        + '</li>'
                                    + '</ul>'
                                + '</div>'
                                + '<div class="fieldset-header">Details of the person eligible for VAT Relief (the claimant)</div>'
                                + '<div class="fieldset">'
                                    + '<ul class="vat-form-list">'
                                        + '<li>'
                                            + '<label for="claimant-title" class="input-label required"><em>*</em>Title</label>'
                                            + '<input type="text" id="claimant-title" name="vat_relief_form[someone_else][title]" title="Title" class="input-text required-entry">'
                                        + '</li>'
                                        + '<li>'
                                            + '<label for="claimant-first-name" class="input-label required"><em>*</em>Claimant\'s First Name</label>'
                                            + '<input type="text" id="claimant-first-name" name="vat_relief_form[someone_else][first_name]" title="Claimant\'s First Name" class="input-text required-entry">'
                                        + '</li>'
                                        + '<li>'
                                            + '<label for="claimant-last-name" class="input-label required"><em>*</em>Claimant\'s Last Name</label>'
                                            + '<input type="text" id="claimant-last-name" name="vat_relief_form[someone_else][last_name]" title="Claimant\'s Last Name" class="input-text required-entry">'
                                        + '</li>'
                                        + '<li>'
                                            + '<label for="claimant-address-1" class="input-label required"><em>*</em>Address</label>'
                                            + '<input type="text" id="claimant-address-1" name="vat_relief_form[someone_else][address_1]" title="Street Address" class="input-text required-entry" value="' + address.address1 + '">'
                                        + '</li>'
                                        + '<li>'
                                            + '<input type="text" id="claimant-address-2" name="vat_relief_form[someone_else][address_2]" title="Street Address 1" class="input-text" value="' + address.address2 + '">'
                                        + '</li>'
                                        + '<li>'
                                            + '<label for="claimant-city" class="input-label required"><em>*</em>Town/City</label>'
                                            + '<input type="text" id="claimant-city" name="vat_relief_form[someone_else][city]" title="Town/City" class="input-text" value="' + address.town + '">'
                                        + '</li>'
                                        + '<li>'
                                            + '<label for="claimant-region" class="input-label required"><em>*</em>County/Province</label>'
                                            + '<input type="text" id="claimant-region" name="vat_relief_form[someone_else][region]" title="County/Province" class="input-text required-entry" value="' + address.region + '">'
                                        + '</li>'
                                        + '<li>'
                                            + '<label for="claimant-postcode" class="input-label required"><em>*</em>Postal Code/Zip</label>'
                                            + '<input type="text" id="claimant-postcode" name="vat_relief_form[someone_else][postcode]" title="Postal Code/Zip" class="input-text validate-zip-international" value="' + address.postcode + '">'
                                        + '</li>'
                                        + '<li>'
                                            + '<label for="" class="required input-label required"><em>*</em>Country</label>'
                                            + '<select name="vat_relief_form[someone_else][country]" id="claimant-country" class="validate-select ecomOptionDropDown" title="Country">'
                                                + '<option value=""> </option>'
                                                + '<option value="25">Australia</option>'
                                                + '<option value="55">Canada</option>'
                                                + '<option value="118">Ireland</option>'
                                                + '<option value="168">New Zealand</option>'
                                                + '<option value="1" selected="selected">United Kingdom</option>'
                                                + '<option value="247">United States</option>'
                                            + '</select>'
                                        + '</li>'
                                    + '</ul>'
                                + '</div>'
                            + '</div>';

        var charityPurchase = '<div id="uk-registered-charity-form" style="display: none;">'
                                + '<div class="fieldset-header">Your Details</div>'
                                + '<div class="fieldset">'
                                    + '<ul class="vat-form-list">'
                                        + '<li>'
                                            + '<label for="your-title" class="input-label required"><em>*</em>Title</label>'
                                            + '<input type="text" id="your-title" name="vat_relief_form[uk_registered_charity][title]" title="Title" class="input-text required-entry">'
                                        + '</li>'
                                        + '<li>'
                                            + '<label for="your-first-name" class="input-label required"><em>*</em>First Name</label>'
                                            + '<input type="text" id="your-first-name" name="vat_relief_form[uk_registered_charity][first_name]" title="First Name" class="input-text required-entry" value="' + deliveryFirstName + '">'
                                        + '</li>'
                                        + '<li>'
                                            + '<label for="your-last-name" class="input-label required"><em>*</em>Last Name</label>'
                                            + '<input type="text" id="your-last-name" name="vat_relief_form[uk_registered_charity][last_name]" title="Last Name" class="input-text required-entry" value="' + deliveryLastName + '">'
                                        + '</li>'
                                    + '</ul>'
                                + '</div>'
                                + '<div class="fieldset-header">Details Of The Charity</div>'
                                + '<div class="fieldset">'
                                    + '<ul class="vat-form-list">'
                                        + '<li>'
                                            + '<label for="charity-name" class="input-label required"><em>*</em>Charity Name</label>'
                                            + '<input type="text" id="charity-name" name="vat_relief_form[uk_registered_charity][name]" title="Charity Name" class="input-text required-entry">'
                                        + '</li>'
                                        + '<li>'
                                            + '<label for="charity-number" class="input-label required"><em>*</em>Charity Number</label>'
                                            + '<input type="text" id="charity-number" name="vat_relief_form[uk_registered_charity][number]" title="Charity Number" class="input-text required-entry">'
                                        + '</li>'
                                        + '<li>'
                                            + '<label for="charity-address-1" class="input-label required"><em>*</em>Address</label>'
                                            + '<input type="text" id="charity-address-1" name="vat_relief_form[uk_registered_charity][address_1]" title="Street Address" class="input-text required-entry" value="' + address.address1 + '">'
                                        + '</li>'
                                        + '<li>'
                                            + '<input type="text" id="charity-address-2" name="vat_relief_form[uk_registered_charity][address_2]" title="Street Address 1" class="input-text" value="' + address.address2 + '">'
                                        + '</li>'
                                        + '<li>'
                                            + '<label for="charity-city" class="input-label required"><em>*</em>Town/City</label>'
                                            + '<input type="text" id="charity-city" name="vat_relief_form[uk_registered_charity][city]" title="Town/City" class="input-text required-entry" value="' + address.town + '">'
                                        + '</li>'
                                        + '<li>'
                                            + '<label for="charity-region" class="input-label required"><em>*</em>County/Province</label>'
                                            + '<input type="text" id="charity-region" name="vat_relief_form[uk_registered_charity][region]" title="County/Province" class="input-text required-entry" value="' + address.region + '">'
                                        + '</li>'
                                        + '<li>'
                                            + '<label for="charity-postcode" class="input-label required"><em>*</em>Postal Code/Zip</label>'
                                            + '<input type="text" id="charity-postcode" name="vat_relief_form[uk_registered_charity][postcode]" title="Postal Code/Zip" class="input-text validate-zip-international" value="' + address.postcode + '">'
                                        + '</li>'
                                        + '<li>'
                                            + '<label for="charity-country" class="input-label required"><em>*</em>Country</label>'
                                            + '<select name="vat_relief_form[uk_registered_charity][country]" id="charity-country" class="validate-select ecomOptionDropDown" title="Country">'
                                                + '<option value=""> </option>'
                                                + '<option value="25">Australia</option>'
                                                + '<option value="55">Canada</option>'
                                                + '<option value="118">Ireland</option>'
                                                + '<option value="168">New Zealand</option>'
                                                + '<option value="1" selected="selected">United Kingdom</option>'
                                                + '<option value="247">United States</option>'
                                            + '</select>'
                                        + '</li>'
                                    + '</ul>'
                                + '</div>'
                            + '</div>';

        var claimReason = '<div id="reason-for-claim-form">'
                            + '<div class="fieldset-header">Reason For Claim</div>'
                            + '<div class="fieldset">'
                                + '<ul class="vat-form-list">'
                                    + '<li>'
                                        + '<label for="reason-for-claim" class="input-label required"><em>*</em>Reason For Claim</label>'
                                        + '<select id="reason-for-claim" name="vat_relief_form[reason_for_claim]" title="Reason For Claim" class="validate-select required-entry ecomOptionDropDown">'
                                            + '<option value="">Please select...</option>'
                                            + '<option value="Arthritis">Arthritis</option>'
                                            + '<option value="Blind">Blind</option>'
                                            + '<option value="Cardiovascular Disease">Cardiovascular Disease</option>'
                                            + '<option value="Deafness">Deafness</option>'
                                            + '<option value="Diabetes">Diabetes</option>'
                                            + '<option value="Epilepsy">Epilepsy</option>'
                                            + '<option value="Heart Disease">Heart Disease</option>'
                                            + '<option value="Hypertension">Hypertension</option>'
                                            + '<option value="Motor Neuron Disease">Motor Neuron Disease</option>'
                                            + '<option value="Multiple Sclerosis">Multiple Sclerosis</option>'
                                            + '<option value="Parkinsons Disease">Parkinson\'s Disease</option>'
                                            + '<option value="Physically Disabled">Physically Disabled</option>'
                                            + '<option value="Terminally Ill">Terminally Ill</option>'
                                            + '<option value="Other">Other</option>'
                                        + '</select>'
                                    + '</li>'
                                + '</ul>'
                            + '</div>'
                        + '</div>';

        var declaration = '<div id="declaration-form" >'
                            + '<div class="fieldset-header">Declaration</div>'
                            + '<div class="fieldset">'
                                + '<input type="checkbox" id="declaration" name="vat_relief_form[declaration]" value="1" title="I declare that I am chronically sick or disabled and need this item for personal or domestic use" class="checkbox required-entry">'
                                + '<label for="declaration">I declare that I am chronically sick or disabled and need this item for personal or domestic use</label>'
                            + '</div>'
                        + '</div>';

        var buttonSet = '<div class="buttons-set" style="clear: both">'
                            + '<input id="submit-vat-relief-button" type="button" class="ecomOptionCheckoutButton" onclick="processCheckoutOption(\'vatrelief\', \'processform\');" value="">'
                        + '</div>';

        panel =
            '<div id="vat-exemption">'
            + '<div id="ecomModalSummaryPanel" class="popup">'
                + '<div id="ecomModalHeaderPanel"></div>'
                + '<div class="ecomOptionLabel" style="top:10px;left:25px;">Please enter your details below:</div>'
                + '<input type="button" class="ecomOptionContinueButton" style="left:825px;top:10px;" onclick="resetBasketStartUps();" value="">'
                + '<h2 class="vat-form-header">VAT Relief Form</h2>'
                + '<div id="vat-relief-form-container" class="block">'
                    + '<form id="vat-relief-form" action="#">'
                        + whoIsItemFor
                        + claimingInfo
                        + forSomeoneElse
                        + charityPurchase
                        + claimReason
                        + declaration
                        + buttonSet
                    + '</form>'
                + '</div>'
            + '</div>'
            + '</div>';

        ShowModal3();
        editPanel3Inner.innerHTML = "";
        editPanel3Inner.innerHTML = panel;
        editPanel3Inner.style.width = "984px";
        setEditPanel3Position();
    }

    $('#who-is-the-item-for').change(function () {
        var selectValue = this.value;
        $('#someone-else-form').hide();
        $('#uk-registered-charity-form').hide();
        $('#claim-vat-relief').hide();
        if (selectValue == 'someone_else') {
            $('#someone-else-form').show();
        } else if (selectValue == 'uk_registered_charity') {
            $('#uk-registered-charity-form').show();
        } else {
            $('#claim-vat-relief').show();
        }
        if (!isMobileV2) {
            setEditPanel2Position();
        } else {
            resizeMobileContainer('mobiV2MainBasketPanel');
        }
    });
}

function validateVATReliefForm() {
    var cando = true;
    var message = "";
    var vatForm = {};

    vatForm.whoFor = document.getElementById('who-is-the-item-for').value;

    vatForm.reason = document.getElementById('reason-for-claim').value;
    if (vatForm.reason == "") {
        cando = false;
        message += "Reason for the claim is missing.<br>";
    }

    vatForm.declaration = document.getElementById('declaration').checked;
    if (!vatForm.declaration) {
        cando = false;
        message += "Please check the declaration to claim VAT relief.<br>";
    }

    vatForm.relationship = document.getElementById('relationship-to-claimant').value;
    vatForm.claimantTitle = document.getElementById('claimant-title').value;
    vatForm.claimantFirstName = document.getElementById('claimant-first-name').value;
    vatForm.claimantLastName = document.getElementById('claimant-last-name').value;
    vatForm.claimantAddress1 = document.getElementById('claimant-address-1').value;
    vatForm.claimantAddress2 = document.getElementById('claimant-address-2').value;
    vatForm.claimantCity = document.getElementById('claimant-city').value;
    vatForm.claimantRegion = document.getElementById('claimant-region').value;
    vatForm.claimantPostcode = document.getElementById('claimant-postcode').value;
    vatForm.claimantCountryID = document.getElementById('claimant-country').value;
    vatForm.yourTitle = document.getElementById('your-title').value;
    vatForm.yourFirstName = document.getElementById('your-first-name').value;
    vatForm.yourLastName = document.getElementById('your-last-name').value;
    vatForm.charityName = document.getElementById('charity-name').value;
    vatForm.charityNumber = document.getElementById('charity-number').value;
    vatForm.charityAddress1 = document.getElementById('charity-address-1').value;
    vatForm.charityAddress2 = document.getElementById('charity-address-2').value;
    vatForm.charityCity = document.getElementById('charity-city').value;
    vatForm.charityRegion = document.getElementById('charity-region').value;
    vatForm.charityPostcode = document.getElementById('charity-postcode').value;
    vatForm.charityCountryID = document.getElementById('charity-country').value;

    switch (vatForm.whoFor) {
        case 'someone_else':
            if (vatForm.relationship == "") {
                cando = false;
                message += "Relationship to claimant is missing.<br>";
            }
            if (vatForm.claimantTitle == "") {
                cando = false;
                message += "Claimant title is missing<br>";
            }
            if (vatForm.claimantFirstName == "") {
                cando = false;
                message += "Claimant first name is missing<br>";
            }
            if (vatForm.claimantLastName == "") {
                cando = false;
                message += "Claimant last name is missing<br>";
            }
            if (vatForm.claimantAddress1 == "") {
                cando = false;
                message += "Claimant address is missing<br>";
            }
            if (vatForm.claimantCity == "") {
                cando = false;
                message += "Claimant town/city is missing<br>";
            }
            if (vatForm.claimantRegion == "") {
                cando = false;
                message += "Claimant county/province is missing<br>";
            }
            if (vatForm.claimantPostcode == "") {
                cando = false;
                message += "Claimant postcode/zip is missing<br>";
            }
            if (vatForm.claimantCountryID == "") {
                cando = false;
                message += "Claimant country is missing<br>";
            }
            break;
        case 'uk_registered_charity':
            if (vatForm.yourTitle == "") {
                cando = false;
                message += "Title is missing.<br>";
            }
            if (vatForm.yourFirstName == "") {
                cando = false;
                message += "First name is missing<br>";
            }
            if (vatForm.yourLastName == "") {
                cando = false;
                message += "Last name is missing<br>";
            }
            if (vatForm.charityName == "") {
                cando = false;
                message += "Charity name is missing<br>";
            }
            if (vatForm.charityNumber == "") {
                cando = false;
                message += "Charity number is missing<br>";
            }
            if (vatForm.charityAddress1 == "") {
                cando = false;
                message += "Charity address is missing<br>";
            }
            if (vatForm.charityCity == "") {
                cando = false;
                message += "Charity town/city is missing<br>";
            }
            if (vatForm.charityRegion == "") {
                cando = false;
                message += "Charity county/province is missing<br>";
            }
            if (vatForm.charityPostcode == "") {
                cando = false;
                message += "Charity postcode/zip is missing<br>";
            }
            if (vatForm.charityCountryID == "") {
                cando = false;
                message += "Charity country is missing<br>";
            }
            break;
        default:
            // Check we have name and address details already

            break;
    }

    if (cando) {
        processVATReliefForm(vatForm);
        HideModal3(); // Need to do check for mobile version to be thorough
    }
    else {
        showPopupMessage("Please correct the following Errors<br>" + message, "OK");
    }
}

function processVATReliefForm(vatForm) {
    gotVATReliefForm = true;
    giveVATReliefOnMarkedProducts = true;

    //alert('Send the email here');

    $.ajax({
        dataType: "json",
        url: "/Handlers/sendVATReliefForm.ashx?d=" + new Date().getTime(),
        type: "POST",
        data: JSON.stringify({
            companyID: companyID,
            shopID: shopID,
            customerID: ecomCustomerID,
            email: ecomEmail,
            basketRows: basket,
            form: vatForm,
            giveVATReliefOnMarkedProducts: giveVATReliefOnMarkedProducts,
            deliveryPhone: deliveryPhone,
            deliveryMobile: deliveryMobile
        })
    }).done(function (result) {
        if (result.sentForm) {
            /*
            var exdate = new Date();
            exdate.setDate(exdate.getDate() + 14);
            document.cookie = "gotVATReliefForm=true; expires=" + exdate.toGMTString() + ";path=/;";
            */
            gotoCheckout();
        } else {
            showPopupMessage("Sorry, there was a problem sending your VAT Relief form<br>", "OK");
        }
    }).fail(function () {
        showPopupMessage("Sorry, there was a problem sending your VAT Relief form<br>", "OK");
    });
}

function checkVATReliefStatus(action) {
    var applyRelief = false;

    var cArray = document.cookie.split(';');
    for (var i = 0; i < cArray.length; i++) {
        if (cArray[i].indexOf("gotVATReliefForm") > -1) {
            gotVATReliefForm = true;
        }
        //if (cArray[i].indexOf("applyVATRelief") > -1) {
        //    applyRelief = true;
        //}
    }

    applyRelief = (action == 'apply') ? true : false;
    /*
    if (!gotVATReliefForm && applyRelief) {
        buildVATReliefForm();
        return;
    }
    */
    /*
    if (document.getElementById("showVATReliefForm")) {
        applyRelief = document.getElementById("showVATReliefForm").checked;
    
        if (!gotVATReliefForm && applyRelief) {
            buildVATReliefForm();
            return;
        }
    }
    */

    giveVATReliefOnMarkedProducts = applyRelief; //(gotVATReliefForm && applyRelief) ? applyRelief : false;

    var exdate = new Date();
    exdate.setDate(exdate.getDate() + 14);
    document.cookie = (giveVATReliefOnMarkedProducts)
        ? "applyVATRelief=true; expires=" + exdate.toGMTString() + ";path=/;"
        : "applyVATRelief=; expires=Thu, 01 Jan 1970 00:00:00 UTC;path=/;";
}

function processCheckoutOption(mode, action) {
    switch (mode) {
        case 'vatrelief':
            if (action == 'processform') {
                validateVATReliefForm();
            } else {
                checkVATReliefStatus(action);
                buildModalBasket();
            }
            break;
        default:
            // There was no input back
            break;
    }
}
// #endregion Checkout Options

//#region Login Functions

var lastUsername = "";
var lastPassword = "";
var loginData;

function showLoginOptionsPanel(override) {
    var testTotal = 0;
    if (document.getElementById('totalToSubmit')) {
        if (document.getElementById('totalToSubmit').getAttribute("total")) {
            testTotal = parseFloat(document.getElementById('totalToSubmit').getAttribute("total"));
        }
    }
    if (testTotal > 0 || override) {
        lastUsername = "";
        lastPassword = "";
        firstBasketRun = false;
        var panel = "";
        if (isMobileV2) {
            mobiRoute = "login";
            document.getElementById('mobiV2MainBasketPanel').style.width = "0px";
            currV2MobiPanel = "";
            panel = "<div class=\"innerTextElement\">" +
                        "<div class=\"innerTextElement\">" +
                            "<div class=\"ecomBasketIconMobi\"></div>" +
                            "<div class=\"ecomOptionLabelMobi\" style=\"width:400px;line-height:110px;\">Login Options</div>" +
                            "<input type=\"button\" class=\"ecomOptionContinueButtonMobi\" onclick=\"resetBasketStartUps();\" value=\"\" />" +
                        "</div>" +
                        "<div class=\"innerTextElement\">" +
                            "<div class=\"ecomOptionTotalMobi\" style=\"margin-left:10px;\">Existing Customer?</div>" +
                        "</div>" +
                        "<div class=\"innerTextElement\" style=\"margin-top:10px;\">" +
                            "<div class=\"ecomOptionTitleMobi\" style=\"width:250px;margin-left:10px;\">Email:</div>" +
                            "<input id=\"loginEmail\" class=\"ecomOptionInputMobi\" style=\"width:650px;\" value=\"username\" onfocus=\"setTextField(this, 'username');\" onblur=\"setTextField(this, 'username');\" type=\"text\">" +
                        "</div>" +
                        "<div class=\"innerTextElement\" style=\";margin-top:10px;\">" +
                            "<div class=\"ecomOptionTitleMobi\" style=\"width:250px;margin-left:10px;\">Password:</div>" +
                            "<input id=\"loginPassword\" class=\"ecomOptionInputMobi\" style=\"width:325px;\" value=\"password\" onfocus=\"setTextField(this, 'password');\" onblur=\"setTextField(this, 'password');\" type=\"password\">" +
                            "<input type=\"button\" class=\"ecomOptionForgotButtonMobi\" onclick=\"showResetEcomCustomerPassword();\" style=\"float:left;margin-left:10px;\" value=\"\" />" +
                        "</div>" +
                        "<div class=\"ecomOptionItemMobi\">" +
                            "<div class=\"innerTextElement\" style=\"margin:20px 0px 20px 0px;\">" +
                                "<input type=\"button\" class=\"ecomOptionLoginButtonMobi\" onclick=\"ecomLogin();\" style=\"margin-right:20px;\" value=\"\" />" +
                            "</div>" +
                        "</div>" +
                        "<div class=\"innerTextElement\">" +
                            "<div class=\"ecomOptionTotalMobi\" style=\"margin:10px 0px 0px 10px;\">Checkout as Guest</div>" +
                        "</div>" +
                        "<div class=\"innerTextElement\" style=\"margin:10px 0px 10px 0px;\">" +
                            "<input type=\"button\" class=\"ecomOptionGuestButtonMobi\" onclick=\"showGuestCheckoutPanel();\" style=\"margin-right:20px;\" value=\"\" />" +
                        "</div>" +
                        "<div class=\"innerTextElement\" style=\"margin:10px 0px 10px 0px;\">" +
                            "<input type=\"button\" class=\"ecomOptionRegisterButtonMobi\" onclick=\"showRegisterPanel();\" value=\"\" />" +
                        "</div>" +
                    "</div>";
            document.getElementById('mobiV2MainBasketInnerPanel').innerHTML = panel;
            showMobiV2Panel('mobiV2MainBasketPanel');
        }
        else {
     
            ShowModal2();
            editPanel2Inner.innerHTML = "";
            panel = "<div id=\"ecomModalLoginPanel\">" +
                        "<div class=\"ecomOptionLabel\" style=\"top:20px;left:25px;\">Please choose an option before proceeding with your purchase:</div>" +
                        "<input type=\"button\" class=\"ecomOptionContinueButton\" onclick=\"resetBasketStartUps();\" value=\"\" style=\"left:695px;\" />" +
                        "<div class=\"ecomOptionTitle\" style=\"top:95px;left:45px;\">Checkout<br>as a guest</div>" +
                        "<div class=\"ecomOptionTitle\" style=\"top:95px;left:280px;\">Log in if you're an existing customer</div>" +
                        "<div class=\"ecomOptionLabel\" style=\"top:125px;left:280px;font-size:12px;\">Enter your log in details below:</div>" +
                        "<input type=\"button\" class=\"ecomOptionCheckoutButton\" onclick=\"showGuestCheckoutPanel();\" value=\"\" />" +
                        "<input type=\"button\" class=\"ecomOptionLoginButton\" onclick=\"ecomLogin();\" value=\"\" />" +
                        "<div class=\"ecomOptionLabel\" style=\"top:167px;left:280px;font-size:14px;\">Email:</div>" +
                        "<div class=\"ecomOptionLabel\" style=\"top:202px;left:280px;font-size:14px;\">Password:</div>" +
                        "<input id=\"loginEmail\" type=\"text\" class=\"ecomOptionTitle ecomOptionInput\" style=\"top:167px;left:363px;width:210px;\" value=\"username\" onfocus=\"setTextField(this, 'username');\" onblur=\"setTextField(this, 'username');\" />" +
                        "<input id=\"loginPassword\" type=\"password\" class=\"ecomOptionTitle ecomOptionInput\" style=\"top:202px;left:363px;width:210px;\" value=\"password\" onfocus=\"setTextField(this, 'password');\" onblur=\"setTextField(this, 'password');\" />" +
                        "<div class=\"ecomOptionLabel\" style=\"top:240px;left:280px;font-size:14px;\">Forgotten Your Password? <a onclick=\"showResetEcomCustomerPassword();\" class=\"ecomOptionRegisterText\">Click here</span></a></div>" +
                        "<div class=\"ecomOptionLabel\" style=\"top:275px;left:625px;font-size:14px;\">Not Registered? <a onclick=\"showRegisterPanel();\" class=\"ecomOptionRegisterText\">Click here</span></a></div>" +
                        "<div class=\"paypalPaymentOptions\" style=\"margin:280px 0px 0px 30px;\"></div>" +
                    "</div>";
            editPanel2Inner.innerHTML = panel;
            editPanel2Inner.style.width = "850px";
            setEditPanel2Position();
        }
    }
    else {
        showPopupMessage("It appears that you are submitting a sale with a value of 0.00<br>This is not allowed<br>If you are using promotion code please read the details of the promotion clearly<br>Usually promotions are linked with other products", "OK");
    }
}

function ecomLogin(reuse) {
    if (reuse == null) {
        lastUsername = document.getElementById('loginEmail').value;
        lastPassword = document.getElementById('loginPassword').value;
    }
    $.post("/Handlers/ecomLogin.ashx?d=" + new Date().getMilliseconds(), {
        shpid: shopID,
        email: lastUsername,
        pword: lastPassword
    }, function (data) {
        if (data == "0") {
            showPopupMessage("Please enter a valid email address", "OK");
        }
        else if (data == "-1") {
            showPopupMessage("Please enter a valid password", "OK");
        }
        else {
            loginData = data;
            deliveryFirstName = data.split("^^")[6] ;
            deliveryLastName = data.split("^^")[7];
            deliveryPhone = data.split("^^")[8];
            deliveryMobile = data.split("^^")[9];
            ecomCustomerID = data.split("^^")[0];
            billing = unescape(data.split("^^")[1]);
            shipping = unescape(data.split("^^")[2]);
            shipCountryID = data.split("^^")[3];
            billingAddressID = data.split("^^")[4];
            shippingAddressID = data.split("^^")[5];
            $(editPanel2Wrapper).animate({ height: "0px" }, 250,
            function () {
                showLoginAddress();
            });
        }
    });
}

function showLoginAddress() {
    if (isMobileV2) {
        document.getElementById('mobiV2MainBasketPanel').style.width = "0px";
        currV2MobiPanel = "";

        panel = "<div class=\"innerTextElement\">" +
                    "<div class=\"ecomOptionItemMobi\">" +
                        "<div class=\"innerTextElement\" style=\"margin-bottom:10px;\">" +
                            "<div class=\"ecomBasketIconMobi\"></div>" +
                            "<div class=\"ecomOptionLabelMobi\" style=\"line-height:110px;\">Enter your details below</div>" +
                            "<input type=\"button\" class=\"ecomOptionContinueButtonMobi\" onclick=\"resetBasketStartUps();\" value=\"\" />" +
                        "</div>" +
                        "<div class=\"innerTextElement\" style=\"margin:10px 0px 10px 0px;\">" +
                            "<div class=\"ecomOptionTotalMobi\" style=\"margin-left:10px;\">Your Details:</div>" +
                        "</div>" +
                        "<div class=\"innerTextElement\" style=\"margin-top:10px;\">" +
                            "<div class=\"ecomOptionTitleMobi\" style=\"width:380px;margin-left:10px;\">First Name:</div>" +
                            "<input id=\"deliverToFirstName\" class=\"ecomOptionInputMobi\" style=\"width:540px;\" value=\"" + deliveryFirstName + "\" type=\"text\">" +
                        "</div>" +
                        "<div class=\"innerTextElement\" style=\"margin-top:10px;\">" +
                            "<div class=\"ecomOptionTitleMobi\" style=\"width:380px;margin-left:10px;\">Last Name:</div>" +
                            "<input id=\"deliverToLastName\" class=\"ecomOptionInputMobi\" style=\"width:540px;\" value=\"" + deliveryLastName + "\" type=\"text\">" +
                        "</div>" +
                        "<div class=\"innerTextElement\" style=\"margin:10px 0px 10px 0px;\">" +
                            "<div class=\"ecomOptionTitleMobi\" style=\"width:380px;margin-left:10px;\">Telephone:</div>" +
                            "<input id=\"deliverToPhone\" class=\"ecomOptionInputMobi\" style=\"width:540px;\" value=\"" + deliveryPhone + "\" type=\"text\">" +
                        "</div>" +
                        "<div class=\"innerTextElement\" style=\"margin:10px 0px 10px 0px;\">" +
                            "<div class=\"ecomOptionTitleMobi\" style=\"width:380px;margin-left:10px;\">Mobile:</div>" +
                            "<input id=\"deliverToMobile\" class=\"ecomOptionInputMobi\" style=\"width:540px;\" value=\"" + deliveryMobile + "\" type=\"text\">" +
                        "</div>" +
                    "</div>" +
                    "<div class=\"ecomOptionItemMobi\">" +
                        "<div class=\"innerTextElement\" style=\"margin:10px 0px 10px 0px;\">" +
                            "<div class=\"ecomOptionTotalMobi\" style=\"margin-left:10px;\">Billing Address:</div>" +
                        "</div>" +
                        "<div class=\"innerTextElement\" style=\"margin-top:10px;\">" +
                            "<div class=\"ecomOptionTitleMobi\" style=\"width:380px;margin-left:10px;\">Address 1:</div>" +
                            "<input id=\"billAdd1\" type=\"text\" class=\"ecomOptionInputMobi\" style=\"width:540px;\" value=\"" + billing.split("**")[0] + "\" />" +
                        "</div>" +
                        "<div class=\"innerTextElement\" style=\"margin-top:10px;\">" +
                            "<div class=\"ecomOptionTitleMobi\" style=\"width:380px;margin-left:10px;\">Address 2:</div>" +
                            "<input id=\"billAdd2\" type=\"text\" class=\"ecomOptionInputMobi\" style=\"width:540px;\" value=\"" + billing.split("**")[1] + "\" />" +
                        "</div>" +
                        "<div class=\"innerTextElement\" style=\"margin-top:10px;\">" +
                            "<div class=\"ecomOptionTitleMobi\" style=\"width:380px;margin-left:10px;\">Town/City:</div>" +
                            "<input id=\"billTown\" type=\"text\" class=\"ecomOptionInputMobi\" style=\"width:540px;\" value=\"" + billing.split("**")[2] + "\" />" +
                        "</div>" +
                        "<div class=\"innerTextElement\" style=\"margin-top:10px;\">" +
                            "<div class=\"ecomOptionTitleMobi\" style=\"width:380px;margin-left:10px;\">County/Region:</div>" +
                            "<input id=\"billCounty\" type=\"text\" class=\"ecomOptionInputMobi\" style=\"width:540px;\" value=\"" + billing.split("**")[3] + "\" />" +
                        "</div>" +
                        "<div class=\"innerTextElement\" style=\"margin-top:10px;\">" +
                            "<div class=\"ecomOptionTitleMobi\" style=\"width:380px;margin-left:10px;\">Post/Zip Code:</div>" +
                            "<input id=\"billPCode\" type=\"text\" class=\"ecomOptionInputMobi\" style=\"width:300px;\" value=\"" + billing.split("**")[4] + "\" />";
        if (hasCraftyClicks) {
            panel += "<input type=\"button\" class=\"ecomOptionInputMobi ecomOptionInputMobiButton\" onclick=\"showCraftyClicksAddressPicker('bill');\" value=\"Lookup\" />";
        }
        panel += "</div>" +
                        "<div class=\"innerTextElement\" style=\"margin:10px 0px 20px 0px;\">" +
                            "<div class=\"ecomOptionTitleMobi\" style=\"width:380px;margin-left:10px;\">Country:</div>" +
                            "<div id=\"billCountry\" class=\"innerTextElement\" style=\"width:540px;\"></div>" +
                        "</div>" +
                    "</div>" +
                    "<div class=\"ecomOptionItemMobi\">" +
                        "<div class=\"innerTextElement\" style=\"margin:10px 0px 10px 0px;\">" +
                            "<div class=\"ecomOptionTotalMobi\" style=\"margin-left:10px;\">Shipping Address:</div>" +
                            "<div class=\"ecomOptionLabelMobi\" style=\"margin-left:10px;;\">Same as Billing?</div>" +
                            "<input id=\"addressShipAsBill\" type=\"button\" class=\"ecomOptionCheckoutToggleOffMobi\" onclick=\"toggleShippingAsBilling(this);\" style=\"float:left;margin-left:10px;\" value=\"\" />" +
                        "</div>" +
                        "<div id=\"shippingHiderPanel\" style=\"overflow:hidden;\" class=\"innerTextElement\">" +
                            "<div class=\"innerTextElement\" style=\"margin-top:10px;\">" +
                                "<div class=\"ecomOptionTitleMobi\" style=\"width:380px;margin-left:10px;\">Address 1:</div>" +
                                "<input id=\"shipAdd1\" type=\"text\" class=\"ecomOptionInputMobi\" style=\"width:540px;\" value=\"" + shipping.split("**")[0] + "\" />" +
                            "</div>" +
                            "<div class=\"innerTextElement\" style=\"margin-top:10px;\">" +
                                "<div class=\"ecomOptionTitleMobi\" style=\"width:380px;margin-left:10px;\">Address 2:</div>" +
                                "<input id=\"shipAdd2\" type=\"text\" class=\"ecomOptionInputMobi\" style=\"width:540px;\" value=\"" + shipping.split("**")[1] + "\" />" +
                            "</div>" +
                            "<div class=\"innerTextElement\" style=\"margin-top:10px;\">" +
                                "<div class=\"ecomOptionTitleMobi\" style=\"width:380px;margin-left:10px;\">Town/City:</div>" +
                                "<input id=\"shipTown\" type=\"text\" class=\"ecomOptionInputMobi\" style=\"width:540px;\" value=\"" + shipping.split("**")[2] + "\" />" +
                            "</div>" +
                            "<div class=\"innerTextElement\" style=\"margin-top:10px;\">" +
                                "<div class=\"ecomOptionTitleMobi\" style=\"width:380px;margin-left:10px;\">County/Region:</div>" +
                                "<input id=\"shipCounty\" type=\"text\" class=\"ecomOptionInputMobi\" style=\"width:540px;\" value=\"" + shipping.split("**")[3] + "\" />" +
                            "</div>" +
                            "<div class=\"innerTextElement\" style=\"margin-top:10px;\">" +
                                "<div class=\"ecomOptionTitleMobi\" style=\"width:380px;margin-left:10px;\">Post/Zip Code:</div>" +
                                "<input id=\"shipPCode\" type=\"text\" class=\"ecomOptionInputMobi\" style=\"width:300px;\" value=\"" + shipping.split("**")[4] + "\" />";

        if (hasCraftyClicks) {
            panel += "<input type=\"button\" class=\"ecomOptionInputMobi ecomOptionInputMobiButton\" onclick=\"showCraftyClicksAddressPicker('ship');\" value=\"Lookup\" />";
        }

        panel += "</div>" +
                            "<div class=\"innerTextElement\" style=\"margin:10px 0px 20px 0px;\">" +
                                "<div class=\"ecomOptionTitleMobi\" style=\"width:380px;margin-left:10px;\">Country:</div>" +
                                "<div id=\"shipCountry\" class=\"innerTextElement\" style=\"width:540px;\"></div>" +
                            "</div>" +
                        "</div>" +
                    "</div>" +

                    "<div class=\"innerTextElement\" style=\"margin:10px 0px 0px 0px;\">" +
                        "<input type=\"button\" class=\"ecomOptionChangeButtonMobi\" onclick=\"showCreateNewEcomCustomerPassword();\" value=\"\" />" +
                    "</div>" +
                    "<div class=\"innerTextElement\" style=\"margin:10px 0px 10px 0px;\">" +
                        "<input type=\"button\" class=\"ecomOptionCheckoutButtonMobi\" onclick=\"updateCustomerAddress();\" style=\"margin-right:20px;\" value=\"\" />" +
                    "</div>" +
                "</div>";
        document.getElementById('mobiV2MainBasketInnerPanel').innerHTML = panel;
        getCountries(billing.split("**")[5], shipping.split("**")[5]);
        showMobiV2Panel('mobiV2MainBasketPanel');
    }
    else {
        editPanel2Inner.innerHTML = "";
        var panel = "<div id=\"ecomModalGuestCheckoutPanel\">" +
                        "<div id=\"ecomModalHeaderPanel\"></div>" +
                        "<div class=\"ecomOptionLabel\" style=\"top:10px;left:25px;\">Please enter your details below:</div>" +
                        "<input type=\"button\" class=\"ecomOptionContinueButton\" style=\"left:825px;top:10px;\" onclick=\"resetBasketStartUps();\" value=\"\" />" +
                        "<div class=\"ecomOptionTitle\" style=\"top:50px;left:35px;\">Address Verification</div>" +
                        "<div class=\"ecomOptionLabel\" style=\"top:90px;left:35px;font-size:14px;\">First name:</div>" +
                        "<input id=\"deliverToFirstName\" type=\"text\" class=\"ecomOptionTitle ecomOptionInput\" style=\"top:90px;left:145px;width:300px;\" value=\"" + deliveryFirstName + "\" />" +
                        "<div class=\"ecomOptionLabel\" style=\"top:90px;left:520px;font-size:14px;\">Last name:</div>" +
                        "<input id=\"deliverToLastName\" type=\"text\" class=\"ecomOptionTitle ecomOptionInput\" style=\"top:90px;left:635px;width:300px;\" value=\"" + deliveryLastName + "\" />" +
                        "<div class=\"ecomOptionLabel\" style=\"top:135px;left:35px;font-size:14px;\">Telephone:</div>" +
                        "<input id=\"deliverToPhone\" type=\"text\" class=\"ecomOptionTitle ecomOptionInput\" style=\"top:135px;left:145px;width:300px;\" value=\"" + deliveryPhone + "\" />" +
                        "<div class=\"ecomOptionLabel\" style=\"top:135px;left:520px;font-size:14px;\">Mobile:</div>" +
                        "<input id=\"deliverToMobile\" type=\"text\" class=\"ecomOptionTitle ecomOptionInput\" style=\"top:135px;left:635px;width:300px;\" value=\"" + deliveryMobile + "\" />" +
                        "<div class=\"ecomOptionTitle\" style=\"top:180px;left:35px;\">Billing Address</div>" +
                        "<div class=\"ecomOptionTitle\" style=\"top:180px;left:520px;\">Shipping Address</div>" +
                        "<div id=\"addressShipAsBill\" class=\"ecomOptionTickPanelOff\" style=\"top:187px;left:810px;\" onclick=\"toggleShippingAsBilling(this);\"></div>" +
                        "<div class=\"ecomOptionLabel\" style=\"top:180px;left:835px;font-size:14px;\">Same as Billing</div>" +
                        "<div id=\"billingAddressPanel\" class=\"ecomRegisterAddressPanel\" style=\"top:220px;left:35px;\">" +
                            "<div class=\"ecomOptionLabel\" style=\"top:0px;left:0px;font-size:14px;\">Address 1:</div>" +
                            "<input id=\"billAdd1\" type=\"text\" class=\"ecomOptionTitle ecomOptionInput\" style=\"top:0px;left:110px;width:300px;\" value=\"" + billing.split("**")[0] + "\" onkeyup=\"updateAddressField(this);\" />" +
                            "<div class=\"ecomOptionLabel\" style=\"top:35px;left:0px;font-size:14px;\">Address 2:</div>" +
                            "<input id=\"billAdd2\" type=\"text\" class=\"ecomOptionTitle ecomOptionInput\" style=\"top:35px;left:110px;width:300px;\" value=\"" + billing.split("**")[1] + "\" onkeyup=\"updateAddressField(this);\" />" +
                            "<div class=\"ecomOptionLabel\" style=\"top:70px;left:0px;font-size:14px;\">Town/City:</div>" +
                            "<input id=\"billTown\" type=\"text\" class=\"ecomOptionTitle ecomOptionInput\" style=\"top:70px;left:110px;width:300px;\" value=\"" + billing.split("**")[2] + "\" onkeyup=\"updateAddressField(this);\" />" +
                            "<div class=\"ecomOptionLabel\" style=\"top:105px;left:0px;font-size:14px;\">County/Region:</div>" +
                            "<input id=\"billCounty\" type=\"text\" class=\"ecomOptionTitle ecomOptionInput\" style=\"top:105px;left:110px;width:300px;\" value=\"" + billing.split("**")[3] + "\" onkeyup=\"updateAddressField(this);\" />" +
                            "<div class=\"ecomOptionLabel\" style=\"top:140px;left:0px;font-size:14px;\">Post/Zip Code:</div>" +
                            "<input id=\"billPCode\" type=\"text\" class=\"ecomOptionTitle ecomOptionInput\" style=\"top:140px;left:110px;width:198px;\" value=\"" + billing.split("**")[4] + "\" onkeyup=\"updateAddressField(this);\" />" +
                            "<div class=\"ecomOptionLabel\" style=\"top:175px;left:0px;font-size:14px;\">Country:</div>" +
                            "<div id=\"billCountry\" class=\"ecomOptionDropDown\" style=\"top:175px;left:110px;\"></div>";
        if (hasCraftyClicks) {
            panel += "<a class=\"ecomOptionRegisterText\" onclick=\"showCraftyClicksAddressPicker('bill');\" style=\"position:absolute;top:160px;left:340px;\">Lookup<br/>Address</a>";
        }
        panel += "</div>" +
                        "<div id=\"shippingAddressPanel\" class=\"ecomRegisterAddressPanel\" style=\"top:220px;left:520px;\">" +
                            "<div class=\"ecomOptionLabel\" style=\"top:0px;left:0px;font-size:14px;\">Address 1:</div>" +
                            "<input id=\"shipAdd1\" type=\"text\" class=\"ecomOptionTitle ecomOptionInput\" style=\"top:0px;left:110px;width:300px;\" value=\"" + shipping.split("**")[0] + "\" />" +
                            "<div class=\"ecomOptionLabel\" style=\"top:35px;left:0px;font-size:14px;\">Address 2:</div>" +
                            "<input id=\"shipAdd2\" type=\"text\" class=\"ecomOptionTitle ecomOptionInput\" style=\"top:35px;left:110px;width:300px;\" value=\"" + shipping.split("**")[1] + "\" />" +
                            "<div class=\"ecomOptionLabel\" style=\"top:70px;left:0px;font-size:14px;\">Town/City:</div>" +
                            "<input id=\"shipTown\" type=\"text\" class=\"ecomOptionTitle ecomOptionInput\" style=\"top:70px;left:110px;width:300px;\" value=\"" + shipping.split("**")[2] + "\" />" +
                            "<div class=\"ecomOptionLabel\" style=\"top:105px;left:0px;font-size:14px;\">County/Region:</div>" +
                            "<input id=\"shipCounty\" type=\"text\" class=\"ecomOptionTitle ecomOptionInput\" style=\"top:105px;left:110px;width:300px;\" value=\"" + shipping.split("**")[3] + "\" />" +
                            "<div class=\"ecomOptionLabel\" style=\"top:140px;left:0px;font-size:14px;\">Post/Zip Code:</div>" +
                            "<input id=\"shipPCode\" type=\"text\" class=\"ecomOptionTitle ecomOptionInput\" style=\"top:140px;left:110px;width:198px;\" value=\"" + shipping.split("**")[4] + "\" />" +
                            "<div class=\"ecomOptionLabel\" style=\"top:175px;left:0px;font-size:14px;\">Country:</div>" +
                            "<div id=\"shipCountry\" class=\"ecomOptionDropDown\" style=\"top:175px;left:110px;\"></div>";
        if (hasCraftyClicks) {
            panel += "<a class=\"ecomOptionRegisterText\" onclick=\"showCraftyClicksAddressPicker('ship');\" style=\"position:absolute;top:160px;left:340px;\">Lookup<br/>Address</a>";
        }
        panel += "</div>" +
                        "<div class=\"ecomOptionLabel\" style=\"top:465px;left:45px;font-size:14px;line-height:14px;\">Click Checkout once you have checked your details.</div>" +
                        "<div class=\"ecomOptionLabel\" style=\"top:485px;left:45px;font-size:14px;\">Change Your Password? <a onclick=\"showCreateNewEcomCustomerPassword();\" class=\"ecomOptionRegisterText\">Click here</span></a></div>" +
                        "<input type=\"button\" class=\"ecomOptionCheckoutButton\" onclick=\"updateCustomerAddress();\" style=\"top:450px;left:750px;\" value=\"\" />" +
                    "</div>";


        if (shopID == 143) {
            panel = panel.replace("Click Checkout once you have entered all your details", "We only ship to the UK");
        }

        editPanel2Inner.innerHTML = panel;
        editPanel2Inner.style.width = "980px";
        getCountries(billing.split("**")[5], shipping.split("**")[5]);
        setEditPanel2Position();
    }
}

function updateCustomerAddress() {
    if (getAddresses()) {
        $.post("/Handlers/updateEcomCustomerAddress.ashx?d=" + new Date().getMilliseconds(), {
            billid: billingAddressID,
            shipid: shippingAddressID,
            bill: billing,
            ship: shipping,
            custid: ecomCustomerID,
            name: deliveryFirstName,
            lastname: deliveryLastName,
            phone: deliveryPhone,
            mobile: deliveryMobile
        }, function (data) {
            if (data == "success") {
                checkShipping();
            }
        });
    }
}

function showResetEcomCustomerPassword() {
    if (isMobileV2) {
        document.getElementById('mobiV2MainBasketPanel').style.width = "0px";
        currV2MobiPanel = "";
        panel = "<div class=\"innerTextElement\">" +
                    "<div class=\"ecomOptionItemMobi\">" +
                        "<div class=\"innerTextElement\" style=\"margin-bottom:10px;\">" +
                            "<div class=\"ecomBasketIconMobi\"></div>" +
                            "<div class=\"ecomOptionLabelMobi\" style=\"line-height:110px;\">Reset your password</div>" +
                            "<input type=\"button\" class=\"ecomOptionContinueButtonMobi\" onclick=\"resetBasketStartUps();\" value=\"\" />" +
                        "</div>" +
                        "<div class=\"innerTextElement\" style=\"margin:10px 0px 10px 0px;\">" +
                            "<div class=\"ecomOptionTitleMobi\" style=\"width:520px;margin-left:10px;text-align:right;\">Current Email Address:</div>" +
                            "<input id=\"resetEmailAddress\" class=\"ecomOptionInputMobi\" style=\"width:400px;margin-left:10px;\" value=\"email address\" type=\"text\" onfocus=\"setTextField(this, 'email address');\" onblur=\"setTextField(this, 'email address');\">" +
                        "</div>" +
                    "</div>" +
                    "<div class=\"innerTextElement\" style=\"margin:10px 0px 10px 0px;\">" +
                        "<input type=\"button\" class=\"ecomOptionCheckoutButtonMobi\" onclick=\"resetEcomCustomerPassword();\" style=\"margin-right:20px;\" value=\"\" />" +
                    "</div>" +
                "</div>";
        document.getElementById('mobiV2MainBasketInnerPanel').innerHTML = panel;
        showMobiV2Panel('mobiV2MainBasketPanel');
    }
    else {
        ShowModal3();
        editPanel3Inner.innerHTML = "";
        editPanel3Inner.style.width = "";
        editPanel3Inner.style.height = "";
        var panel = "<div id=\"ecomModalResetPanel\" style=\"height:200px;\">" +
                        "<div class=\"ecomOptionLabel\" style=\"top:20px;left:25px;\">Reset your password:</div>" +
                        "<input type=\"button\" class=\"ecomOptionContinueButton\" onclick=\"resetBasketStartUps();\" value=\"\" style=\"left:425px;\" />" +
                        "<div class=\"ecomOptionTitle\" style=\"top:75px;left:45px;\">Current Email Address</div>" +
                        "<input id=\"resetEmailAddress\" type=\"text\" class=\"ecomOptionTitle ecomOptionInput\" style=\"top:110px;left:45px;width:280px;\"  value=\"email address\" onfocus=\"setTextField(this, 'email address');\" onblur=\"setTextField(this, 'email address');\" />" +
                        "<input type=\"button\" class=\"ecomOptionSubmitButton\" onclick=\"resetEcomCustomerPassword();\" style=\"left:350px;top:100px;\" value=\"\" />" +
                    "</div>";

        editPanel3Inner.innerHTML = panel;
        setEditPanel3Position();
    }
}

function resetEcomCustomerPassword() {
    $.post("/Handlers/resetEcomCustomerPassword.ashx?d=" + new Date().getMilliseconds(), {
        shpid: shopID,
        compid: companyID,
        email: document.getElementById('resetEmailAddress').value
    }, function (data) {
        if (data == "failed") {
            showPopupMessage("Please enter a valid email address", "OK");
        }
        else {
            showPopupMessage("A new password has been sent to your email address", "OK");
            if (isMobileV2) {
                showLoginOptionsPanel(true);
            }
            else {
                HideModal3();
            }
        }
    });
}

function showCreateNewEcomCustomerPassword() {
    if (isMobileV2) {
        document.getElementById('mobiV2MainBasketPanel').style.width = "0px";
        currV2MobiPanel = "";
        panel = "<div class=\"innerTextElement\">" +
                    "<div class=\"ecomOptionItemMobi\">" +
                        "<div class=\"innerTextElement\" style=\"margin-bottom:10px;\">" +
                            "<div class=\"ecomBasketIconMobi\"></div>" +
                            "<div class=\"ecomOptionLabelMobi\" style=\"line-height:110px;\">Please enter your new details:</div>" +
                            "<input type=\"button\" class=\"ecomOptionContinueButtonMobi\" onclick=\"resetBasketStartUps();\" value=\"\" />" +
                        "</div>" +
                        "<div class=\"innerTextElement\" style=\"margin-top:10px;\">" +
                            "<div class=\"ecomOptionTitleMobi\" style=\"width:480px;margin-left:10px;text-align:right;\">Current Password:</div>" +
                            "<input id=\"oldEcomPassword\" class=\"ecomOptionInputMobi\" style=\"width:400px;margin-left:10px;\" value=\"password\" type=\"password\" onfocus=\"setTextField(this, 'password');\" onblur=\"setTextField(this, 'password');\">" +
                        "</div>" +
                    "</div>" +
                    "<div class=\"ecomOptionItemMobi\">" +
                        "<div class=\"innerTextElement\" style=\"margin-top:10px;\">" +
                            "<div class=\"ecomOptionTitleMobi\" style=\"width:480px;margin-left:10px;text-align:right;\">New Password:</div>" +
                            "<input id=\"newEcomPassword1\" class=\"ecomOptionInputMobi\" style=\"width:400px;margin-left:10px;\" value=\"password\" type=\"password\" onfocus=\"setTextField(this, 'password');\" onblur=\"setTextField(this, 'password');\">" +
                        "</div>" +
                        "<div class=\"innerTextElement\" style=\"margin-top:10px;\">" +
                            "<div class=\"ecomOptionTitleMobi\" style=\"width:480px;margin-left:10px;text-align:right;\">Confirm Password:</div>" +
                            "<input id=\"newEcomPassword2\" class=\"ecomOptionInputMobi\" style=\"width:400px;margin-left:10px;\" value=\"password\" type=\"password\" onfocus=\"setTextField(this, 'password');\" onblur=\"setTextField(this, 'password');\">" +
                        "</div>" +
                    "</div>" +
                    "<div class=\"innerTextElement\" style=\"margin:10px 0px 10px 0px;\">" +
                        "<input type=\"button\" class=\"ecomOptionCheckoutButtonMobi\" onclick=\"createNewEcomCustomerPassword();\" style=\"margin-right:20px;\" value=\"\" />" +
                    "</div>" +
                "</div>";
        document.getElementById('mobiV2MainBasketInnerPanel').innerHTML = panel;
        showMobiV2Panel('mobiV2MainBasketPanel');
    }
    else {
        ShowModal3();
        editPanel3Inner.innerHTML = "";
        editPanel3Inner.style.width = "";
        editPanel3Inner.style.height = "";
        var panel = "<div id=\"ecomModalPasswordPanel\" style=\"height:220px;\">" +
                        "<div class=\"ecomOptionLabel\" style=\"top:20px;left:25px;\">Please enter your new details:</div>" +
                        "<input type=\"button\" class=\"ecomOptionContinueButton\" onclick=\"resetBasketStartUps();\" value=\"\" style=\"left:695px;\" />" +
                        "<div class=\"ecomOptionTitle\" style=\"top:75px;left:45px;\">Current Password</div>" +
                        "<input id=\"oldEcomPassword\" type=\"password\" class=\"ecomOptionTitle ecomOptionInput\" style=\"top:120px;left:45px;width:210px;\"  value=\"password\" onfocus=\"setTextField(this, 'password');\" onblur=\"setTextField(this, 'password');\" />" +
                        "<div class=\"ecomOptionTitle\" style=\"top:75px;left:320px;\">Enter your new Password</div>" +
                        "<div class=\"ecomOptionLabel\" style=\"top:120px;left:320px;font-size:14px;\">Password:</div>" +
                        "<div class=\"ecomOptionLabel\" style=\"top:155px;left:320px;font-size:14px;\">Confirm:</div>" +
                        "<input id=\"newEcomPassword1\" type=\"password\" class=\"ecomOptionTitle ecomOptionInput\" style=\"top:120px;left:390px;width:210px;\"  value=\"password\" onfocus=\"setTextField(this, 'password');\" onblur=\"setTextField(this, 'password');\" />" +
                        "<input id=\"newEcomPassword2\" type=\"password\" class=\"ecomOptionTitle ecomOptionInput\" style=\"top:155px;left:390px;width:210px;\"  value=\"password\" onfocus=\"setTextField(this, 'password');\" onblur=\"setTextField(this, 'password');\" />" +
                        "<input type=\"button\" class=\"ecomOptionSubmitButton\" onclick=\"createNewEcomCustomerPassword();\" value=\"\" />" +
                    "</div>";

        editPanel3Inner.innerHTML = panel;
        setEditPanel3Position();
    }
}

function createNewEcomCustomerPassword() {
    var newPWord1 = document.getElementById('newEcomPassword1').value;
    var newPWord2 = document.getElementById('newEcomPassword2').value;
    var oldPWord = document.getElementById('oldEcomPassword').value;
    var errors = "";
    if (oldPWord == "") {
        errors += "Please enter your existing password<br>";
    }
    if (newPWord1 == "") {
        errors += "Please enter your new password in the password field<br>";
    }
    if (newPWord2 == "") {
        errors += "Please enter your new password in the confirm field<br>";
    }
    if (newPWord1 != newPWord2) {
        errors += "Your new password and confirmation password do not match<br>";
    }
    if (newPWord1 == oldPWord) {
        errors += "Your new password is the same as you existing password<br>";
    }
    if (errors != "") {
        showPopupMessage(errors, "OK");
    }
    else {
        $.post("/Handlers/createNewEcomCustomerPassword.ashx?d=" + new Date().getMilliseconds(), {
            shpid: shopID,
            compid: companyID,
            custid: ecomCustomerID,
            oldpword: oldPWord,
            newpword: newPWord1
        }, function (data) {
            if (data == "wrong") {
                showPopupMessage("Your existing Password is incorrect", "OK");
            }
            else {
                showPopupMessage("Your new password has been set", "OK");
                if (isMobileV2) {
                    lastPassword = newPWord1;
                    ecomLogin("true");
                }
                else {
                    HideModal3();
                }
            }
        });
    }
}

//#endregion

//#region Register Functions

function showRegisterPanel(ccSet) {
    if (isMobileV2) {
        mobiRoute = "register";
        document.getElementById('mobiV2MainBasketPanel').style.width = "0px";
        currV2MobiPanel = "";
        panel = "<div class=\"innerTextElement\">" +
                    "<div class=\"ecomOptionItemMobi\">" +
                        "<div class=\"innerTextElement\" style=\"margin-bottom:10px;\">" +
                            "<div class=\"ecomBasketIconMobi\"></div>" +
                            "<div class=\"ecomOptionLabelMobi\" style=\"line-height:110px;\">Enter your details below</div>" +
                            "<input type=\"button\" class=\"ecomOptionContinueButtonMobi\" onclick=\"resetBasketStartUps();\" value=\"\" />" +
                        "</div>" +
                        "<div class=\"innerTextElement\" style=\"margin:10px 0px 10px 0px;\">" +
                            "<div class=\"ecomOptionTotalMobi\" style=\"margin-left:10px;\">Your Details:</div>" +
                        "</div>" +
                        "<div class=\"innerTextElement\" style=\"margin-top:10px;\">" +
                            "<div class=\"ecomOptionTitleMobi\" style=\"width:380px;margin-left:10px;\">First Name:</div>" +
                            "<input id=\"deliverToFirstName\" class=\"ecomOptionInputMobi\" style=\"width:540px;\" value=\"\" type=\"text\">" +
                        "</div>" +
                        "<div class=\"innerTextElement\" style=\"margin-top:10px;\">" +
                            "<div class=\"ecomOptionTitleMobi\" style=\"width:380px;margin-left:10px;\">Last Name:</div>" +
                            "<input id=\"deliverToLastName\" class=\"ecomOptionInputMobi\" style=\"width:540px;\" value=\"\" type=\"text\">" +
                        "</div>" +
                        "<div class=\"innerTextElement\" style=\"margin-top:10px;\">" +
                            "<div class=\"ecomOptionTitleMobi\" style=\"width:380px;margin-left:10px;\">Telephone:</div>" +
                            "<input id=\"deliverToPhone\" class=\"ecomOptionInputMobi\" style=\"width:540px;\" value=\"\" type=\"text\">" +
                        "</div>" +
                        "<div class=\"innerTextElement\" style=\"margin:10px 0px 10px 0px;\">" +
                            "<div class=\"ecomOptionTitleMobi\" style=\"width:380px;margin-left:10px;\">Mobile:</div>" +
                            "<input id=\"deliverToMobile\" class=\"ecomOptionInputMobi\" style=\"width:540px;\" value=\"\" type=\"text\">" +
                        "</div>" +
                        "<div class=\"innerTextElement\" style=\"margin:10px 0px 10px 0px;\">" +
                            "<div class=\"ecomOptionTitleMobi\" style=\"width:380px;margin-left:10px;\">Email Address:</div>" +
                            "<input id=\"registerEmail\" class=\"ecomOptionInputMobi\" style=\"width:540px;\" value=\"\" type=\"text\">" +
                        "</div>" +
                        "<div class=\"innerTextElement\">" +
                            "<div class=\"ecomOptionTotalMobi\" style=\"margin-left:10px;\">Your email address will be your username:</div>" +
                        "</div>" +
                        "<div class=\"innerTextElement\" style=\"margin-top:10px;\">" +
                            "<div class=\"ecomOptionTitleMobi\" style=\"width:380px;margin-left:10px;\">Password:</div>" +
                            "<input id=\"registerPWord1\" class=\"ecomOptionInputMobi\" style=\"width:540px;\" value=\"\" type=\"password\">" +
                        "</div>" +
                        "<div class=\"innerTextElement\" style=\"margin:10px 0px 20px 0px;\">" +
                            "<div class=\"ecomOptionTitleMobi\" style=\"width:380px;margin-left:10px;\">Conf Password:</div>" +
                            "<input id=\"registerPWord2\" class=\"ecomOptionInputMobi\" style=\"width:540px;\" value=\"\" type=\"password\">" +
                        "</div>" +
                    "</div>" +
                    "<div class=\"ecomOptionItemMobi\">" +
                        "<div class=\"innerTextElement\" style=\"margin:10px 0px 10px 0px;\">" +
                            "<div class=\"ecomOptionTotalMobi\" style=\"margin-left:10px;\">Billling Address:</div>" +
                        "</div>" +
                        "<div class=\"innerTextElement\" style=\"margin-top:10px;\">" +
                            "<div class=\"ecomOptionTitleMobi\" style=\"width:380px;margin-left:10px;\">Address 1:</div>" +
                            "<input id=\"billAdd1\" type=\"text\" class=\"ecomOptionInputMobi\" style=\"width:540px;\" value=\"\" />" +
                        "</div>" +
                        "<div class=\"innerTextElement\" style=\"margin-top:10px;\">" +
                            "<div class=\"ecomOptionTitleMobi\" style=\"width:380px;margin-left:10px;\">Address 2:</div>" +
                            "<input id=\"billAdd2\" type=\"text\" class=\"ecomOptionInputMobi\" style=\"width:540px;\" value=\"\" />" +
                        "</div>" +
                        "<div class=\"innerTextElement\" style=\"margin-top:10px;\">" +
                            "<div class=\"ecomOptionTitleMobi\" style=\"width:380px;margin-left:10px;\">Town/City:</div>" +
                            "<input id=\"billTown\" type=\"text\" class=\"ecomOptionInputMobi\" style=\"width:540px;\" value=\"\" />" +
                        "</div>" +
                        "<div class=\"innerTextElement\" style=\"margin-top:10px;\">" +
                            "<div class=\"ecomOptionTitleMobi\" style=\"width:380px;margin-left:10px;\">County/Region:</div>" +
                            "<input id=\"billCounty\" type=\"text\" class=\"ecomOptionInputMobi\" style=\"width:540px;\" value=\"\" />" +
                        "</div>" +
                        "<div class=\"innerTextElement\" style=\"margin-top:10px;\">" +
                            "<div class=\"ecomOptionTitleMobi\" style=\"width:380px;margin-left:10px;\">Post/Zip Code:</div>" +
                            "<input id=\"billPCode\" type=\"text\" class=\"ecomOptionInputMobi\" style=\"width:300px;\" value=\"\" />";
        if (hasCraftyClicks) {
            panel += "<input type=\"button\" class=\"ecomOptionInputMobi ecomOptionInputMobiButton\" onclick=\"showCraftyClicksAddressPicker('bill');\" value=\"Lookup\" />";
        }
        panel += "</div>" +
                        "<div class=\"innerTextElement\" style=\"margin:10px 0px 20px 0px;\">" +
                            "<div class=\"ecomOptionTitleMobi\" style=\"width:380px;margin-left:10px;\">Country:</div>" +
                            "<div id=\"billCountry\" class=\"innerTextElement\" style=\"width:540px;\"></div>" +
                        "</div>" +
                    "</div>" +
                    "<div class=\"ecomOptionItemMobi\" style=\"margin:10px 0px 10px 0px;\">" +
                        "<div class=\"innerTextElement\" style=\"margin:10px 0px 10px 0px;\">" +
                            "<div class=\"ecomOptionTotalMobi\" style=\"margin-left:10px;\">Shipping Address:</div>" +
                            "<div class=\"ecomOptionLabelMobi\" style=\"margin-left:10px;;\">Same as Billing?</div>" +
                            "<input id=\"addressShipAsBill\" type=\"button\" class=\"ecomOptionCheckoutToggleOffMobi\" onclick=\"toggleShippingAsBilling(this);\" style=\"float:left;margin-left:10px;\" value=\"\" />" +
                        "</div>" +
                        "<div id=\"shippingHiderPanel\" style=\"overflow:hidden;\" class=\"innerTextElement\">" +
                            "<div class=\"innerTextElement\" style=\"margin-top:10px;\">" +
                                "<div class=\"ecomOptionTitleMobi\" style=\"width:380px;margin-left:10px;\">Address 1:</div>" +
                                "<input id=\"shipAdd1\" type=\"text\" class=\"ecomOptionInputMobi\" style=\"width:540px;\" value=\"\" />" +
                            "</div>" +
                            "<div class=\"innerTextElement\" style=\"margin-top:10px;\">" +
                                "<div class=\"ecomOptionTitleMobi\" style=\"width:380px;margin-left:10px;\">Address 2:</div>" +
                                "<input id=\"shipAdd2\" type=\"text\" class=\"ecomOptionInputMobi\" style=\"width:540px;\" value=\"\" />" +
                            "</div>" +
                            "<div class=\"innerTextElement\" style=\"margin-top:10px;\">" +
                                "<div class=\"ecomOptionTitleMobi\" style=\"width:380px;margin-left:10px;\">Town/City:</div>" +
                                "<input id=\"shipTown\" type=\"text\" class=\"ecomOptionInputMobi\" style=\"width:540px;\" value=\"\" />" +
                            "</div>" +
                            "<div class=\"innerTextElement\" style=\"margin-top:10px;\">" +
                                "<div class=\"ecomOptionTitleMobi\" style=\"width:380px;margin-left:10px;\">County/Region:</div>" +
                                "<input id=\"shipCounty\" type=\"text\" class=\"ecomOptionInputMobi\" style=\"width:540px;\" value=\"\" />" +
                            "</div>" +
                            "<div class=\"innerTextElement\" style=\"margin-top:10px;\">" +
                                "<div class=\"ecomOptionTitleMobi\" style=\"width:380px;margin-left:10px;\">Post/Zip Code:</div>" +
                                "<input id=\"shipPCode\" type=\"text\" class=\"ecomOptionInputMobi\" style=\"width:300px;\" value=\"\" />";
        if (hasCraftyClicks) {
            panel += "<input type=\"button\" class=\"ecomOptionInputMobi ecomOptionInputMobiButton\" onclick=\"showCraftyClicksAddressPicker('ship');\" value=\"Lookup\" />";
        }

        panel += "</div>" +
                            "<div class=\"innerTextElement\" style=\"margin:10px 0px 20px 0px;\">" +
                                "<div class=\"ecomOptionTitleMobi\" style=\"width:380px;margin-left:10px;\">Country:</div>" +
                                "<div id=\"shipCountry\" class=\"innerTextElement\" style=\"width:540px;\"></div>" +
                            "</div>" +
                        "</div>" +
                    "</div>" +

                    "<div class=\"innerTextElement\" style=\"margin:10px 0px 10px 0px;\">" +
                        "<input type=\"button\" class=\"ecomOptionCheckoutButtonMobi\" onclick=\"registerAndCheckout();\" style=\"margin-right:20px;\" value=\"\" />" +
                    "</div>" +
                "</div>";
        document.getElementById('mobiV2MainBasketInnerPanel').innerHTML = panel;
        getCountries(billing.split("**")[5], shipping.split("**")[5]);
        showMobiV2Panel('mobiV2MainBasketPanel');
    }
    else {
        $(editPanel2Wrapper).animate({ height: "0px" }, 250,
        function () {        
            editPanel2Inner.innerHTML = "";
            editPanel2Inner.style.width = "";
            editPanel2Inner.style.height = "";
            var panel = "<div id=\"ecomModalRegisterPanel\">" +
                            "<div id=\"ecomModalHeaderPanel\"></div>" +
                            "<div class=\"ecomOptionLabel\" style=\"top:10px;left:25px;\">Please enter your details below:</div>" +
                            "<input type=\"button\" class=\"ecomOptionContinueButton\" style=\"left:825px;top:10px;\" onclick=\"resetBasketStartUps();\" value=\"\" />" +
                            "<div class=\"ecomOptionTitle\" style=\"top:50px;left:35px;\">Registration Details</div>" +
                            "<div class=\"ecomOptionLabel\" style=\"top:90px;left:35px;font-size:14px;\">First name:</div>" +
                            "<input id=\"deliverToFirstName\" type=\"text\" class=\"ecomOptionTitle ecomOptionInput\" style=\"top:90px;left:145px;width:300px;\" value=\"\" />" +
                            "<div class=\"ecomOptionLabel\" style=\"top:90px;left:500px;font-size:14px;\">Last name:</div>" +
                            "<input id=\"deliverToLastName\" type=\"text\" class=\"ecomOptionTitle ecomOptionInput\" style=\"top:90px;left:635px;width:300px;\" value=\"\" />" +
                            "<div class=\"ecomOptionLabel\" style=\"top:130px;left:35px;font-size:14px;\">Email:</div>" +
                            "<input id=\"registerEmail\" type=\"text\" class=\"ecomOptionTitle ecomOptionInput\" style=\"top:130px;left:145px;width:300px;\" value=\"\" />" +
                            "<div class=\"ecomOptionLabel\" style=\"top:130px;left:500px;font-size:14px;\">Telephone:</div>" +
                            "<input id=\"deliverToPhone\" type=\"text\" class=\"ecomOptionTitle ecomOptionInput\" style=\"top:130px;left:635px;width:300px;\" value=\"\" />" +
                            "<div class=\"ecomOptionLabel\" style=\"top:180px;left:35px;font-size:14px;line-height:14px;\">Note: Your email address will be used as your username</div>" +
                            "<div class=\"ecomOptionLabel\" style=\"top:170px;left:500px;font-size:14px;\">Mobile:</div>" +
                            "<input id=\"deliverToMobile\" type=\"text\" class=\"ecomOptionTitle ecomOptionInput\" style=\"top:170px;left:635px;width:300px;\" value=\"\" />" +
                            "<div class=\"ecomOptionLabel\" style=\"top:215px;left:35px;font-size:14px;\">Password:</div>" +
                            "<input id=\"registerPWord1\" type=\"password\" class=\"ecomOptionTitle ecomOptionInput\" style=\"top:215px;left:145px;width:300px;\" value=\"\" />" +
                            "<div class=\"ecomOptionLabel\" style=\"top:215px;left:500px;font-size:14px;\">Confirm Password:</div>" +
                            "<input id=\"registerPWord2\" type=\"password\" class=\"ecomOptionTitle ecomOptionInput\" style=\"top:215px;left:635px;width:300px;\" value=\"\" />" +
                            "<div class=\"ecomOptionTitle\" style=\"top:260px;left:35px;\">Billing Address</div>" +
                            "<div class=\"ecomOptionTitle\" style=\"top:260px;left:500px;\">Shipping Address</div>" +
                            "<div id=\"addressShipAsBill\" class=\"ecomOptionTickPanelOff\" style=\"top:267px;left:810px;\" onclick=\"toggleShippingAsBilling(this);\"></div>" +
                            "<div class=\"ecomOptionLabel\" style=\"top:260px;left:835px;font-size:14px;\">Same as Billing</div>" +
                            "<div id=\"billingAddressPanel\" class=\"ecomRegisterAddressPanel\" style=\"top:300px;left:35px;\">" +
                                "<div class=\"ecomOptionLabel\" style=\"top:0px;left:0px;font-size:14px;\">Address 1:</div>" +
                                "<input id=\"billAdd1\" type=\"text\" class=\"ecomOptionTitle ecomOptionInput\" style=\"top:0px;left:110px;width:300px;\" value=\"\" onkeyup=\"updateAddressField(this);\" />" +
                                "<div class=\"ecomOptionLabel\" style=\"top:35px;left:0px;font-size:14px;\">Address 2:</div>" +
                                "<input id=\"billAdd2\" type=\"text\" class=\"ecomOptionTitle ecomOptionInput\" style=\"top:35px;left:110px;width:300px;\" value=\"\" onkeyup=\"updateAddressField(this);\" />" +
                                "<div class=\"ecomOptionLabel\" style=\"top:70px;left:0px;font-size:14px;\">Town/City:</div>" +
                                "<input id=\"billTown\" type=\"text\" class=\"ecomOptionTitle ecomOptionInput\" style=\"top:70px;left:110px;width:300px;\" value=\"\" onkeyup=\"updateAddressField(this);\" />" +
                                "<div class=\"ecomOptionLabel\" style=\"top:105px;left:0px;font-size:14px;\">County/Region:</div>" +
                                "<input id=\"billCounty\" type=\"text\" class=\"ecomOptionTitle ecomOptionInput\" style=\"top:105px;left:110px;width:300px;\" value=\"\" onkeyup=\"updateAddressField(this);\" />" +
                                "<div class=\"ecomOptionLabel\" style=\"top:140px;left:0px;font-size:14px;\">Post/Zip Code:</div>" +
                                "<input id=\"billPCode\" type=\"text\" class=\"ecomOptionTitle ecomOptionInput\" style=\"top:140px;left:110px;width:198px;\" value=\"\" onkeyup=\"updateAddressField(this);\" />" +
                                "<div class=\"ecomOptionLabel\" style=\"top:175px;left:0px;font-size:14px;\">Country:</div>" +
                                "<div id=\"billCountry\" class=\"ecomOptionDropDown\" style=\"top:175px;left:110px;\"></div>";
            if (hasCraftyClicks) {
                panel += "<a class=\"ecomOptionRegisterText\" onclick=\"showCraftyClicksAddressPicker('bill');\" style=\"position:absolute;top:160px;left:340px;\">Lookup<br/>Address</a>";
            }
            panel += "</div>" +
                            "<div id=\"shippingAddressPanel\" class=\"ecomRegisterAddressPanel\" style=\"top:300px;left:500px;\">" +
                                "<div class=\"ecomOptionLabel\" style=\"top:0px;left:0px;font-size:14px;\">Address 1:</div>" +
                                "<input id=\"shipAdd1\" type=\"text\" class=\"ecomOptionTitle ecomOptionInput\" style=\"top:0px;left:130px;width:300px;\" value=\"\" />" +
                                "<div class=\"ecomOptionLabel\" style=\"top:35px;left:0px;font-size:14px;\">Address 2:</div>" +
                                "<input id=\"shipAdd2\" type=\"text\" class=\"ecomOptionTitle ecomOptionInput\" style=\"top:35px;left:130px;width:300px;\" value=\"\" />" +
                                "<div class=\"ecomOptionLabel\" style=\"top:70px;left:0px;font-size:14px;\">Town/City:</div>" +
                                "<input id=\"shipTown\" type=\"text\" class=\"ecomOptionTitle ecomOptionInput\" style=\"top:70px;left:130px;width:300px;\" value=\"\" />" +
                                "<div class=\"ecomOptionLabel\" style=\"top:105px;left:0px;font-size:14px;\">County/Region:</div>" +
                                "<input id=\"shipCounty\" type=\"text\" class=\"ecomOptionTitle ecomOptionInput\" style=\"top:105px;left:130px;width:300px;\" value=\"\" />" +
                                "<div class=\"ecomOptionLabel\" style=\"top:140px;left:0px;font-size:14px;\">Post/Zip Code:</div>" +
                                "<input id=\"shipPCode\" type=\"text\" class=\"ecomOptionTitle ecomOptionInput\" style=\"top:140px;left:130px;width:198px;\" value=\"\" />" +
                                "<div class=\"ecomOptionLabel\" style=\"top:175px;left:0px;font-size:14px;\">Country:</div>" +
                                "<div id=\"shipCountry\" class=\"ecomOptionDropDown\" style=\"top:175px;left:130px;\"></div>";
            if (hasCraftyClicks) {
                panel += "<a class=\"ecomOptionRegisterText\" onclick=\"showCraftyClicksAddressPicker('ship');\" style=\"position:absolute;top:160px;left:340px;\">Lookup<br/>Address</a>";
            }
            panel += "</div>" +
                            "<div class=\"ecomOptionLabel\" style=\"top:545px;left:45px;font-size:14px;line-height:14px;\">Click Register below once you have entered all your details.</div>" +
                            "<input type=\"button\" class=\"ecomOptionRegisterButton\" style=\"top:530px;left:750px;\" onclick=\"registerAndCheckout();\" value=\"\" />" +
                            "<div class=\"paypalPaymentOptions\" style=\"margin:510px 0px 0px 30px;\"></div>" +
                        "</div>";

            if (shopID == 143) {
                panel = panel.replace("Click Checkout once you have entered all your details", "We only ship to the UK");
            }


            editPanel2Inner.innerHTML = panel;
            editPanel2Inner.style.width = "980px";
            getCountries();
            setEditPanel2Position();
        });
    }
    if (hasCraftyClicks && !ccSet) {
        showCraftyClicksAddressPicker("bill");
    }
}

function registerAndCheckout() {
    if (getAddresses()) {
        var email = document.getElementById('registerEmail').value;
        email =  email.trim();
        if (validateEmail(email)) {
            ecomEmail = email;
            finishRegisterAndCheckout("yes");
        }
    }
}

function finishRegisterAndCheckout(retval) {
    if (retval == "yes") {
        var pass1 = document.getElementById('registerPWord1').value;
        var pass2 = document.getElementById('registerPWord2').value;
        if (pass1 == pass2) {
            $.post("/Handlers/ecomRegister.ashx?d=" + new Date().getMilliseconds(), {
                shpid: shopID,
                name: deliveryFirstName.trim(),
                lastname: deliveryLastName.trim(),
                phone: deliveryPhone.trim(),
                mobile: deliveryMobile.trim(),
                email: ecomEmail.trim(),
                pword: pass2,
                bill: billing,
                ship: shipping
            }, function (data) {
                if (data != "exists") {
                    ecomCustomerID = data;
                    checkShipping();
                }
                else {
                    showPopupMessage("The email address you entered is already registered", "OK");
                }
            });
        }
        else {
            showPopupMessage("Your password and confirmation do not match", "OK");
        }
    }
    hidePopupMessage();
}

//#endregion

//#region Guest Checkout Functions

function showGuestCheckoutPanel(ccSet) {
    if (isMobileV2) {
        mobiRoute = "guest";
        document.getElementById('mobiV2MainBasketPanel').style.width = "0px";
        currV2MobiPanel = "";
        panel = "<div class=\"innerTextElement\">" +
                    "<div class=\"ecomOptionItemMobi\">" +
                        "<div class=\"innerTextElement\" style=\"margin-bottom:10px;\">" +
                            "<div class=\"ecomBasketIconMobi\"></div>" +
                            "<div class=\"ecomOptionLabelMobi\" style=\"line-height:110px;\">Enter your details below</div>" +
                            "<input type=\"button\" class=\"ecomOptionContinueButtonMobi\" onclick=\"resetBasketStartUps();\" value=\"\" />" +
                        "</div>" +
                        "<div class=\"innerTextElement\" style=\"margin:10px 0px 10px 0px;\">" +
                            "<div class=\"ecomOptionTotalMobi\" style=\"margin-left:10px;\">Your Details:</div>" +
                        "</div>" +
                        "<div class=\"innerTextElement\" style=\"margin-top:10px;\">" +
                            "<div class=\"ecomOptionTitleMobi\" style=\"width:380px;margin-left:10px;\">First Name:</div>" +
                            "<input id=\"deliverToFirstName\" class=\"ecomOptionInputMobi\" style=\"width:540px;\" value=\"\" type=\"text\">" +
                        "</div>" +
                        "<div class=\"innerTextElement\" style=\"margin-top:10px;\">" +
                            "<div class=\"ecomOptionTitleMobi\" style=\"width:380px;margin-left:10px;\">Last Name:</div>" +
                            "<input id=\"deliverToLastName\" class=\"ecomOptionInputMobi\" style=\"width:540px;\" value=\"\" type=\"text\">" +
                        "</div>" +
                        "<div class=\"innerTextElement\" style=\"margin-top:10px;\">" +
                            "<div class=\"ecomOptionTitleMobi\" style=\"width:380px;margin-left:10px;\">Email Address:</div>" +
                            "<input id=\"registerEmail\" class=\"ecomOptionInputMobi\" style=\"width:540px;\" value=\"\" type=\"text\">" +
                        "</div>" +
                        "<div class=\"innerTextElement\" style=\"margin:10px 0px 10px 0px;\">" +
                            "<div class=\"ecomOptionTitleMobi\" style=\"width:380px;margin-left:10px;\">Telephone:</div>" +
                            "<input id=\"deliverToPhone\" class=\"ecomOptionInputMobi\" style=\"width:540px;\" value=\"\" type=\"text\">" +
                        "</div>" +
                        "<div class=\"innerTextElement\" style=\"margin:10px 0px 10px 0px;\">" +
                            "<div class=\"ecomOptionTitleMobi\" style=\"width:380px;margin-left:10px;\">Mobile:</div>" +
                            "<input id=\"deliverToMobile\" class=\"ecomOptionInputMobi\" style=\"width:540px;\" value=\"\" type=\"text\">" +
                        "</div>" +
                    "</div>" +
                    "<div class=\"ecomOptionItemMobi\">" +
                        "<div class=\"innerTextElement\" style=\"margin:10px 0px 10px 0px;\">" +
                            "<div class=\"ecomOptionTotalMobi\" style=\"margin-left:10px;\">Billing Address:</div>" +
                        "</div>" +
                        "<div class=\"innerTextElement\" style=\"margin-top:10px;\">" +
                            "<div class=\"ecomOptionTitleMobi\" style=\"width:380px;margin-left:10px;\">Address 1:</div>" +
                            "<input id=\"billAdd1\" type=\"text\" class=\"ecomOptionInputMobi\" style=\"width:540px;\" value=\"\" onkeyup=\"updateAddressField(this);\" />" +
                        "</div>" +
                        "<div class=\"innerTextElement\" style=\"margin-top:10px;\">" +
                            "<div class=\"ecomOptionTitleMobi\" style=\"width:380px;margin-left:10px;\">Address 2:</div>" +
                            "<input id=\"billAdd2\" type=\"text\" class=\"ecomOptionInputMobi\" style=\"width:540px;\" value=\"\" onkeyup=\"updateAddressField(this);\" />" +
                        "</div>" +
                        "<div class=\"innerTextElement\" style=\"margin-top:10px;\">" +
                            "<div class=\"ecomOptionTitleMobi\" style=\"width:380px;margin-left:10px;\">Town/City:</div>" +
                            "<input id=\"billTown\" type=\"text\" class=\"ecomOptionInputMobi\" style=\"width:540px;\" value=\"\" onkeyup=\"updateAddressField(this);\" />" +
                        "</div>" +
                        "<div class=\"innerTextElement\" style=\"margin-top:10px;\">" +
                            "<div class=\"ecomOptionTitleMobi\" style=\"width:380px;margin-left:10px;\">County/Region:</div>" +
                            "<input id=\"billCounty\" type=\"text\" class=\"ecomOptionInputMobi\" style=\"width:540px;\" value=\"\" onkeyup=\"updateAddressField(this);\" />" +
                        "</div>" +
                        "<div class=\"innerTextElement\" style=\"margin-top:10px;\">" +
                            "<div class=\"ecomOptionTitleMobi\" style=\"width:380px;margin-left:10px;\">Post/Zip Code:</div>" +
                            "<input id=\"billPCode\" type=\"text\" class=\"ecomOptionInputMobi\" style=\"width:300px;\" value=\"\" onkeyup=\"updateAddressField(this);\" />";
        if (hasCraftyClicks) {
            panel += "<input type=\"button\" class=\"ecomOptionInputMobi ecomOptionInputMobiButton\" onclick=\"showCraftyClicksAddressPicker('bill');\" value=\"Lookup\" />";
        }
        panel += "</div>" +
                        "<div class=\"innerTextElement\" style=\"margin:10px 0px 20px 0px;\">" +
                            "<div class=\"ecomOptionTitleMobi\" style=\"width:380px;margin-left:10px;\">Country:</div>" +
                            "<div id=\"billCountry\" class=\"innerTextElement\" style=\"width:540px;\"></div>" +
                        "</div>" +
                    "</div>" +
                    "<div class=\"ecomOptionItemMobi\">" +
                        "<div class=\"innerTextElement\" style=\"margin:10px 0px 10px 0px;\">" +
                            "<div class=\"ecomOptionTotalMobi\" style=\"margin-left:10px;\">Shipping Address:</div>" +
                            "<div class=\"ecomOptionLabelMobi\" style=\"margin-left:10px;;\">Same as Billing?</div>" +
                            "<input id=\"addressShipAsBill\" type=\"button\" class=\"ecomOptionCheckoutToggleOffMobi\" onclick=\"toggleShippingAsBilling(this);\" style=\"float:left;margin-left:10px;\" value=\"\" />" +
                        "</div>" +
                        "<div id=\"shippingHiderPanel\" style=\"overflow:hidden;\" class=\"innerTextElement\">" +
                            "<div class=\"innerTextElement\" style=\"margin-top:10px;\">" +
                                "<div class=\"ecomOptionTitleMobi\" style=\"width:380px;margin-left:10px;\">Address 1:</div>" +
                                "<input id=\"shipAdd1\" type=\"text\" class=\"ecomOptionInputMobi\" style=\"width:540px;\" value=\"\" />" +
                            "</div>" +
                            "<div class=\"innerTextElement\" style=\"margin-top:10px;\">" +
                                "<div class=\"ecomOptionTitleMobi\" style=\"width:380px;margin-left:10px;\">Address 2:</div>" +
                                "<input id=\"shipAdd2\" type=\"text\" class=\"ecomOptionInputMobi\" style=\"width:540px;\" value=\"\" />" +
                            "</div>" +
                            "<div class=\"innerTextElement\" style=\"margin-top:10px;\">" +
                                "<div class=\"ecomOptionTitleMobi\" style=\"width:380px;margin-left:10px;\">Town/City:</div>" +
                                "<input id=\"shipTown\" type=\"text\" class=\"ecomOptionInputMobi\" style=\"width:540px;\" value=\"\" />" +
                            "</div>" +
                            "<div class=\"innerTextElement\" style=\"margin-top:10px;\">" +
                                "<div class=\"ecomOptionTitleMobi\" style=\"width:380px;margin-left:10px;\">County/Region:</div>" +
                                "<input id=\"shipCounty\" type=\"text\" class=\"ecomOptionInputMobi\" style=\"width:540px;\" value=\"\" />" +
                            "</div>" +
                            "<div class=\"innerTextElement\" style=\"margin-top:10px;\">" +
                                "<div class=\"ecomOptionTitleMobi\" style=\"width:380px;margin-left:10px;\">Post/Zip Code:</div>" +
                                "<input id=\"shipPCode\" type=\"text\" class=\"ecomOptionInputMobi\" style=\"width:300px;\" value=\"\" />";
        if (hasCraftyClicks) {
            panel += "<input type=\"button\" class=\"ecomOptionInputMobi ecomOptionInputMobiButton\" onclick=\"showCraftyClicksAddressPicker('ship');\" value=\"Lookup\" />";
        }

        panel += "</div>" +
                            "<div class=\"innerTextElement\" style=\"margin:10px 0px 20px 0px;\">" +
                                "<div class=\"ecomOptionTitleMobi\" style=\"width:380px;margin-left:10px;\">Country:</div>" +
                                "<div id=\"shipCountry\" class=\"innerTextElement\" style=\"width:540px;\"></div>" +
                            "</div>" +
                        "</div>" +
                    "</div>" +
                    "<div class=\"innerTextElement\" style=\"margin:10px 0px 10px 0px;\">" +
                        "<input type=\"button\" class=\"ecomOptionCheckoutButtonMobi\" onclick=\"guestCheckout();\" style=\"margin-right:20px;\" value=\"\" />" +
                    "</div>" +
                "</div>";
        document.getElementById('mobiV2MainBasketInnerPanel').innerHTML = panel;
        getCountries(billing.split("**")[5], shipping.split("**")[5]);
        showMobiV2Panel('mobiV2MainBasketPanel');
    }
    else {
        $(editPanel2Wrapper).animate({ height: "0px" }, 250,
        function () {
            editPanel2Inner.innerHTML = "";
            editPanel2Inner.style.width = "";
            editPanel2Inner.style.height = "";
            var panel = "<div id=\"ecomModalGuestCheckoutPanel\" style=\"height:580px;\">" +
                            "<div id=\"ecomModalHeaderPanel\"></div>" +
                            "<div class=\"ecomOptionLabel\" style=\"top:10px;left:25px;\">Please enter your details below:</div>" +
                            "<input type=\"button\" class=\"ecomOptionContinueButton\" style=\"left:825px;top:10px;\" onclick=\"resetBasketStartUps();\" value=\"\" />" +
                            "<div class=\"ecomOptionTitle\" style=\"top:50px;left:35px;\">Guest Details</div>" +
                            "<div class=\"ecomOptionLabel\" style=\"top:90px;left:35px;font-size:14px;\">First name:</div>" +
                            "<input id=\"deliverToFirstName\" type=\"text\" class=\"ecomOptionTitle ecomOptionInput\" style=\"top:90px;left:145px;width:300px;\" value=\"\" />" +
                            "<div class=\"ecomOptionLabel\" style=\"top:90px;left:520px;font-size:14px;\">Last name:</div>" +
                            "<input id=\"deliverToLastName\" type=\"text\" class=\"ecomOptionTitle ecomOptionInput\" style=\"top:90px;left:635px;width:300px;\" value=\"\" />" +
                            "<div class=\"ecomOptionLabel\" style=\"top:130px;left:35px;font-size:14px;\">Email:</div>" +
                            "<input id=\"registerEmail\" type=\"text\" class=\"ecomOptionTitle ecomOptionInput\" style=\"top:130px;left:145px;width:300px;\" value=\"\" />" +
                            "<div class=\"ecomOptionLabel\" style=\"top:130px;left:520px;font-size:14px;\">Telephone:</div>" +
                            "<input id=\"deliverToPhone\" type=\"text\" class=\"ecomOptionTitle ecomOptionInput\" style=\"top:130px;left:635px;width:300px;\" value=\"\" />" +

                            "<div class=\"ecomOptionLabel\" style=\"top:180px;left:35px;font-size:14px;line-height:14px;\">Give your mobile so we can text you with tracking/delivery details</div>" +
                            "<div class=\"ecomOptionLabel\" style=\"top:170px;left:520px;font-size:14px;\">Mobile:</div>" +
                            "<input id=\"deliverToMobile\" type=\"text\" class=\"ecomOptionTitle ecomOptionInput\" style=\"top:170px;left:635px;width:300px;\" value=\"\" />" +

                            "<div class=\"ecomOptionTitle\" style=\"top:210px;left:35px;\">Billing Address</div>" +
                            "<div class=\"ecomOptionTitle\" style=\"top:210px;left:520px;\">Shipping Address</div>" +
                            "<div id=\"addressShipAsBill\" class=\"ecomOptionTickPanelOff\" style=\"top:217px;left:810px;\" onclick=\"toggleShippingAsBilling(this);\"></div>" +
                            "<div class=\"ecomOptionLabel\" style=\"top:210px;left:835px;font-size:14px;\">Same as Billing</div>" +
                            "<div id=\"billingAddressPanel\" class=\"ecomRegisterAddressPanel\" style=\"top:250px;left:35px;\">" +
                                "<div class=\"ecomOptionLabel\" style=\"top:0px;left:0px;font-size:14px;\">Address 1:</div>" +
                                "<input id=\"billAdd1\" type=\"text\" class=\"ecomOptionTitle ecomOptionInput\" style=\"top:0px;left:110px;width:300px;\" value=\"\" onkeyup=\"updateAddressField(this);\" />" +
                                "<div class=\"ecomOptionLabel\" style=\"top:35px;left:0px;font-size:14px;\">Address 2:</div>" +
                                "<input id=\"billAdd2\" type=\"text\" class=\"ecomOptionTitle ecomOptionInput\" style=\"top:35px;left:110px;width:300px;\" value=\"\" onkeyup=\"updateAddressField(this);\" />" +
                                "<div class=\"ecomOptionLabel\" style=\"top:70px;left:0px;font-size:14px;\">Town/City:</div>" +
                                "<input id=\"billTown\" type=\"text\" class=\"ecomOptionTitle ecomOptionInput\" style=\"top:70px;left:110px;width:300px;\" value=\"\" onkeyup=\"updateAddressField(this);\" />" +
                                "<div class=\"ecomOptionLabel\" style=\"top:105px;left:0px;font-size:14px;\">County/Region:</div>" +
                                "<input id=\"billCounty\" type=\"text\" class=\"ecomOptionTitle ecomOptionInput\" style=\"top:105px;left:110px;width:300px;\" value=\"\" onkeyup=\"updateAddressField(this);\" />" +
                                "<div class=\"ecomOptionLabel\" style=\"top:140px;left:0px;font-size:14px;\">Post/Zip Code:</div>" +
                                "<input id=\"billPCode\" type=\"text\" class=\"ecomOptionTitle ecomOptionInput\" style=\"top:140px;left:110px;width:198px;\" value=\"\" onkeyup=\"updateAddressField(this);\" />" +
                                "<div class=\"ecomOptionLabel\" style=\"top:175px;left:0px;font-size:14px;\">Country:</div>" +
                                "<div id=\"billCountry\" class=\"ecomOptionDropDown\" style=\"top:175px;left:110px;\"></div>";
            if (hasCraftyClicks) {
                panel += "<a class=\"ecomOptionRegisterText\" onclick=\"showCraftyClicksAddressPicker('bill');\" style=\"position:absolute;top:160px;left:340px;\">Lookup<br/>Address</a>";
            }
            panel += "</div>" +
                            "<div id=\"shippingAddressPanel\" class=\"ecomRegisterAddressPanel\" style=\"top:250px;left:520px;\">" +
                                "<div class=\"ecomOptionLabel\" style=\"top:0px;left:0px;font-size:14px;\">Address 1:</div>" +
                                "<input id=\"shipAdd1\" type=\"text\" class=\"ecomOptionTitle ecomOptionInput\" style=\"top:0px;left:110px;width:300px;\" value=\"\" />" +
                                "<div class=\"ecomOptionLabel\" style=\"top:35px;left:0px;font-size:14px;\">Address 2:</div>" +
                                "<input id=\"shipAdd2\" type=\"text\" class=\"ecomOptionTitle ecomOptionInput\" style=\"top:35px;left:110px;width:300px;\" value=\"\" />" +
                                "<div class=\"ecomOptionLabel\" style=\"top:70px;left:0px;font-size:14px;\">Town/City:</div>" +
                                "<input id=\"shipTown\" type=\"text\" class=\"ecomOptionTitle ecomOptionInput\" style=\"top:70px;left:110px;width:300px;\" value=\"\" />" +
                                "<div class=\"ecomOptionLabel\" style=\"top:105px;left:0px;font-size:14px;\">County/Region:</div>" +
                                "<input id=\"shipCounty\" type=\"text\" class=\"ecomOptionTitle ecomOptionInput\" style=\"top:105px;left:110px;width:300px;\" value=\"\" />" +
                                "<div class=\"ecomOptionLabel\" style=\"top:140px;left:0px;font-size:14px;\">Post/Zip Code:</div>" +
                                "<input id=\"shipPCode\" type=\"text\" class=\"ecomOptionTitle ecomOptionInput\" style=\"top:140px;left:110px;width:198px;\" value=\"\" />" +
                                "<div class=\"ecomOptionLabel\" style=\"top:175px;left:0px;font-size:14px;\">Country:</div>" +
                                "<div id=\"shipCountry\" class=\"ecomOptionDropDown\" style=\"top:175px;left:110px;\"></div>";
            if (hasCraftyClicks) {
                panel += "<a class=\"ecomOptionRegisterText\" onclick=\"showCraftyClicksAddressPicker('ship');\" style=\"position:absolute;top:160px;left:340px;\">Lookup<br/>Address</a>";
            }
            panel += "</div>" +
                            "<div class=\"ecomOptionLabel\" style=\"top:495px;left:45px;font-size:14px;line-height:14px;\">Click Checkout once you have entered all your details.</div>" +
                            "<input type=\"button\" class=\"ecomOptionCheckoutButton\" onclick=\"guestCheckout();\" style=\"top:480px;left:750px;\" value=\"\" />" +
                            "<div class=\"paypalPaymentOptions\" style=\"margin:430px 0px 0px 30px;\"></div>" +
                        "</div>";

            if (shopID == 143)
            {
                panel = panel.replace("Click Checkout once you have entered all your details", "We only ship to the UK");
            }

            editPanel2Inner.innerHTML = panel;
            editPanel2Inner.style.width = "980px";
            getCountries();
            setEditPanel2Position();

            // Click Checkout once you have entered all your details

        });
    }
    if (hasCraftyClicks && !ccSet) {
        showCraftyClicksAddressPicker("bill");
    }
}

function guestCheckout() {
    if (getAddresses()) {
        var email = document.getElementById('registerEmail').value;
        if (validateEmail(email)) {
            ecomEmail = email;
            ecomCustomerID = "0";
            finishGuestCheckout("yes");
        }
    }
}

function finishGuestCheckout(retval) {
    if (retval == "yes") {
        checkShipping();
    }
    hidePopupMessage();
}

//#endregion

// #region Crafty Clicks

function showCraftyClicksAddressPicker(tag) {
    craftyClicksLookupTag = tag;
    if (isMobileV2) {
        document.getElementById('mobiV2MainBasketPanel').style.width = "0px";
        currV2MobiPanel = "";
        panel = "<div class=\"innerTextElement\">" +
                    "<div class=\"ecomOptionItemMobi\">" +
                        "<div class=\"innerTextElement\" style=\"margin-bottom:10px;\">" +
                            "<div class=\"ecomBasketIconMobi\"></div>" +
                            "<div class=\"ecomOptionLabelMobi\" style=\"line-height:110px;\">Please enter your postcode (UK Only)</div>" +
                            "<input type=\"button\" class=\"ecomOptionContinueButtonMobi\" onclick=\"goBackToMobiAddress();\" value=\"\" />" +
                        "</div>" +
                        "<div id=\"craftyClicksResults\" class=\"innerTextElement\" style=\"margin:10px 0px 10px 0px;\">" +
                            "<div class=\"ecomOptionTitleMobi\" style=\"width:450px;margin-left:10px;text-align:right;\">UK Postal Code</div>" +
                            "<input id=\"craftyClicksInput\" class=\"ecomOptionInputMobi\" style=\"width:400px;margin:0px 10px;\" value=\"Postcode\" type=\"text\" onfocus=\"setTextField(this, 'Postcode');\" onblur=\"setTextField(this, 'Postcode');\">" +

                            "<input type=\"button\" class=\"ecomOptionCheckoutButtonMobi\" onclick=\"doCraftyClicksLookup();\" style=\"margin:10px 20px 0px 0px;\" value=\"\" />" +

                        "</div>" +
                    "</div>" +
                    "<div id=\"craftyClicksContinue\" class=\"innerTextElement\" style=\"margin:10px 0px 10px 0px;display:none;\">" +
                        "<input type=\"button\" class=\"ecomOptionCheckoutButtonMobi\" onclick=\"setCraftyClicksAddress();\" style=\"margin-right:20px;\" value=\"\" />" +
                    "</div>" +
                "</div>";
        document.getElementById('mobiV2MainBasketInnerPanel').innerHTML = panel;
        showMobiV2Panel('mobiV2MainBasketPanel');
    }
    else {
        ShowModal3();
        editPanel3Inner.innerHTML = "";
        editPanel3Inner.style.width = "";
        editPanel3Inner.style.height = "";
        var panel = "<div id=\"ecomModal580HeaderPanel\" style=\"min-height:160px;\">" +
                        "<div class=\"ecomOptionLabel\" style=\"top:10px;left:25px;\">Please enter your postcode (UK Only)</div>" +
                        "<input type=\"button\" class=\"ecomOptionContinueButton\" onclick=\"HideModal3();\" value=\"\" style=\"left:425px;top:10px;\" />" +
                        "<div id=\"craftyClicksResults\" class=\"innerTextElement\" style=\"margin-top:60px;width:560px;min-height:120px;max-height:" + (GetHeight() - 200) + "px;overflow:auto;\">" +
                            "<div class=\"ecomOptionTitle\" style=\"top:0px;left:45px;\">UK Postal Code</div>" +
                            "<input id=\"craftyClicksInput\" type=\"text\" class=\"ecomOptionTitle ecomOptionInput\" style=\"top:35px;left:45px;width:280px;\"  value=\"Postcode\" onfocus=\"setTextField(this, 'Postcode');\" onblur=\"setTextField(this, 'Postcode');\" />" +
                            "<input type=\"button\" class=\"ecomOptionSubmitButton\" onclick=\"doCraftyClicksLookup();\" style=\"left:350px;top:25px;\" value=\"\" />" +
                        "</div>" +
                        "<div id=\"craftyClicksContinue\" class=\"innerTextElement\" style=\"margin:10px 0px 10px 0px;height:54px;overflow:hidden;display:none;\">" +
                            "<input type=\"button\" class=\"ecomOptionCheckoutButton\" onclick=\"setCraftyClicksAddress();\" style=\"left:350px;top:0px;\" value=\"\" />" +
                        "</div>" +
                    "</div>";

        editPanel3Inner.innerHTML = panel;
        setEditPanel3Position();
    }
}

function doCraftyClicksLookup() {
    var pcode = document.getElementById('craftyClicksInput').value;
    if (pcode != "") {
        showLoadingPanel();
        $.ajax({
            dataType: "json",
            url: "/Handlers/getCraftyClicksPostcode.ashx?d=" + new Date().getTime(),
            type: "POST",
            data: "shopid=" + shopID + "&pcode=" + pcode
        }).done(function (addresses) {
            hideLoadingPanel();
            craftyClicksAddresses = addresses;
            if (addresses.length > 0) {
                var data = "";
                var mainClass = "margin:5px 0px 0px 25px;width:515px;border-bottom:1px solid #999999;";
                var labelClass = "ecomOptionLabel floatOverride14";
                var labelStyle = "margin-left:10px;width:470px;";
                var tickClass = "ecomOptionTickPanelOff";
                var tickStyle = "top:5px;left:490px;";
                if (isMobileV2) {
                    mainClass = "border-bottom:1px solid #999999;";
                    labelClass = "ecomOptionLabelMobi";
                    labelStyle = "width:730px;font-size:30px;margin:0px 0px 0px 10px;";
                    tickClass = "ecomOptionCheckoutToggleOffMobi";
                    tickStyle = "margin:0;";
                }
                for (var i = 0; i < addresses.length; i++) {
                    data += "<div class=\"innerTextElement\" style=\"" + mainClass + "\">";
                    if (addresses[i].organisation_name != "") {
                        data += "<div class=\"" + labelClass + "\" style=\"" + labelStyle + "\">" + addresses[i].organisation_name + "</div>";
                    }
                    if (addresses[i].department_name != "") {
                        data += "<div class=\"" + labelClass + "\" style=\"" + labelStyle + "\">" + addresses[i].department_name + "</div>";
                    }
                    data += "<div class=\"" + labelClass + "\" style=\"" + labelStyle + "\">" + addresses[i].line_1 + "</div>";
                    data += "<div id=\"addid" + i + "\" class=\"" + tickClass + "\" onclick=\"toggleUseAddress(this);\" style=\"" + tickStyle + "\"/></div>";
                    if (addresses[i].line_2 != "") {
                        data += "<div class=\"" + labelClass + "\" style=\"" + labelStyle + "\">" + addresses[i].line_2 + "</div>";
                    }
                    data += "</div>";
                }

                document.getElementById('craftyClicksResults').innerHTML = data;
                document.getElementById('craftyClicksContinue').style.display = "inline";

                if (isMobileV2) {
                    resizeMobileContainer("mobiV2MainBasketPanel");
                }
                else {
                    setEditPanel3Position();
                }
            }
            else {
                showPopupMessage("No addresses were found for your postcode", "OK");
            }
        });
    }
}

function toggleUseAddress(elem) {
    var state = elem.className;
    if (isMobileV2) {
        $('#craftyClicksResults').find('.ecomOptionCheckoutToggleOnMobi').each(function () {
            this.className = "ecomOptionCheckoutToggleOffMobi";
        });
        if (state == "ecomOptionCheckoutToggleOffMobi") {
            elem.className = "ecomOptionCheckoutToggleOnMobi";
        }
        else {
            elem.className = "ecomOptionCheckoutToggleOffMobi";
        }
    }
    else {
        $('#craftyClicksResults').find('.ecomOptionTickPanelOn').each(function () {
            this.className = "ecomOptionTickPanelOff";
        });
        if (state == "ecomOptionTickPanelOff") {
            elem.className = "ecomOptionTickPanelOn";
        }
        else {
            elem.className = "ecomOptionTickPanelOff";
        }
    }
}

function setCraftyClicksAddress() {
    var addID = -1;
    if (isMobileV2) {
        $('#craftyClicksResults').find('.ecomOptionCheckoutToggleOnMobi').each(function () {
            addID = parseInt(this.id.replace('addid', ''), 10);
        });
    }
    else {
        $('#craftyClicksResults').find('.ecomOptionTickPanelOn').each(function () {
            addID = parseInt(this.id.replace('addid', ''), 10);
        });
    }
    if (addID > -1) {
        if (isMobileV2) {
            if (mobiRoute == "guest") {
                showGuestCheckoutPanel(true);
            }
            else if (mobiRoute == "register") {
                showRegisterPanel(true);
            }
            else if (mobiRoute == "login") {
                showLoginAddress(true);
            }
        }

        var add1 = "";
        if (craftyClicksAddresses[addID].organisation_name != "") {
            add1 = craftyClicksAddresses[addID].organisation_name;
        }
        if (craftyClicksAddresses[addID].department_name != "") {
            if (add1 == "") {
                add1 = craftyClicksAddresses[addID].department_name;
            }
            else {
                add1 += ", " + craftyClicksAddresses[addID].department_name;
            }
        }
        if (add1 == "") {
            add1 = craftyClicksAddresses[addID].line_1;
        }
        else {
            add1 += ", " + craftyClicksAddresses[addID].line_1;
        }
        document.getElementById(craftyClicksLookupTag + 'Add1').value = add1;

        var add2 = "";
        if (craftyClicksAddresses[addID].line_2 != "") {
            add2 = craftyClicksAddresses[addID].line_2;
        }
        document.getElementById(craftyClicksLookupTag + 'Add2').value = add2;

        var town = craftyClicksAddresses[addID].town;
        document.getElementById(craftyClicksLookupTag + 'Town').value = town;

        var county = "";
        if (craftyClicksAddresses[addID].traditional_county != "") {
            county = craftyClicksAddresses[addID].traditional_county;
        }
        if (craftyClicksAddresses[addID].postal_county != "") {
            county = craftyClicksAddresses[addID].postal_county;
        }
        document.getElementById(craftyClicksLookupTag + 'County').value = county;

        try{
            document.getElementById(craftyClicksLookupTag + 'CountrySelect').selectedIndex = 0;
        }
        catch (e) { }

        var postcode = craftyClicksAddresses[addID].postcode;
        document.getElementById(craftyClicksLookupTag + 'PCode').value = postcode;

        HideModal3();
    }
}

function goBackToMobiAddress() {
    if (mobiRoute == "guest") {
        showGuestCheckoutPanel();
    }
    else if (mobiRoute == "register") {
        showRegisterPanel();
    }
    else if (mobiRoute == "login") {
        showLoginAddress();
    }
    else {
        resetBasketStartUps();
    }
}

// #endregion

//#region Best Sellers & Sale Item Functions

function getEcomSlideshow(elem) {
    var img = "";
    var tit = "";
    var des = "";
    var com = "";
    var bac = "";
    $(elem).find('.ecomSlideshowMainImage').each(function () {
        img = this.getAttribute("style");
    });
    $(elem).find('.ecomSlideshowItemTitle').each(function () {
        tit = this.getAttribute("style");
    });
    $(elem).find('.ecomSlideshowItemDescription').each(function () {
        des = this.getAttribute("style");
    });
    $(elem).find('.ecomSlideshowItemComment').each(function () {
        com = this.getAttribute("style");
    });
    $(elem).find('.ecomSlideshowBackground').each(function () {
        bac = this.getAttribute("style");
    });
    $.post("/Handlers/getEcomSlideshowItems.ashx?d=" + new Date().getTime(), {
        shopid: shopID,
        elemid: elem.id,
        cnt: getMyAttribute(elem.id, "cnt"),
        type: getMyAttribute(elem.id, "tag"),
        txt: getMyAttribute(elem.id, "txt"),
        img: img,
        tit: tit,
        des: des,
        com: com,
        bac: bac,
        wid: elem.offsetWidth
    }, function (data) {
        if (data != "none") {
            elem.innerHTML = "<div class=\"ecomPromoWrapper\" onmouseover=\"setMouseOver('" + elem.id + "', 'over');\" onmouseout=\"fixOnMouseOut2(this, event, '" + elem.id + "');\">" +
                                data +
                                "<div id=\"" + elem.id + "left\" class=\"ecomPromoLeftButton\" onclick=\"moveLeft('" + elem.id + "');\"></div>" +
                                "<div id=\"" + elem.id + "right\" class=\"ecomPromoRightButton\" onclick=\"moveRight('" + elem.id + "');\"></div>" +
                                "</div>";

            setTimeout("autoScrollImages('" + elem.id + "')", 6000);
        }
    });
}

function fixOnMouseOut2(elem, event, id) {
    var current_mouse_target = null;
    if (event.toElement) {
        current_mouse_target = event.toElement;
    } else if (event.relatedTarget) {
        current_mouse_target = event.relatedTarget;
    }
    if (!is_child_of(elem, current_mouse_target) && elem != current_mouse_target) {
        setMouseOver(id, 'out');
    }
}

function setMouseOver(id, state) {
    if (state == 'over') {
        mouseOver = true;
        document.getElementById(id + 'left').style.visibility = "visible";
        document.getElementById(id + 'right').style.visibility = "visible";
        if (document.getElementById(id + 'nav')) {
            document.getElementById(id + 'nav').style.visibility = "visible";
        }
    }
    else {
        mouseOver = false;
        document.getElementById(id + 'left').style.visibility = "hidden";
        document.getElementById(id + 'right').style.visibility = "hidden";
        if (document.getElementById(id + 'nav')) {
            document.getElementById(id + 'nav').style.visibility = "hidden";
        }
    }
}

function autoScrollImages(id) {
    if (!mouseOver) {
        moveLeft(id);
    }
    setTimeout("autoScrollImages('" + id + "')", 6000);
}

function moveLeft(id) {
    $('#' + id).find('.ecomSlideshowSlider').each(function () {
        $(this).animate({ left: "-" + this.firstChild.offsetWidth + "px" }, 1000, function () {
            this.appendChild(this.firstChild);
            this.style.left = "0px";
            setNavButton(id, this);
        });
    });
}

function moveRight(id) {
    $('#' + id).find('.ecomSlideshowSlider').each(function () {
        this.insertBefore(this.lastChild, this.firstChild);
        this.style.left = "-" + this.firstChild.offsetWidth + "px";
        $(this).animate({ left: "0px" }, 1000);
        setNavButton(id, this);
    });
}

function setNavButton(id, elem) {
    $('#' + id + 'nav').find('.ecomPromoBottomNavButtonSelected').each(function () {
        this.className = "ecomPromoBottomNavButton";
    });
    document.getElementById(elem.firstChild.id + 'Nav').className = "ecomPromoBottomNavButtonSelected";
}

function gotoEcomSlide(elem, id) {
    if (elem.className == "ecomPromoBottomNavButton") {
        var slide = document.getElementById(id);
        var slidePanel = slide.parentNode;
        while (slidePanel.firstChild.nextSibling != slide) {
            slidePanel.appendChild(slidePanel.firstChild);
            slidePanel.style.left = "0px";
        }
        moveLeft(slidePanel.parentNode.parentNode.id);
    }
}

//#endregion

// #region Image Scrolling

function startImageScrolling(elem) {
    $(elem).find('.slideShow').each(function () {
        var t = $(this).flexslider("playing");
        if (!$(this).flexslider("playing")) {
            $(this).flexslider("play");
        }
    });
}

function fixOnMouseOutScrolling(elem, e) {
    var current_mouse_target = null;
    if (e.toElement) {
        current_mouse_target = e.toElement;
    } else if (event.relatedTarget) {
        current_mouse_target = e.relatedTarget;
    }
    if (!is_child_of(elem, current_mouse_target) && elem != current_mouse_target) {
        stopImageScrolling(elem);
    }
}

function stopImageScrolling(elem) {
    $(elem).find('.slideShow').each(function () {
        $(this).flexslider(0);
        $(this).flexslider("pause");
    });
}

// #endregion

// #region new Ecom Slider

function switchEcomSlideShow(elem, tag, width, count) {
    $.post("/Handlers/getEcomSlideShow.ashx?d=" + new Date().getTime(), {
        shopid: shopID,
        compid: companyID,
        siteid: siteID,
        width: width,
        count: count,
        tag: tag
    }, function (data) {
        if (data != "none") {
            elem = elem.parentNode.parentNode;
            $(elem).find('.ecomSliderWrapper').each(function () {
                this.style.visibility = "hidden";
                this.innerHTML = data;
            });
            $(elem).find('.slideShow').each(function () {
                $(this).flexslider({
                    animation: getMyAttribute(elem.id, "anim"),
                    directionNav: getMyAttribute(elem.id, "nav") == "1",
                    controlNav: getMyAttribute(elem.id, "cntrls") == "1",
                    slideDirection: "horizontal",
                    slideshowSpeed: getMyAttribute(elem.id, "delay"),
                    animationSpeed: getMyAttribute(elem.id, "speed"),
                    pauseOnHover: true,
                    autoStart: true,
                    animationLoop: true
                });
            });
            $(elem).find('.ecomSliderWrapper').each(function () {
                this.style.visibility = "visible";
            });
        }
    });
}

// #endregion

function viewEcomVideo() {
    if (videoData != "") {
        showVideoPlayer(videoData.split("^")[0], videoData.split("^")[1], videoData.split("^")[2], videoData.split("^")[3])
    }
}

function getEcomFile(elem) {
    window.open("/Handlers/fileServer.ashx?fileID=" + elem.getAttribute("fid") + "&d=" + new Date().getTime(), "", "scrollbars=no,menubar=no,height=60,width=400,resizable=no,toolbar=no,location=no,status=no,top=100,left=100");
}

function gotoEcomLink(elem) {
    if (ecomUrlLink != "") {
        window.open(ecomUrlLink, "_blank", "");
    }
}

function getCountries(bid, sid) {
    $.get("/Handlers/getCountries.ashx?v2=" + isMobileV2 + "&shopID=" + shopID + "&d=" + new Date().getMilliseconds(), function (data) {
        if (document.getElementById('billCountry')) {
            document.getElementById('billCountry').innerHTML = data;
            document.getElementById('shipCountry').innerHTML = data.replace("billCountrySelect", "shipCountrySelect");
            if (bid) {
                for (var i = 0; i < document.getElementById('billCountrySelect').options.length; i++) {
                    if (document.getElementById('billCountrySelect').options[i].value == bid) {
                        document.getElementById('billCountrySelect').options[i].selected = true;
                        document.getElementById('billCountrySelect').selectedIndex = i;
                    }
                    if (document.getElementById('shipCountrySelect').options[i].value == sid) {
                        document.getElementById('shipCountrySelect').options[i].selected = true;
                        document.getElementById('shipCountrySelect').selectedIndex = i;
                    }
                }
                if (billingAddressID == shippingAddressID || billing == shipping) {
                    if (isMobileV2) {
                        toggleShippingAsBilling(document.getElementById('addressShipAsBill'));
                    }
                    else {
                        toggleShippingAsBilling(document.getElementById('addressShipAsBill'));
                    }
                }
            }
        }
    });
}

function getAddresses() {
    var cando = true;
    deliveryMobile = document.getElementById('deliverToMobile').value;
    if (showMobileReminder && deliveryMobile == "") {
        cando = false;
        showMobileReminder = false;
        //showPopupMessage("We noticed that you have not entered a mobile phone number.<br>If you give us your mobile number we can let you know when your order has been dispatched<br>and also send any tracking information.", "OK");
        showPopupMessage("We noticed that you have not entered a mobile phone number.<br><br>While it is not required to complete your order, doing so will<br>allow us to let you know when your order has been dispatched<br>and also send any tracking information.<br>", "OK");
    }
    else {
        var message = "";
        deliveryFirstName = document.getElementById('deliverToFirstName').value;
        if (deliveryFirstName == "") {
            cando = false;
            message += "Delivery First Name is missing<br>";
        }
        deliveryLastName = document.getElementById('deliverToLastName').value;
        if (deliveryLastName == "") {
            cando = false;
            message += "Delivery Last Name is missing<br>";
        }
        deliveryPhone = document.getElementById('deliverToPhone').value;
        if (deliveryPhone == "") {
            cando = false;
            message += "Delivery Contact Number is missing<br>";
        }
        var billAdd1 = document.getElementById('billAdd1').value;
        if (billAdd1 == "") {
            cando = false;
            message += "Billing Address 1 is missing<br>";
        }
        var billAdd2 = document.getElementById('billAdd2').value;
        var billTown = document.getElementById('billTown').value;
        if (billTown == "") {
            cando = false;
            message += "Billing Town/City is missing<br>";
        }
        var billCounty = document.getElementById('billCounty').value;
        if (billCounty == "") {
            cando = false;
            message += "Billing County/Region is missing<br>";
        }
        var billPCode = document.getElementById('billPCode').value;
        if (billPCode == "") {
            cando = false;
            message += "Billing Post/Zip Code is missing<br>";
        }
        var billingSelect = document.getElementById('billCountry').getElementsByTagName('select')[0];
        var billCountry = billingSelect.options[billingSelect.selectedIndex].innerHTML;
        var billCountryID = billingSelect.options[billingSelect.selectedIndex].value;
        if (billCountryID == "247") {
            if (billCounty.length != 2) {
                cando = false;
                message += "Abbreviated State Name needed, e.g. NY, MI, FL etc.<br>";
            }
        }
        if (document.getElementById('addressShipAsBill').className == "ecomOptionTickPanelOn" || document.getElementById('addressShipAsBill').className == "ecomOptionCheckoutToggleOnMobi") {
            shipAdd1 = billAdd1;
            shipAdd2 = billAdd2;
            shipTown = billTown;
            shipCounty = billCounty;
            shipPCode = billPCode;
            shipCountry = billCountry;
            shipCountryID = billCountryID;
        }
        else {
            shipAdd1 = document.getElementById('shipAdd1').value;
            if (shipAdd1 == "") {
                cando = false;
                message += "Shipping Address 1 is missing<br>";
            }
            shipAdd2 = document.getElementById('shipAdd2').value;
            shipTown = document.getElementById('shipTown').value;
            if (shipTown == "") {
                cando = false;
                message += "Shipping Town/City is missing<br>";
            }
            shipCounty = document.getElementById('shipCounty').value;
            if (shipCounty == "") {
                cando = false;
                message += "Shipping County/Region is missing<br>";
            }
            shipPCode = document.getElementById('shipPCode').value;
            if (shipPCode == "") {
                cando = false;
                message += "Shipping Post/Zip Code is missing<br>";
            }
            var shippingSelect = document.getElementById('shipCountry').getElementsByTagName('select')[0];
            shipCountry = shippingSelect.options[shippingSelect.selectedIndex].innerHTML;
            shipCountryID = shippingSelect.options[shippingSelect.selectedIndex].value;
            if (shipCountryID == "247") {
                if (shipCounty.length != 2) {
                    cando = false;
                    message += "Abbreviated State Name needed, e.g. NY, MI, FL etc.<br>";
                }
            }
        }
        if (cando) {
            billing = billAdd1 + "**" + billAdd2 + "**" + billTown + "**" + billCounty + "**" + billPCode + "**" + billCountryID;
            billing = escape(billing);
            shipping = shipAdd1 + "**" + shipAdd2 + "**" + shipTown + "**" + shipCounty + "**" + shipPCode + "**" + shipCountryID;
            shipping = escape(shipping);
        }
        else {
            showPopupMessage("Please correct the following Errors<br>" + message, "OK");
        }
    }
    return cando;
}

function gotoCheckout() {

     var VATReliefAction = (giveVATReliefOnMarkedProducts) ? 'apply' : 'remove';
    checkVATReliefStatus(VATReliefAction);

    if (!VATExemptShipAddress && !gotVATReliefForm && giveVATReliefOnMarkedProducts) {
        buildVATReliefForm();
        return;
    }

    var tOrderNote = "";
    if (document.getElementById("txtAreaNote")) {
        tOrderNote = document.getElementById("txtAreaNote").value;
    }

    showLoadingPanel("redirecting");
    if (ga) {
        for (var i = 0; i < basket.length; i++) {
            var basketRow = basket[i];
            ga('ec:addProduct', {
                'id': basketRow.productID,
                'name': basketRow.itemName,
                'category': basketRow.category,
                'brand': basketRow.brand,
                'variant': basketRow.itemVariant,
                'price': basketRow.priceGross,
                'quantity': basketRow.rowQuantity
            });
        }

        ga('ec:setAction', 'checkout', { 'step': 1 });
        ga('send', 'pageview');
    }
    var items = "";
    // id + "~~" + requ + "~~" + advNavGroupID
    for (var i = 0; i < basket.length; i++) {
        items += basket[i] + "--";
    }

    var shippingID = 0;
    var shippingService = "";
    try {
        shippingID = $('#shippingOptionsSelect option:selected').val();
        shippingService = $('#shippingOptionsSelect option:selected').html();
    }
    catch (Exception) { }
    //var b = $('#shippingOptionsSelect').val();
    

    HideModal2();

    var isBackend = false;
    if (currentShipping) {
        isBackend = currentShipping.isBackend;
    }

    $.ajax({
        dataType: "json",
        url: "/Handlers/saveBasket.ashx?d=" + new Date().getTime(),
        type: "POST",
        data: JSON.stringify({
            siteID: siteID, companyID: companyID, shopID: shopID, customerID: ecomCustomerID, name: deliveryFirstName, lastName: deliveryLastName, phone: deliveryPhone, mobile: deliveryMobile,
            billingAddress: billing, shippingAddress: shipping, email: ecomEmail, price: priceToSubmit, shipping: shippingToSubmit, basketRows: basket, gatewayID: gatewayID, orderNote: tOrderNote,
            shippingID: shippingID, shippingService: shippingService, loyaltyPoints: loyaltyPoints, cookie: cookie, isBackend: isBackend
        })
    }).done(function (result) {
        if (result.basketID > 0) {
            if (tradeUserID != "0" || dMode == true) {
                window.location = "/paymentValidation.aspx?bskID=" + result.basketID;
            }
            else {
                window.location = result.gatewayUrl + "?bskID=" + result.basketID;
            }
        }
        else {
            hideLoadingPanel();
            showPopupMessage("Save Basket Failed", "OK");
        }
    });

    //} else {
    //    showPopupMessage("Please select a Payment Gateway", "OK");
    //}
}

function toggleShippingAsBilling(elem) {
    var currState = elem.className;
    if (isMobileV2) {
        if (currState == "ecomOptionCheckoutToggleOffMobi") {
            elem.className = "ecomOptionCheckoutToggleOnMobi";
            document.getElementById('shipAdd1').value = document.getElementById('billAdd1').value;
            document.getElementById('shipAdd2').value = document.getElementById('billAdd2').value;
            document.getElementById('shipTown').value = document.getElementById('billTown').value;
            document.getElementById('shipCounty').value = document.getElementById('billCounty').value;
            document.getElementById('shipPCode').value = document.getElementById('billPCode').value;
            document.getElementById('shipCountrySelect').selectedIndex = document.getElementById('billCountrySelect').selectedIndex;
            document.getElementById('shippingHiderPanel').style.height = "0px";
            //document.getElementById('shippingHiderPanel').style.display = "block";
        }
        else {
            elem.className = "ecomOptionCheckoutToggleOffMobi";
            document.getElementById('shippingHiderPanel').style.height = "";
            //document.getElementById('shippingHiderPanel').style.display = "none";
        }
        resizeMobileContainer('mobiV2MainBasketPanel');
    }
    else {
        if (currState == "ecomOptionTickPanelOff") {
            elem.className = "ecomOptionTickPanelOn";
            document.getElementById('shipAdd1').disabled = true;
            document.getElementById('shipAdd2').disabled = true;
            document.getElementById('shipTown').disabled = true;
            document.getElementById('shipCounty').disabled = true;
            document.getElementById('shipPCode').disabled = true;
            document.getElementById('shipCountrySelect').disabled = true;
        }
        else {
            elem.className = "ecomOptionTickPanelOff";
            document.getElementById('shipAdd1').value = document.getElementById('billAdd1').value;
            document.getElementById('shipAdd2').value = document.getElementById('billAdd2').value;
            document.getElementById('shipTown').value = document.getElementById('billTown').value;
            document.getElementById('shipCounty').value = document.getElementById('billCounty').value;
            document.getElementById('shipPCode').value = document.getElementById('billPCode').value;
            document.getElementById('shipCountrySelect').selectedIndex = document.getElementById('billCountrySelect').selectedIndex

            document.getElementById('shipAdd1').disabled = false;
            document.getElementById('shipAdd2').disabled = false;
            document.getElementById('shipTown').disabled = false;
            document.getElementById('shipCounty').disabled = false;
            document.getElementById('shipPCode').disabled = false;
            document.getElementById('shipCountrySelect').disabled = false;
        }
    }
}

function updateAddressField(elem) {
    if (document.getElementById('addressShipAsBill').className == "ecomOptionTickPanelOn") {
        if (elem.id.indexOf("Select") == 0) {
            document.getElementById(elem.id.replace("Bill", "Ship")).selectedIndex = elem.selectedIndex;
        }
        else {
            document.getElementById(elem.id.replace("Bill", "Ship")).value = elem.value;
        }
    }
    if (elem.id == "billCounty" || elem.id == "shipCounty") {
        if (document.getElementById('billCountrySelect').selectedIndex == 246 || document.getElementById('shipCountrySelect').selectedIndex == 246) {
            if (elem.value.length != 2) {
                showPopupMessage("For US States please use the two letter abbreviation.<br/>e.g. Michigan = MI<br/>If not Paypal will not recognise the address.", "OK");
            }
        }
    }
    if (elem.id == "billCountrySelect" || elem.id == "shipCountrySelect") {
        if (elem.selectedIndex == 246) {
            if (document.getElementById('billCounty').value.length != 2 || document.getElementById('shipCounty').value.length != 2) {
                showPopupMessage("For US States please use the two letter abbreviation<br/>e.g. Michigan = MI<br/>If not Paypal will not recognise the address.", "OK");
            }
        }
    }
}

function setMainEcomImage(iID, prdID) {
    var mainImage = document.getElementById('mainEcomImage_' + prdID);
    var thisProduct = currProduct;
    if (thisProduct.productID != prdID) {
        for (var i = 0; i < products.length; i++) {
            if (products[i].productID == prdID) {
                thisProduct = products[i];
            }
        }
    }
    if (mainImage) {
        iWidth = mainImage.parentNode.offsetWidth;
        iHeight = mainImage.parentNode.offsetHeight;

        $.ajax({
            dataType: "json",
            url: "/Handlers/getEcomImage.ashx?d=" + new Date().getTime(),
            type: "POST",
            data: { iID: iID, 
                width: iWidth, 
                height: iHeight, 
                shopid: shopID, 
                imids: thisProduct.currentVariation.imageIDs,
                name: thisProduct.currentVariation.variationName,
                varid: thisProduct.currentVariation.variationID,
                prdid: thisProduct.productID,
                zwidth: zoomWidth,
                zheight: zoomHeight }
        }).done(function (image) {
            if (image.imageID > 0) {
                mainImage.style.marginTop = image.marginTop + "px";
                mainImage.style.marginLeft = image.marginLeft + "px";
                mainImage.width = image.requiredWidth;
                mainImage.height = image.requiredHeight;
                mainImage.src = image.url;
                mainImage.alt = image.alt;
                mainImage.style.visibility = "visible";

                if (document.getElementById('zoomToolImage_' + prdID)) {
                    canZoom = true;
                    document.getElementById('zoomToolImage_' + prdID).src = "/ecomimages/" + image.imageID;
                    document.getElementById('zoomToolImage_' + prdID).style.width = image.imageWidth + "px";
                    document.getElementById('zoomToolImage_' + prdID).style.height = image.imageHeight + "px";
                    thisProduct.zoomRatio = image.imageRatio;
                    document.getElementById('zoomToolPanel_' + prdID).style.width = image.zoomWidth + "px";
                    document.getElementById('zoomToolPanel_' + prdID).style.height = image.zoomHeight + "px";
                    thisProduct.zoomToolOffsetTop = document.getElementById('zoomToolPanel_' + prdID).offsetHeight / 2;
                    thisProduct.zoomToolOffsetLeft = document.getElementById('zoomToolPanel_' + prdID).offsetWidth / 2;
                    thisProduct.zoomTopLimit = $(mainImage).offset().top;
                    thisProduct.zoomLeftLimit = $(mainImage).offset().left;
                    thisProduct.zoomMarginTop = parseInt($(mainImage).css('marginTop').replace("px"), 10);
                    thisProduct.zoomMarginLeft = parseInt($(mainImage).css('marginLeft').replace("px"), 10);
                }
            }
            else {
                canZoom = false;
                mainImage.src = image.url;
                mainImage.alt = image.alt;
                mainImage.style.visibility = "visible";
            }
        });
    }
}

function gotoSlide(num) {
    $('#slideShow_' + currProduct.productID).flexslider(num);
}

function setEcomTab(id) {
    $('.ecomTabSelected').each(function () {
        $(this).removeClass("ecomTabSelected");
        $(this).addClass("ecomTabIdle");
    });
    $('#ecomTab' + id).removeClass("ecomTabIdle");
    $('#ecomTab' + id).addClass("ecomTabSelected");

    $('.ecomTabPanel').each(function () {
        $(this).hide();
    });
    $('#ecomTabPanel' + id).show();
}

function handleSalesAttchUpload(elem) {
    var widget = elem.parentNode.parentNode;
    var fileOpts = getMyAttribute(widget.id, 'fileopts');
    if (elem.files.length > 0) {
        showLoadingPanel();
        var fd = new FormData();
        for (var i = 0; i < elem.files.length; i++) {
            fd.append('file', elem.files[i]);
        }
        $.ajax({
            url: "/Handlers/uploadSalesAttachment.ashx?shopid=" + shopID + "&rngID=" + currProduct.productID + "&varID=" + currProduct.currentVariation.variationID + "&opts=" + fileOpts + "&d=" + new Date().getTime(),
            dataType: "json",
            type: "POST",
            contentType: false,
            processData: false,
            cache: false,
            data: fd,
            success: function (result) {
                if (result.result == "fileTooBig") {
                    showPopupMessage("The file you uploaded is too big", "OK");
                }
                else if (result.result == "wrongFileType") {
                    showPopupMessage("The file you are trying to upload is not supported", "OK");
                }
                else if (result.result == "isAnimated") {
                    showPopupMessage("The image you are trying to upload is animated and cannot be used", "OK");
                }
                else {
                    var panel = "";
                    for (var i = 0; i < result.files.length; i++) {
                        panel += "<div id=\"uploadResultItem_" + result.files[i].ID + "\" class=\"uploadResultItem\">" +
                                    "<div class=\"uploadResultLabel\">" + result.files[i].name + "</div>" +
                                    "<div class=\"uploadResultDelete\" onclick=\"deleteUploadedFile(" + result.files[i].ID + ");\"></div>" +
                                "</div>";
                    }
                    $(document).find('.uploadResultPanel').each(function () {
                        this.innerHTML = panel;
                    });
                }
                hideLoadingPanel();
            }
        });
    }
    else {
        showPopupIntMessage("Couldn't get the file!", "OK");
    }
}

function deleteUploadedFile(id) {
    showLoadingPanel();
    $.ajax({
        dataType: "json",
        url: "/Handlers/deleteUploadedFile.ashx?d=" + new Date().getTime(),
        type: "POST",
        data: { shopid: shopID, fileid: id, rngID: currProduct.productID, varID: currProduct.currentVariation.variationID }
    }).done(function (files) {
        var panel = "";
        for (var i = 0; i < files.length; i++) {
            panel += "<div id=\"uploadResultItem_" + files[i].ID + "\" class=\"uploadResultItem\">" +
                        "<div class=\"uploadResultLabel\">" + files[i].name + "</div>" +
                        "<div class=\"uploadResultDelete\" onclick=\"deleteUploadedFile(" + files[i].ID + ");\"></div>" +
                    "</div>";
        }
        $(document).find('.uploadResultPanel').each(function () {
            this.innerHTML = panel;
        });
        hideLoadingPanel();
    });
}

function handleSalesAttchTextUpload(elem, prdID, varID) {
    var text = elem.value;
    $.ajax({
        dataType: "json",
        url: "/Handlers/uploadTextAttachment.ashx?d=" + new Date().getTime(),
        type: "POST",
        data: { shopid: shopID, rngid: prdID, varid: varID, text: text }
    }).done(function (result) {
        var panel = "";
        for (var i = 0; i < result.files.length; i++) {
            panel += "<div id=\"uploadResultItem_" + result.files[i].ID + "\" class=\"uploadResultItem\">" +
                        "<div class=\"uploadResultLabel\">" + result.files[i].name + "</div>" +
                        "<div class=\"uploadResultDelete\" onclick=\"deleteUploadedFile(" + result.files[i].ID + ");\"></div>" +
                    "</div>";
        }
        $(document).find('.uploadResultPanel').each(function () {
            this.innerHTML = panel;
        });
        hideLoadingPanel();
        if (isMultiPack) {
            addMultiToBasket();
        }
        else {
            addSingleToBasket();
        }
    });
}

// #endregion

// #region Signup

function showSignupModal(btn) {
    var canPop = true;
    if (!btn) {
        if (!alwaysSignup) {
            if (hasSignupCookie()) {
                canPop = false;
            }
        }
    }
    if (canPop) {
        $('#signupModal').find('.ecomSignupInput').each(function () {
            this.value = "";
        });
        var sWid = document.getElementById('signupModalInner').offsetWidth;
        var sHei = document.getElementById('signupModalInner').offsetHeight;
        document.getElementById('signupModalWrapper').style.marginLeft = "-" + (sWid / 2) + "px";
        document.getElementById('signupModalWrapper').style.marginTop = "-" + (sHei / 2) + "px";
        document.getElementById('signupModalWrapper').style.width = sWid + "px";
        document.getElementById('signupModal').style.visibility = "visible";
        $('#signupModalWrapper').animate({ height: sHei + "px" }, 250);
    }
}

function hideSignupModal() {
    document.getElementById('signupModal').style.visibility = "hidden";
    setSignupCookie();
}

function submitSignup() {
    var signFName = "";
    var signLName = "";
    var signEmail = "";
    var signPhone = "";
    var signMobile = "";
    var canSubmit = true;
    $('#signupModal').find('.ecomSignupInput').each(function () {
        if (this.name == "fname") {
            if (this.value != "") {
                signFName = this.value;
            }
            else {
                showPopupMessage("Please enter a first name", "OK");
                canSubmit = false;
            }
        }
        else if (this.name == "lname") {
            if (this.value != "") {
                signLName = this.value;
            }
            else {
                showPopupMessage("Please enter a last name", "OK");
                canSubmit = false;
            }
        }
        else if (this.name == "email") {
            var test = this.value;
            if (test != "") {
                if (validateEmail(test)) {
                    signEmail = test;
                }
                else {
                    showPopupMessage("Email address not valid", "OK");
                    canSubmit = false;
                }
            }
            else {
                showPopupMessage("Please enter an email address", "OK");
                canSubmit = false;
            }
        }
        else if (this.name == "mobile") {
            var test = this.value.replace(/ /gi, "");
            if (test != "") {
                if (checkNumbers(test)) {
                    signMobile = this.value;
                }
                else {
                    showPopupMessage("Mobile not valid", "OK");
                    canSubmit = false;
                }
            }
            else {
                showPopupMessage("Please enter a mobile number", "OK");
                canSubmit = false;
            }
        }
        else if (this.name == "landline") {
            var test = this.value.replace(/ /gi, "");
            if (test != "") {
                if (checkNumbers(test)) {
                    signPhone = this.value;
                }
                else {
                    showPopupMessage("landline not valid", "OK");
                    canSubmit = false;
                }
            }
            else {
                showPopupMessage("Please enter a landline number", "OK");
                canSubmit = false;
            }
        }
    });
    if (canSubmit) {
        $.post("/Handlers/submitSignup.ashx?d=" + new Date().getTime(), {
            shopid: shopID,
            fname: signFName,
            lname: signLName,
            mail: signEmail,
            tel: signPhone,
            mob: signMobile
        }, function (data) {
            if (data == "exists") {
                showPopupMessage("Someone has already registered that email address", "OK");
            }
            else {
                showPopupMessage("Information submitted", "OK");
                hideSignupModal();
            }
        });
    }
}

function hasSignupCookie() {
    var hasCookie = false;
    var cArray = document.cookie.split(';');
    for (var i = 0; i < cArray.length; i++) {
        if (cArray[i].indexOf("mailshotsignup") > -1) {
            hasCookie = true;
        }
    }
    return hasCookie;
}

function setSignupCookie() {
    var exdate = new Date();
    exdate.setDate(exdate.getDate() + waitSignup);
    document.cookie = "mailshotsignup=1; expires=" + exdate.toGMTString() + ";path=/;";
}

// #endregion

// #region Validation

function showValidationModal() {
    var canPop = true;
    if (hasValidationCookie()) {
        canPop = false;
    }
    if (canPop) {
        var vWid = document.getElementById('validationModalInner').offsetWidth;
        var vHei = document.getElementById('validationModalInner').offsetHeight;
        document.getElementById('validationModalWrapper').style.marginLeft = "-" + (vWid / 2) + "px";
        document.getElementById('validationModalWrapper').style.marginTop = "-" + (vHei / 2) + "px";
        document.getElementById('validationModalWrapper').style.width = vWid + "px";
        document.getElementById('validationModal').style.visibility = "visible";
        $('#validationModalWrapper').animate({ height: vHei + "px" }, 250);
    }
}

function gotoValidate(url, tag) {
    if (tag == "yes") {
        setValidationCookie();
    }
    window.location = url;
}

function hasValidationCookie() {
    var hasCookie = false;
    var cArray = document.cookie.split(';');
    for (var i = 0; i < cArray.length; i++) {
        if (cArray[i].indexOf("validation") > -1) {
            hasCookie = true;
        }
    }
    return hasCookie;
}

function setValidationCookie() {
    var exdate = new Date();
    exdate.setDate(exdate.getDate() + 30);
    document.cookie = "validation=1; expires=" + exdate.toGMTString() + ";path=/;";
}

// #endregion

// #region Magazine

var magMonth = 0;
var magYear = 0;
var magFeatElem;
var magArtsElem;
var artsToShow;
var magCatID = "0";

function getMagazineArchive(elem) {
    if (elem) {
        $.post("/Handlers/getMagazineArchives.ashx?d=" + new Date().getTime(), {
            compid: companyID,
            live: "true",
            pageid: pageID
        }, function (data) {
            elem.innerHTML = data;
        });
    }
}

function getMagazineCategories(elem) {
    if (elem) {
        $.post("/Handlers/getMagazineCategories.ashx?d=" + new Date().getTime(), {
            compid: companyID,
            live: "true",
            pageid: pageID
        }, function (data) {
            elem.innerHTML = data;
        });
    }
}

function getMagazineArticles(type) {
    if (type == "articles") {
        showLoadingPanel();
    }
    $.post("/Handlers/getMagazineArticles.ashx?d=" + new Date().getTime(), {
        shopid: shopID,
        compid: companyID,
        type: type,
        catid: magCatID,
        arts: artsToShow,
        month: magMonth,
        year: magYear,
        page: pageIndex
    }, function (data) {
        if (type == "articles") {
            if (magArtsElem) {
                magArtsElem.innerHTML = data.split("^^")[0];
                if (data.split("^^")[0].indexOf("g-plusone") > -1) {
                    renderPlusOneWidget()
                }
                for (var i = 0; i < pagesWidgetArray.length; i++) {
                    pagesWidgetArray[i].innerHTML = data.split("^^")[1];
                }
                setMagazineOverflow();
                setTimeout("updateWidgetHeight('articles');", 1000);
            }
            hideLoadingPanel();
        }
        else {
            if (magFeatElem) {
                magFeatElem.innerHTML = data.split("^^")[0];
            }
        }
    });
}

function updateMagazineDate(month, year) {
    magMonth = month;
    magYear = year;
    getMagazineArticles("articles");
}

function setMagazineOverflow() {
    $('.magazineFeaturesContentPanel').dotdotdot();
    $('.magazineArticlesContentPanel').dotdotdot();
}

function renderPlusOneWidget() {
    gapi.plusone.go("content01");
}

function gotoArticle(url) {
    showLoadingPanel();
    window.location = url;
}

function updateMagazineCategory(id) {
    magCatID = id;
    getMagazineArticles("articles");
}

// #endregion

// #region Countdown Timer

var timerElement;
var timerTotalSecs = 0;

function updateTimerElements(elem) {
    var wid = 0;
    $(elem).find('.promoTimerElemenDigits').each(function () {
        if (this.offsetWidth > wid) {
            wid = this.offsetWidth;
        }
    });
    $(elem).find('.promoTimerElementText').each(function () {
        if (this.offsetWidth > wid) {
            wid = this.offsetWidth;
        }
    });
    $(elem).find('.promoTimerElement').each(function () {
        if (timerElement == null) {
            timerElement = this.parentNode;
        }
        this.style.width = wid + "px";
        var tag = "";
        var val = "";
        $(this).find('.promoTimerElementText').each(function () {
            this.style.width = "100%";
            tag = this.innerHTML;
        });
        $(this).find('.promoTimerElemenDigits').each(function () {
            this.style.width = "100%";
            val = this.innerHTML;
        });
        if (val != "00") {
            if (tag == "Days") {
                timerTotalSecs += (parseInt(val, 10) * 86400);
            }
            if (tag == "Hours") {
                timerTotalSecs += (parseInt(val, 10) * 3600);
            }
            if (tag == "Mins") {
                timerTotalSecs += (parseInt(val, 10) * 60);
            }
        }
        timerElement.style.visibility = "visible";
    });
    if (checkPromoTimerCookie(timerElement.id)) {
        var retTest = getPromoTimerCookie(timerElement.id);
        var testTime1 = (new Date().getTime() - parseInt(retTest, 10));
        var testTime2 = (timerTotalSecs * 1000);
        if (testTime1 < testTime2) {
            timerTotalSecs = Math.floor((testTime2 - testTime1) / 1000);
            if (timerTotalSecs > 0) {
                elem.style.height = "";
                startTimer();
            }
        }
    }
    else {
        setPromoTimerCookie(timerElement.id, getMyAttribute(elem.id, "exp"));
        if (timerTotalSecs > 0) {
            elem.style.height = "";
            startTimer();
        }
    }
}

function startTimer() {
    timerSecs = 59;
    updateTimer();
}

function tickTimer() {
    updateTimer();
}

function updateTimer() {
    timerTotalSecs--;
    if (timerTotalSecs > 0) {
        var timerSecs = timerTotalSecs;
        var timerDays = Math.floor(timerSecs / 86400);
        timerSecs -= timerDays * 86400;
        var timerHours = Math.floor(timerSecs / 3600);
        timerSecs -= timerHours * (3600);
        var timerMins = Math.floor(timerSecs / 60);
        timerSecs -= timerMins * (60);

        $(timerElement).find('.promoTimerElement').each(function () {
            var tag = "";
            $(this).find('.promoTimerElementText').each(function () {
                tag = this.innerHTML;
            });
            $(this).find('.promoTimerElemenDigits').each(function () {
                this.innerHTML;
                if (tag == "Days") {
                    this.innerHTML = timerLeadingZero(timerDays);
                }
                if (tag == "Hours") {
                    this.innerHTML = timerLeadingZero(timerHours);
                }
                if (tag == "Mins") {
                    this.innerHTML = timerLeadingZero(timerMins);
                }
                if (tag == "Secs") {
                    this.innerHTML = timerLeadingZero(timerSecs);
                }
            });

        });
        window.setTimeout("tickTimer()", 1000);
    }
    else {
        showPopupMessage("Timer Expired", "OK");
    }
}

function timerLeadingZero(val) {
    return (val < 10) ? "0" + val : +val;
}

function checkPromoTimerCookie(name) {
    var exists = false;
    var cArray = document.cookie.split(';');
    for (var i = 0; i < cArray.length; i++) {
        if (cArray[i].indexOf("promoTimer_" + name) > -1) {
            exists = true;
        }
    }
    return exists;
}

function getPromoTimerCookie(name) {
    var retVal = "";
    var cArray = document.cookie.split(';');
    for (var i = 0; i < cArray.length; i++) {
        if (cArray[i].indexOf("promoTimer_" + name) > -1) {
            retVal = cArray[i].substring(cArray[i].indexOf("=") + 1);
        }
    }
    return retVal;
}

function setPromoTimerCookie(name, dt) {
    var exdate;
    if (dt == "1") {
        exdate = new Date();
        exdate.setFullYear(exdate.getFullYear() + 1);
    }
    else {
        if (dt != "") {
            exdate = new Date(Date.parse(dt));
        }
        else {
            exdate = new Date();
            exdate.setDate(exdate.getDate() + 28);
        }
    }
    document.cookie = "promoTimer_" + name + "=" + new Date().getTime() + "; expires=" + exdate.toGMTString() + ";path=/;";
}

// #endregin

//#endregion

//#region Popup Images & Text

function showWidgetPopup(id, tag) {
    var elemToAnimate = document.getElementById(id);
    if (elemToAnimate) {
        if (elemToAnimate.style.visibility == "hidden") {
            var elemParent = elemToAnimate.parentNode;
            var paddingTop = 20;
            var paddingLeft = 10;
            var paddingBottom = 10;
            var paddingRight = 10;
            var itemToAnimate;
            var innerTextElem;
            if (tag == "txt") {
                itemToAnimate = document.getElementById(id + "Text");
                itemToAnimate.innerHTML = "<div class=\"widgetPopupWrapper\">" + $(elemParent).find('.textHiddenPanel')[0].innerHTML + "</div>";
                itemToAnimate.className = "widgetPopupText " + $(elemParent).find('.textHiddenPanel')[0].getAttribute("clsname");
                innerTextElem = $(itemToAnimate).find('.widgetPopupWrapper')[0];
            }
            else {
                itemToAnimate = elemToAnimate.getElementsByTagName("img")[0];
                try {
                    paddingTop = parseInt($(itemToAnimate).css('paddingTop').replace("px", ""), 10);
                }
                catch (e) { }
                try {
                    paddingLeft = parseInt($(itemToAnimate).css('paddingLeft').replace("px", ""), 10);
                }
                catch (e) { }
                try {
                    paddingBottom = parseInt($(itemToAnimate).css('paddingBottom').replace("px", ""), 10);
                }
                catch (e) { }
                try {
                    paddingRight = parseInt($(itemToAnimate).css('paddingRight').replace("px", ""), 10);
                }
                catch (e) { }
            }

            if (paddingTop > 0) {
                elemToAnimate.style.top = "-" + paddingTop + "px";
            }
            if (paddingLeft > 0) {
                elemToAnimate.style.left = "-" + paddingLeft + "px";
            }
            var offset = $(elemParent).offset();

            var targetWidth = parseInt(getMyAttribute(elemParent.id, 'popupW'), 10);
            var targetHeight = parseInt(getMyAttribute(elemParent.id, 'popupH'), 10);

            var targetLeft = ((targetWidth - elemParent.offsetWidth) / 2) + paddingLeft;
            var targetTop = ((targetHeight - elemParent.offsetHeight) / 2) + paddingTop;

            var overWidth = GetWidth() - ((offset.left - targetLeft) + (targetWidth + paddingLeft + paddingRight) + 5);
            var overHeight = GetHeight() - ((offset.top - targetTop) + (targetHeight + paddingTop + paddingBottom) + 5);
            if (overWidth < 0) {
                targetLeft += (overWidth * -1);
            }
            if (overHeight < 0) {
                targetTop += (overHeight * -1);
            }
            if (targetTop > offset.top) {
                targetTop = (offset.top - 5);
            }
            if (targetLeft > offset.left) {
                targetLeft = (offset.left - 5);
            }
            itemToAnimate.style.display = "block";
            elemToAnimate.style.visibility = "visible";

            targetTop -= $(document).scrollTop();

            $(elemToAnimate).animate({ top: "-" + targetTop + "px", left: "-" + targetLeft + "px", }, 250);
            $(itemToAnimate).animate({ width: targetWidth + "px", height: targetHeight + "px" }, 250, function () {
                if (tag == "txt") {
                    var overflow = innerTextElem.offsetHeight - targetHeight;
                    if (overflow > 0) {
                        var thisScrollClass = checkBackColour($(elemToAnimate).css("backgroundColor"));
                        elemToAnimate.className = elemToAnimate.className + " " + thisScrollClass;
                        $(itemToAnimate).mCustomScrollbar({ scrollButtons: { enable: true } });
                    }
                }
            });
        }
    }
}

function fixOnMouseOut3(elem, event, id) {
    var current_mouse_target = null;
    if (event.toElement) {
        current_mouse_target = event.toElement;
    } else if (event.relatedTarget) {
        current_mouse_target = event.relatedTarget;
    }
    if (!is_child_of(elem, current_mouse_target) && elem != current_mouse_target) {
        hideWidgetPopup(id);
    }
}

function hideWidgetPopup(id) {
    var elemToAnimate = document.getElementById(id);
    if (elemToAnimate) {
        var itemToAnimate = elemToAnimate.getElementsByTagName("img")[0];
        if (itemToAnimate == null) {
            itemToAnimate = document.getElementById(id + "Text");
        }
        var paddingTop = 0;
        try {
            paddingTop = $(itemToAnimate).css('paddingTop').replace("px", "");
        }
        catch (e) { }
        var paddingLeft = 0;
        try {
            addingLeft = $(itemToAnimate).css('paddingLeft').replace("px", "");
        }
        catch (e) { }
        $(elemToAnimate).animate({ top: "-" + paddingTop + "px", left: "-" + paddingLeft + "px", }, 250);
        $(itemToAnimate).animate({ width: elemToAnimate.parentNode.offsetWidth + "px", height: elemToAnimate.parentNode.offsetHeight + "px" }, 250, function () {
            elemToAnimate.style.visibility = "hidden";
            itemToAnimate.style.display = "none";
        });
    }
}

//#endregion

function switchBodyImage(elem, state) {
    if (state == "on") {
        var burl = getMyAttribute(elem.id, 'bdyimg');
        if (burl != "") {
            document.body.style.backgroundImage = "url('" + burl + "')";
        }
    }
    else {
        document.body.style.backgroundImage = bdyImg;
    }
}

//#region Image Zoom

var canZoom = false;

function showImageZoom(elem, prdID) {
    if (canZoom) {
        if (document.getElementById('zoomResultPanel_' + prdID)) {
            document.getElementById('zoomResultPanel_' + prdID).style.visibility = "visible";
        }
        if (document.getElementById('zoomToolPanel_' + prdID)) {
            document.getElementById('zoomToolPanel_' + prdID).style.visibility = "visible";
        }
    }
}

function fixOnMouseOut4(elem, event, prdID) {
    var current_mouse_target = null;
    if (event.toElement) {
        current_mouse_target = event.toElement;
    } else if (event.relatedTarget) {
        current_mouse_target = event.relatedTarget;
    }
    if (!is_child_of(elem, current_mouse_target) && elem != current_mouse_target) {
        hideImageZoom(elem, prdID);
    }
}

function hideImageZoom(elem, prdID) {
    if (document.getElementById('zoomToolPanel_' + prdID)) {
        document.getElementById('zoomResultPanel_' + prdID).style.visibility = "hidden";
        document.getElementById('zoomToolPanel_' + prdID).style.visibility = "hidden";
    }
}

function updateImageZoom(e, prdID) {
    if (document.getElementById('zoomToolPanel_' + prdID)) {
        if (document.getElementById('zoomToolPanel_' + prdID)) {
            var mainImage = document.getElementById('mainEcomImage_' + prdID);
            var thisProduct = currProduct;
            if (thisProduct.productID != prdID) {
                for (var i = 0; i < products.length; i++) {
                    if (products[i].productID == prdID) {
                        thisProduct = products[i];
                    }
                }
            }
            var newLeft = e.pageX - ((thisProduct.zoomLeftLimit + thisProduct.zoomToolOffsetLeft) - thisProduct.zoomMarginLeft);
            var newTop = e.pageY - ((thisProduct.zoomTopLimit + thisProduct.zoomToolOffsetTop) - thisProduct.zoomMarginTop);
            if (newLeft < thisProduct.zoomMarginLeft) {
                newLeft = thisProduct.zoomMarginLeft;
            }
            if (newLeft > ((mainImage.offsetWidth - document.getElementById('zoomToolPanel_' + prdID).offsetWidth) + thisProduct.zoomMarginLeft)) {
                newLeft = ((mainImage.offsetWidth - document.getElementById('zoomToolPanel_' + prdID).offsetWidth) + thisProduct.zoomMarginLeft);
            }
            if (newTop < thisProduct.zoomMarginTop) {
                newTop = thisProduct.zoomMarginTop;
            }
            if (newTop > ((mainImage.offsetHeight - document.getElementById('zoomToolPanel_' + prdID).offsetHeight) + thisProduct.zoomMarginTop)) {
                newTop = ((mainImage.offsetHeight - document.getElementById('zoomToolPanel_' + prdID).offsetHeight) + thisProduct.zoomMarginTop);
            }

            document.getElementById('zoomToolPanel_' + prdID).style.left = newLeft + "px";
            document.getElementById('zoomToolPanel_' + prdID).style.top = newTop + "px";

            if (document.getElementById('zoomToolImage_' + prdID)) {
                var zoomLeft = Math.round((newLeft - thisProduct.zoomMarginLeft) / thisProduct.zoomRatio);
                var zoomTop = Math.round((newTop - thisProduct.zoomMarginTop) / thisProduct.zoomRatio);
                document.getElementById('zoomToolImage_' + prdID).style.left = "-" + zoomLeft + "px";
                document.getElementById('zoomToolImage_' + prdID).style.top = "-" + zoomTop + "px";

                //document.getElementById('zoomToolPanel_' + prdID).innerHTML = newLeft + "<br>" + newTop + "<br><br>" + zoomTopLimit + "<br>" + zoomLeftLimit + "<br>" + zoomToolOffsetTop + "<br>" + zoomToolOffsetLeft
            }
        }
    }
}

//#endregion

//#region Uploads

//#region Ecom Upload Functions

function fileUploaded(id) {
    window.location = "\home.html";
}

function fileDownloaded() {
    window.location = "\home.html";
}

//#endregion

function attachTooBig() {
    showPopupMessage("The file you are trying to upload is too big, max = 20Mb<br>Try Compressing your file using a Zip tool like WinRar", "OK");
}

function attachWrongFileType() {
    showPopupMessage("The file you are trying to upload is not permitted for this type of upload!", "OK");
}

function isAnimated() {
    showPopupMessage("The file you are trying to upload appears to be animated<br>We cannot currently work with animated Gifs!", "OK");
}

//#endregion

//#region Search

var searchTimer;
var searchElem = "";

function setSearchTimer(elem) {
    var stext = elem.value;
    if (stext.length > 2) {
        searchElem = elem;
        clearTimeout(searchTimer);
        searchTimer = setTimeout('doSearch();', 1000);
    }
    else {
        clearTimeout(searchTimer);
        $(document).find('.ecomSearchResultPanel').each(function () {
            this.style.visibility = "hidden";
        });
    }
}

function doSearch() {
    $.post("/Handlers/doSearch.ashx?d=" + new Date().getTime(), {
        text: searchElem.value,
        siteid: siteID,
        compid: companyID,
        shopid: shopID,
        advnav: isAdvNav
    }, function (data) {
        var main = "";
        var inner = "";
        var outer = "";
        if (isMobileV2) {
            main = document.getElementById("SearchResults");
            inner = document.getElementById("SearchResultsInner");
            outer = document.getElementById("SearchResultsOuter");
        }
        else {
            main = document.getElementById(searchElem.parentNode.id + "SearchResults");
            inner = document.getElementById(searchElem.parentNode.id + "SearchResultsInner");
            outer = document.getElementById(searchElem.parentNode.id + "SearchResultsOuter");
        }
        if (data.indexOf("Temporary Problem") > -1) {
            data = "<div class=\"ecomSearchResultItem\">No Items Found</div>";
        }
        inner.innerHTML = data;
        var offset = $(searchElem).offset();
        var testSpace = (GetHeight() - (offset.top + searchElem.offsetHeight)) - 20;
        main.style.width = "2000px";
        var fwidth = 0;
        $(inner).find('.ecomSearchResultItem').each(function () {
            if (this.offsetWidth > fwidth) {
                fwidth = this.offsetWidth;
            }
        });
        $(inner).find('.ecomSearchResultItem').each(function () {
            this.style.width = fwidth + "px";
        });
        if (inner.offsetHeight > testSpace) {
            outer.style.height = testSpace + "px";
            main.style.width = (fwidth + 18) + "px";
        }
        else {
            outer.style.height = "";
            main.style.width = (fwidth + 2) + "px";
        }

        var searchWidgt = searchElem.parentNode;
        var pos = getMyAttribute(searchWidgt.id, "orient");
        if (pos == "auto") {
            if (main.offsetWidth > (980 - searchWidgt.offsetLeft)) {
                main.style.left = "-" + (main.offsetWidth - (980 - searchWidgt.offsetLeft)) + "px";
            }
            else {
                main.style.left = "0px";
            }
            main.style.top = searchWidgt.offsetHeight + "px";
        }

        $(outer).mCustomScrollbar("update");
        main.style.visibility = "visible";
    });
}

function forceSearch(e) {
    var keycode;
    if (window.event) keycode = window.event.keyCode;
    else if (e) keycode = e.which;
    if (keycode == 13) {
        clearTimeout(searchTimer);
        doSearch();
    }
}

//#endregion

//#region modalPanel2 functions 

function ShowModal2() {
    modalPanel2.style.visibility = "visible";
}

function setEditPanel2Position() {
    editPanel2Wrapper.style.marginLeft = "-" + (editPanel2Inner.offsetWidth / 2) + "px";
    editPanel2Wrapper.style.marginTop = "-" + (editPanel2Inner.offsetHeight / 2) + "px";
    editPanel2Wrapper.style.width = editPanel2Inner.offsetWidth + "px";
    $(editPanel2Wrapper).animate({ height: editPanel2Inner.offsetHeight + "px" }, 250,
    function () {
        editPanel2Wrapper.style.overflow = "visible";
    });
}

function updateEditPanel2Position() {
    editPanel2Wrapper.style.marginLeft = "-" + (editPanel2Inner.offsetWidth / 2) + "px";
    editPanel2Wrapper.style.marginTop = "-" + (editPanel2Inner.offsetHeight / 2) + "px";
}

function HideModal2() {
    editPanel2Inner.innerHTML = "";
    editPanel2Inner.style.width = "";
    editPanel2Inner.style.height = "";
    editPanel2Wrapper.style.overflow = "hidden";
    $(editPanel2Wrapper).animate({ height: "0px" }, 250,
    function () {
        modalPanel2.style.visibility = "hidden";
    });
}

//#endregion 

//#region modalPanel3 functions 

function ShowModal3() {
    modalPanel3.style.visibility = "visible";
}

function setEditPanel3Position() {
    editPanel3Wrapper.style.marginLeft = "-" + (editPanel3Inner.offsetWidth / 2) + "px";
    editPanel3Wrapper.style.marginTop = "-" + (editPanel3Inner.offsetHeight / 2) + "px";
    editPanel3Wrapper.style.width = editPanel3Inner.offsetWidth + "px";
    $(editPanel3Wrapper).animate({ height: editPanel3Inner.offsetHeight + "px" }, 350,
    function () {
        editPanel3Wrapper.style.overflow = "visible";
    });
}

function HideModal3() {
    editPanel3Inner.innerHTML = "";
    editPanel3Inner.style.width = "";
    editPanel3Inner.style.height = "";
    editPanel3Wrapper.style.overflow = "hidden";
    $(editPanel3Wrapper).animate({ height: "0px" }, 350,
    function () {
        modalPanel3.style.visibility = "hidden";
    });
}

//#endregion 

//#region image viewer functions 

var galleryImages = new Array();
var thumbHider;
var mouseOverThumbs = false;
var mouseOverNext = false;
var mouseOverPrev = false;
var mouseMoving = false;
var mouseMoveTimer;
var currImageIndex = 0;
var imageViewerPadding = 0;
var currImagePanel = "1";
var nextImagePanel = "2";

function showImageViewer(id) {
    if (imageViewerModal) {
        imageViewerModal.style.display = "inline";
        var bColour = getMyAttribute(id, 'color');
        if (bColour != "") {
            document.getElementById('imageViewerInner1').style.backgroundColor = bColour;
            document.getElementById('imageViewerInner2').style.backgroundColor = bColour;
        }
        var test = $('#imageViewerInner1').css("padding-top").replace("px", "");
        imageViewerPadding = parseInt(test, 10) * 2;
        
        $('#imageViewerInner1').css("padding-top", "0px");
        $('#imageViewerInner1').css("padding-right", "0px");
        $('#imageViewerInner1').css("padding-bottom", "0px");
        $('#imageViewerInner1').css("padding-left", "0px");
        document.getElementById('imageViewerMainImage1').style.margin = test + "px;";

        $('#imageViewerInner2').css("padding-top", "0px");
        $('#imageViewerInner2').css("padding-right", "0px");
        $('#imageViewerInner2').css("padding-bottom", "0px");
        $('#imageViewerInner2').css("padding-left", "0px");
        document.getElementById('imageViewerMainImage2').style.margin = test + "px;";

        thumbHider = document.getElementById('imageViewerThumbnailsHider');

        if (getMyAttribute(id, 'hthumb') != "1") {
            if (!isMobileV2) {
                var thumbs = "";
                for (var i = 0; i < galleryImages.length; i++) {
                    thumbs += "<img class=\"imageViewerThumbnail\" alt=\"" + galleryImages[i].alt + "\" src=\"" + galleryImages[i].thumbUrl + "\" width=\"120\" height=\"120\" onclick=\"showClickedImage(" + i + ");\" />";
                }
                document.getElementById('imageViewerThumbnailsInner').innerHTML = thumbs;
                if (isTouchScreen) {
                    if (thumbHider) {
                        thumbHider.style.visibility = "hidden";
                    }
                }
            }
        }
        if (getMyAttribute(id, 'htext') == "1") {
            document.getElementById('imageViewerText1').style.display = "none";
            document.getElementById('imageViewerText2').style.display = "none";
        }
        if (getMyAttribute(id, 'hdesc') == "1") {
            document.getElementById('imageViewerTitle1').style.display = "none";
            document.getElementById('imageViewerTitle2').style.display = "none";
        }
        currImagePanel = "2";
        nextImagePanel = "1";

        setImageViewerPosition();
        imageViewerModal.style.visibility = "visible";
    }
}

function showClickedImage(index) {
    if (index != currImageIndex) {
        currImageIndex = index;
        if (currImagePanel == "1") {
            nextImagePanel = "2";
            setImageViewerPosition();
        }
        else {
            nextImagePanel = "1";
            setImageViewerPosition();
        }
    }
}

function setImageViewerPosition() {
    $('#imageViewerMainWrapper').fadeOut(250, function () {
        showLoadingPanel();
        document.getElementById('imageViewerWrapper' + currImagePanel).style.marginLeft = "-10000px";
        document.getElementById('imageViewerWrapper' + currImagePanel).style.position = "absolute";
        document.getElementById('imageViewerMainImage' + currImagePanel).src = "";

        thumbHider.style.height = (GetHeight() - 50) + "px";
        document.getElementById('imageViewerThumbnailsWrapper').style.maxHeight = thumbHider.style.height
        var avilableHeight = GetHeight() - 30;
        var avilableWidth = GetWidth() - 80;
        var imWidth = galleryImages[currImageIndex].width;
        var imHeight = galleryImages[currImageIndex].height;

        document.getElementById('imageViewerTitle' + nextImagePanel).innerHTML = galleryImages[currImageIndex].name;
        document.getElementById('imageViewerText' + nextImagePanel).innerHTML = galleryImages[currImageIndex].description;

        var textHeight = document.getElementById('imageViewerTextContainer' + nextImagePanel).offsetHeight;

        var imageRatio = 1.0;
        var testHeight = avilableHeight - textHeight - imageViewerPadding;
        if (imHeight > testHeight) {
            imageRatio = testHeight / imHeight;
            imHeight = testHeight;
            imWidth = Math.round(imWidth * imageRatio);
        }
        var testWidth = avilableWidth - imageViewerPadding;
        if (imWidth > testWidth) {
            imageRatio = testWidth / imWidth;
            imWidth = testWidth;
            imHeight = Math.round(imHeight * imageRatio);
        }
        document.getElementById('imageViewerMainImage' + nextImagePanel).style.height = imHeight + "px";
        document.getElementById('imageViewerMainImage' + nextImagePanel).style.width = imWidth + "px";
        var imageContainerHeight = imHeight + imageViewerPadding;
        var imageContainerWidth = imWidth + imageViewerPadding;
        if (imWidth < 200) {
            imageContainerWidth = 200;
            document.getElementById('imageViewerMainImage' + nextImagePanel).style.left = ((200 - imWidth) / 2) + "px";
        }
        document.getElementById('imageViewerMainImageContainer' + nextImagePanel).style.width = imageContainerWidth + "px";
        document.getElementById('imageViewerMainImageContainer' + nextImagePanel).style.height = imageContainerHeight + "px";
        document.getElementById('imageViewerInner' + nextImagePanel).style.width = document.getElementById('imageViewerMainImageContainer' + nextImagePanel).style.width;

        imageRatio = 1.0;
        if (imHeight > testHeight) {
            imageRatio = testHeight / imHeight;
            imHeight = testHeight;
            imWidth = Math.round(imWidth * imageRatio);
        }
        document.getElementById('imageViewerMainImage' + nextImagePanel).style.height = imHeight + "px";
        document.getElementById('imageViewerMainImage' + nextImagePanel).style.width = imWidth + "px";
        imageContainerHeight = imHeight + imageViewerPadding;
        imageContainerWidth = imWidth + imageViewerPadding;
        if (imWidth < 200) {
            imageContainerWidth = 200;
            document.getElementById('imageViewerMainImage' + nextImagePanel).style.left = ((200 - imWidth) / 2) + "px";
        }
        document.getElementById('imageViewerMainImageContainer' + nextImagePanel).style.width = imageContainerWidth + "px";
        document.getElementById('imageViewerMainImageContainer' + nextImagePanel).style.height = imageContainerHeight + "px";
        document.getElementById('imageViewerInner' + nextImagePanel).style.width = document.getElementById('imageViewerMainImageContainer' + nextImagePanel).style.width;

        document.getElementById('imageViewerMainImage' + nextImagePanel).alt = galleryImages[currImageIndex].alt;
        document.getElementById('imageViewerMainImage' + nextImagePanel).src = galleryImages[currImageIndex].mainUrl;
        
        mouseOverThumbs = false;
        mouseMoveTimer = setTimeout("hideImageViewerElements();", 2000);
    });
}

function showImageViewerImage() {
    document.getElementById('imageViewerCloseButton').style.display = "none";
    document.getElementById('imageViewerWrapper' + nextImagePanel).style.visibility = "hidden";
    document.getElementById('imageViewerMainWrapper').style.display = "inline";
    document.getElementById('imageViewerWrapper' + nextImagePanel).style.position = "relative";

    document.getElementById('imageViewerInner' + nextImagePanel).style.width = document.getElementById('imageViewerMainImageContainer' + nextImagePanel).style.width;
    document.getElementById('imageViewerTextContainer' + nextImagePanel).style.width = document.getElementById('imageViewerMainImageContainer' + nextImagePanel).style.width;

    document.getElementById('imageViewerMainWrapper').style.marginLeft = "-" + (document.getElementById('imageViewerInner' + nextImagePanel).offsetWidth / 2) + "px";
    document.getElementById('imageViewerMainWrapper').style.marginTop = "-" + (document.getElementById('imageViewerInner' + nextImagePanel).offsetHeight / 2) + "px";

    document.getElementById('imageViewerMainWrapper').style.display = "none";
    document.getElementById('imageViewerWrapper' + nextImagePanel).style.visibility = "visible";
    document.getElementById('imageViewerWrapper' + nextImagePanel).style.marginLeft = "0px";

    hideLoadingPanel();
    $('#imageViewerMainWrapper').fadeIn(250, function () {
        setImageViewerButtonsVisible();
        document.getElementById('imageViewerCloseButton').style.display = "inline";
    });
    currImagePanel = nextImagePanel;
    showImageViewerElements();
}

function nextImageViewerImage() {
    if (currImageIndex < (galleryImages.length - 1)) {
        currImageIndex++;
        if (currImagePanel == "1") {
            nextImagePanel = "2";
            setImageViewerPosition();
        }
        else {
            nextImagePanel = "1";
            setImageViewerPosition();
        }
    }
}

function prevImageViewerImage() {
    if (currImageIndex > 0) {
        currImageIndex--;
        if (currImagePanel == "1") {
            nextImagePanel = "2";
            setImageViewerPosition();
        }
        else {
            nextImagePanel = "1";
            setImageViewerPosition();
        }
    }
}

function setImageViewerButtonsVisible() {
    if (currImageIndex > 0) {
        document.getElementById('imageViewerPrevButton').style.display = "inline";
    }
    else {
        document.getElementById('imageViewerPrevButton').style.display = "none";
    }
    if (currImageIndex < (galleryImages.length - 1)) {
        document.getElementById('imageViewerNextButton').style.display = "inline";
    }
    else {
        document.getElementById('imageViewerNextButton').style.display = "none";
    }
}

function setMouseMove() {
    clearTimeout(mouseMoveTimer);
    if (!mouseOverNext && !mouseOverPrev && !mouseOverThumbs) {
        showImageViewerElements();
    }
    mouseMoveTimer = setTimeout("hideImageViewerElements();", 1000);
}

function showImageViewerElements() {
    if (document.getElementById('imageViewerWrapper1').style.marginLeft == "0px" || document.getElementById('imageViewerWrapper2').style.marginLeft == "0px") {
        if (document.getElementById('imageViewerNextButton')) {
            document.getElementById('imageViewerNextButton').style.visibility = "visible";
        }
        if (document.getElementById('imageViewerPrevButton')) {
            document.getElementById('imageViewerPrevButton').style.visibility = "visible";
        }
        if (!mouseOverThumbs) {
            if (thumbHider) {
                thumbHider.style.visibility = "visible";
            }
        }
    }
}

function hideImageViewerElements() {
    if (isTouchScreen == false) {
        if (!mouseOverNext) {
            if (document.getElementById('imageViewerNextButton')) {
                document.getElementById('imageViewerNextButton').style.visibility = "hidden";
            }
        }
        if (!mouseOverPrev) {
            if (document.getElementById('imageViewerPrevButton')) {
                document.getElementById('imageViewerPrevButton').style.visibility = "hidden";
            }
        }
        if (!mouseOverThumbs) {
            if (thumbHider) {
                thumbHider.style.visibility = "hidden";
            }
        }
    }
}

function setMouseOverElementOver(tag) {
    if (tag == "next") {
        mouseOverNext = true;
    }
    else if (tag == "prev") {
        mouseOverPrev = true;
    }
    else {
        mouseOverThumbs = true;
    }
}

function setMouseOverElementOut(tag) {
    if (tag == "next") {
        mouseOverNext = false;
    }
    else if (tag == "prev") {
        mouseOverPrev = false;
    }
    else {
        mouseOverThumbs = false;
    }
}

function hideImageViewer() {
    imageViewerModal.style.visibility = "hidden";
    imageViewerModal.style.display = "none";
    document.getElementById('imageViewerWrapper1').style.marginLeft = "-10000px";
    document.getElementById('imageViewerWrapper2').style.marginLeft = "-10000px";
    document.getElementById('imageViewerMainImage1').src = "";
    document.getElementById('imageViewerMainImage2').src = "";
}

function showViewer(index, galID, id) {
    var urls = "";
    showLoadingPanel();
    if (galID == "0") {
        if (getMyAttribute(id, "urls") != "") {
            urls = getMyAttribute(id, "urls");
        }
        else {
            urls = getMyAttribute(id, "ids");
        }
    }
    $.ajax({
        dataType: "json",
        url: "/Handlers/getGalleryImages.ashx?d=" + new Date().getTime(),
        type: "POST",
        data: "compid=" + companyID + "&galID=" + galID + "&urls=" + urls
    }).done(function (images) {
        galleryImages = images;
        currImageIndex = index;
        hideLoadingPanel();
        showImageViewer(id);
    });
}

function showEcomImages(index, prdID) {
    var thisProduct = currProduct;
    if (thisProduct.productID != prdID) {
        for (var i = 0; i < products.length; i++) {
            if (products[i].productID == prdID) {
                thisProduct = products[i];
            }
        }
    }
    if (thisProduct.currentVariation.variationID > 0) {
        showLoadingPanel();
        $.ajax({
            dataType: "json",
            url: "/Handlers/getEcomImages.ashx?d=" + new Date().getTime(),
            type: "POST",
            data: "shopID=" + shopID + "&varID=" + thisProduct.currentVariation.variationID
        }).done(function (images) {
            galleryImages = images;
            currImageIndex = index;
            hideLoadingPanel();
            showImageViewer();
        });
    }
}

function fixOnMouseOut(elem, event) {
    var current_mouse_target = null;
    if (event.toElement) {
        current_mouse_target = event.toElement;
    } else if (event.relatedTarget) {
        current_mouse_target = event.relatedTarget;
    }
    if (!is_child_of(elem, current_mouse_target) && elem != current_mouse_target) {
        setMouseOverElementOut('thmb');
    }
}

function is_child_of(parent, child) {
    if (child != null) {
        while (child.parentNode) {
            if ((child = child.parentNode) == parent) {
                return true;
            }
        }
    }
    return false;
}

function showLabel(elem, onOff) {
    if (elem.lastChild.className) {
        if (elem.lastChild.className == "galleryImageViewLabel") {
            if (onOff == "on") {
                elem.lastChild.style.display = "inline";
            }
            else {
                elem.lastChild.style.display = "none";
            }
        }
    }
}

//#endregion 

//#region General

function setButtonImage(elem, tag) {
    if (elem.getAttribute("im1")) {
        if (tag == "on") {
            if (elem.getAttribute("im2")) {
                elem.style.backgroundImage = "url(" + elem.getAttribute("im2") + ")";
            }
        }
        else {
            elem.style.backgroundImage = "url(" + elem.getAttribute("im1") + ")";
        }
    }
}

function checkScrollColour(hexcolor) {
    if (hexcolor) {
        hexcolor = hexcolor.replace("#", "");
        var r, g, b;
        if (hexcolor.indexOf("rgb") == 0) {
            hexcolor = hexcolor.replace("rgb(", "").replace(")", "").replace(/ /gi, "");
            r = parseInt(hexcolor.split(',')[0], 10);
            g = parseInt(hexcolor.split(',')[1], 10);
            b = parseInt(hexcolor.split(',')[2], 10);
        }
        else {
            r = parseInt(hexcolor.substr(0, 2), 16);
            g = parseInt(hexcolor.substr(2, 2), 16);
            b = parseInt(hexcolor.substr(4, 2), 16);
        }
        var yiq = ((r * 299) + (g * 587) + (b * 114)) / 1000;
        if (yiq >= 128) {
            return 'lightScroll';
        }
        else {
            return 'darkScroll';
        }
    }
    else {
        return 'darkScroll';
    }
}

function checkBackColour(hexcolor) {
    if (hexcolor) {
        hexcolor = hexcolor.replace("#", "");
        var r, g, b;
        if (hexcolor.indexOf("rgb") == 0) {
            hexcolor = hexcolor.replace("rgb(", "").replace(")", "").replace(/ /gi, "");
            r = parseInt(hexcolor.split(',')[0], 10);
            g = parseInt(hexcolor.split(',')[1], 10);
            b = parseInt(hexcolor.split(',')[2], 10);
        }
        else {
            r = parseInt(hexcolor.substr(0, 2), 16);
            g = parseInt(hexcolor.substr(2, 2), 16);
            b = parseInt(hexcolor.substr(4, 2), 16);
        }
        var yiq = ((r * 299) + (g * 587) + (b * 114)) / 1000;
        if (yiq >= 128) {
            return 'darkScroll';
        }
        else {
            return 'lightScroll';
        }
    }
    else {
        return 'darkScroll';
    }
}

function GetHeight() {
    var y = 0;
    if (self.innerHeight) {
        y = self.innerHeight;
    }
    else if (document.documentElement && document.documentElement.clientHeight) {
        y = document.documentElement.clientHeight;
    }
    else if (document.body) {
        y = document.body.clientHeight;
    }
    return y;
}

function GetWidth() {
    var x = 0;
    if (self.clientWidth) {
        x = self.clientWidth;
    }
    else if (document.documentElement && document.documentElement.clientWidth) {
        x = document.documentElement.clientWidth;
    }
    else if (document.body) {
        x = document.body.clientWidth;
    }
    return x;
}

function getBackgroundColour() {
    var fontColor;
    var Color = $(currentlyEditing).css("backgroundColor");
    if (Color == null) {
        Color = "transparent";
    }
    if (Color == "transparent") {
        Color = $('#container').css("backgroundColor");
    }
    if (Color == null) {
        Color = "transparent";
    }
    if (Color == "transparent") {
        Color = $('#body1').css("backgroundColor");
    }
    if (Color == null) {
        Color = "transparent";
    }
    if (Color == "transparent") {
        Color = "#ffffff";
    }
    if (Color == null) {
        Color = "#ffffff";
    }
    $('.formLabel').each(function () {
        fontColor = $(this).css("color");
    });
    if (fontColor) {
        Color = "#" + getContrast(fontColor.replace("#", ""));
    }
    return Color;
}

function getContrast(hexcolor) {
    var r, g, b;
    if (hexcolor.indexOf("rgb") == 0) {
        r = parseInt(hexcolor.substr(4, 3), 10);
        g = parseInt(hexcolor.substr(9, 3), 10);
        b = parseInt(hexcolor.substr(14, 3), 10);
    }
    else {
        r = parseInt(hexcolor.substr(0, 2), 16);
        g = parseInt(hexcolor.substr(2, 2), 16);
        b = parseInt(hexcolor.substr(4, 2), 16);
    }
    var yiq = ((r * 299) + (g * 587) + (b * 114)) / 1000;
    return (yiq >= 128) ? '000000' : 'ffffff';
}

function componentToHex(c) {
    var hex = c.toString(16);
    return hex.length == 1 ? "0" + hex : hex;
}

function rgbToHex(rgbColour) {
    var r, g, b;
    if (rgbColour.indexOf("rgb") == 0) {
        rgbColour = rgbColour.replace("rgb(", "").replace(")", "");
    }
    r = parseInt(rgbColour.split(',')[0], 16);
    g = parseInt(rgbColour.split(',')[1], 16);
    b = parseInt(rgbColour.split(',')[2], 16);
    return "#" + componentToHex(r) + componentToHex(g) + componentToHex(b);
}

function setTextField(elem, text) {
    var testVal = elem.value;
    if (testVal == "") {
        elem.value = text;
    }
    else if (testVal == text) {
        elem.value = "";
    }
}

function checkForValidNumber(elem) {
    elem.value = elem.value.replace(/[^0-9]/gi, '');
    return elem.value;
}

function validateEmail(text) {
    text = text.toLowerCase();
    if (text.indexOf("@") > 0 && text.indexOf(".") > 0) {
        return true;
    }
    else {
        showPopupMessage("The email address you entered is not valid", "OK");
        return false;
    }
}

function checkNumbers(text) {
    var ValidChars = "0123456789";
    var valid = true;
    var Char;
    for (var i14 = 0; i14 < text.length && valid == true; i14++) {
        Char = text.charAt(i14);
        if (ValidChars.indexOf(Char) == -1) {
            valid = false;
        }
    }
    return valid;
}

function isFloat(floatText) {
    var ValidChars = "0123456789.";
    var IsFloat = true;
    var Char;
    for (i = 0; i < floatText.length && IsFloat == true; i++) {
        Char = floatText.charAt(i);
        if (ValidChars.indexOf(Char) == -1) {
            IsFloat = false;
        }
    }
    return IsFloat;
}

function getFullWidth(elem) {
    var test = elem.offsetWidth;
    try {
        test += parseInt($(elem).css("paddingLeft").replace("px", ""), 10);
        test += parseInt($(elem).css("paddingRight").replace("px", ""), 10);
        test += parseInt($(elem).css("marginLeft").replace("px", ""), 10);
        test += parseInt($(elem).css("marginRight").replace("px", ""), 10);
        test += parseInt($(elem).css("borderLeftWidth").replace("px", ""), 10);
        test += parseInt($(elem).css("borderRightWidth").replace("px", ""), 10);
    }
    catch (e) { }
    if (isNaN(test)) {
        test = elem.offsetWidth;
    }
    return test
}

function getFullHeight(elem) {
    var test = elem.offsetHeight;
    try {
        test += parseInt($(elem).css("padding-top").replace("px", ""), 10);
        test += parseInt($(elem).css("padding-bottom").replace("px", ""), 10);
        test += parseInt($(elem).css("margin-top").replace("px", ""), 10);
        test += parseInt($(elem).css("margin-bottom").replace("px", ""), 10);
        test += parseInt($(elem).css("border-top-width").replace("px", ""), 10);
        test += parseInt($(elem).css("border-bottom-width").replace("px", ""), 10);
    }
    catch (e) { }
    if (isNaN(test)) {
        test = elem.offsetHeight;
    }
    return test
}

function isChild(parent, child) {
    if (child != null) {
        while (child.parentNode) {
            if ((child = child.parentNode) == parent) {
                return true;
            }
        }
    }
    return false;
}

function getDropDowSelectedIndex(elem) {
    var ind = 0;
    if (elem.selectedIndex) {
        ind = elem.selectedIndex;
    }
    else if ($(elem).attr("selectedIndex")) {
        ind = $(elem).attr("selectedIndex");
    }
    return ind;
}

function scrollTo(top, left) {
    $('html, body').animate({ scrollTop: top, scrollLeft: left }, 250);
}

//#endregion

//#region Loading Panel functions 

function showLoadingPanel() {
    document.getElementById('loadingPanel').style.marginTop = ((GetHeight() / 2) - 65) + "px";
    document.getElementById('loadingModalPanel').style.visibility = "visible";
}

function hideLoadingPanel() {
    document.getElementById('loadingModalPanel').style.visibility = "hidden";
}

//#endregion 

function updateWidgetHeight(elem, tag) {
    var minHeight = 0;
    var requiredHeight = -1;

    if (elem == "multiPack") {
        requiredHeight = 1;
    }
    else if (elem == "frame") {
        elem = document.getElementsByTagName("iframe")[0].parentNode;
        requiredHeight = tag;
    }
    else if (elem == 'article') {
        elem = articleContElem;
        $(elem).find('.articleContentPanel').each(function () {
            requiredHeight = this.offsetHeight;
            return false;
        });
    }
    else if (elem == 'articles') {
        elem = magArtsElem;
        $(elem).find('.ecomProductsInner').each(function () {
            requiredHeight = this.offsetHeight;
            return false;
        });
    }
    else if (elem == 'selects') {
        elem = document.getElementById('ecomProductOptionsSelectPanel_' + currProduct.productID);
        $(elem).find('.ecomProductDetailsItem').each(function () {
            requiredHeight = this.offsetHeight;
            return false;
        });
    }
    else if (elem == 'advnavimage') {
        elem = advNavImgPanel;
    }
    else if (elem == 'advnavtitle') {
        elem = advNavTitlePanel;
        $(elem).find('.innerTextElement').each(function () {
            requiredHeight = this.offsetHeight;
            return false;
        });
    }
    else if (elem == 'advnavdesc') {
        elem = advNavDescPanel;
        $(elem).find('.innerTextElement').each(function () {
            requiredHeight = this.offsetHeight;
            return false;
        });
    }
    else if (elem == 'products') {
        elem = ecomProductsPanel;
        if (ecomFilterPanel) {
            minHeight = ecomFilterPanel.offsetHeight;
        }
        $(elem).find('.ecomProductsInner').each(function () {
            requiredHeight = this.offsetHeight;
            return false;
        });
    }
    else if (elem == 'elem') {
        if (tag == "1") {
            elem = elemToResize;
        }
        else {
            elem = elemToResize2;
        }
        if (getMyAttribute(elem.id, "autogrow") == "1") {
            $(elem).find('.innerFloat').each(function () {
                requiredHeight = this.offsetHeight;
                return false;
            });
        }
    }
    if (requiredHeight > -1) {
        var currPageHeight = document.getElementById('content01').offsetHeight;
        var newPageHeight = 0;
        document.getElementById('content01').style.height = "";
        divsMoved = new Array();
        // get the current bottom of the widget
        var oldElemBottom = 0;
        if (elem == "multiPack") {
            oldElemBottom = mpStart;
        }
        else {
            oldElemBottom = elem.offsetHeight + elem.offsetTop;

            // set the height of the widget based on the new content size
            if (elem.offsetHeight != requiredHeight) {
                elem.style.height = requiredHeight + "px";
            }
            if (minHeight > 0 && minHeight > requiredHeight) {
                elem.style.height = minHeight + "px";
            }
        }
        // get the difference by which it has grown or shrunk
        var heightDiff = 0;
        if (elem == "multiPack") {
            heightDiff = mpStop * -1;
        }
        else {
            // get the new bottom of the widget
            var newElemBottom = elem.offsetHeight + elem.offsetTop;
            heightDiff = oldElemBottom - newElemBottom;
        }
        if (heightDiff != 0) {
            var divs = document.getElementById('content01').childNodes;
            for (var i = 0; i < divs.length; i++) {
                if (divs[i] != elem) {
                    var tid = divs[i].id;
                    if (tid.indexOf("dragMe") == 0 || tid.indexOf("moveIt") == 0) {
                        if (divs[i].offsetTop > oldElemBottom) {
                            divsMoved.push(divs[i]);
                            divs[i].style.top = (divs[i].offsetTop - heightDiff) + "px";
                        }
                        else if (heightDiff < 0) {
                            if (divs[i].offsetTop > oldElemBottom) {
                                divsMoved.push(divs[i]);
                                divs[i].style.top = (divs[i].offsetTop + (heightDiff * -1)) + "px";
                            }
                        }
                    }
                }
            }
            for (var j = 0; j < divs.length; j++) {
                if (divs[i] != elem) {
                    if ((divs[j].offsetTop + divs[j].offsetHeight) > newPageHeight) {
                        newPageHeight = divs[j].offsetTop + divs[j].offsetHeight;
                    }
                }
            }
        }
        else {
            newPageHeight = currPageHeight;
        }
        document.getElementById('content01').style.height = (newPageHeight + 20) + "px";

        if (elem == "multiPack") {
            updateBundleDescriptionHeight();
        }
    }
}

function updateBundleDescriptionHeight() {
    var innerDesc = $(document).find('.ecomBundleDescPanel')[0];
    if (innerDesc) {
        var ecomDescWidget = innerDesc.parentNode;

        var amoutToChangeBy = innerDesc.offsetHeight - ecomDescWidget.offsetHeight;
        if (amoutToChangeBy != 0) {
            var heightbefore = ecomDescWidget.offsetHeight + ecomDescWidget.offsetTop;
            var divs = document.getElementById('content01').childNodes;
            for (var i = 0; i < divs.length; i++) {
                if (divs[i] != ecomDescWidget) {
                    if (divs[i].offsetTop > heightbefore) {
                        divs[i].style.top = (divs[i].offsetTop + amoutToChangeBy) + "px";
                    }
                }
            }
            ecomDescWidget.style.height = (ecomDescWidget.offsetHeight + amoutToChangeBy) + "px";
            document.getElementById('content01').style.height = ((document.getElementById('content01').offsetHeight + amoutToChangeBy) + 20) + "px";
        }
    }
}

function resizeMobileContainer(elemid) {
    var resizeElem = '#content01';

    if (initContentHeight < 0) {
        initContentHeight = $(resizeElem).outerHeight(true);
        //alert('set initContentHeight = ' + initContentHeight);
    }

    if (elemid.length > 0) {
        var elementOuterHeight = $('#' + elemid).outerHeight(true);

        if (initContentHeight < (elementOuterHeight)) { // 110 height of nav bar
            //if (currentContentHeight < (elementOuterHeight + 110)) { // 110 height of nav bar
            //alert(elemid + '.outerheight = ' + elementOuterHeight);
            $(resizeElem).height(elementOuterHeight);
        } else {
            $(resizeElem).height(initContentHeight);
        }
    } else {
        //alert("Reset page height to " + initContentHeight);
        $(resizeElem).height(initContentHeight);
    }
}
var tfm_path = '/Scripts/TinyMCEUploader/FileManager/';


(function ($) {
    $.fn.invisible = function () {
        return this.each(function () {
            $(this).css("visibility", "hidden");
        });
    };
    $.fn.visible = function () {
        return this.each(function () {
            $(this).css("visibility", "visible");
        });
    };
}(jQuery));

$.fn.hasAttr = function (name) {
    return this.attr(name) !== undefined;
};

//#region Loading Panel functions LIVE

var isMobileV2 = false;
var isTouchScreen = false;

function showLoadingPanel() {
    $('#loadingPanel').each(function () {
        if (isMobileV2) {
            $(this).css("marginTop", ((GetHeight() / 2) - 65) + "px");
        }
        else {
            $(this).css("marginLeft", "-" + ($(this).outerWidth(true) / 2) + "px");
            $(this).css("marginTop", "-" + ($(this).outerHeight(true) / 2) + "px");
        }
    });
    $('#loadingModalPanel').visible();
}

function hideLoadingPanel() {
    $('#loadingModalPanel').invisible();
}

//#endregion

//#region Loading Panel functions EDIT

function showIntLoadingPanel() {
    $('#intLoadingPanel').each(function () {
        if (isMobileV2) {
            $(this).css("marginTop", ((GetHeight() / 2) - 65) + "px");
        }
        else {
            $(this).css("marginLeft", "-" + ($(this).outerWidth(true) / 2) + "px");
            $(this).css("marginTop", "-" + ($(this).outerHeight(true) / 2) + "px");
        }
    });
    $('#intLoadingModalPanel').visible();
}

function hideIntLoadingPanel() {
    $('#intLoadingModalPanel').invisible();
}

//#endregion

//#region Modal Popup Message Panel LIVE

var functionCallBack = "";

function showPopupMessage(text, type, callBack) {
    $('#messageModalText').html(text);
    if (type == "OK") {
        $('#messageModalOK').show();
        $('#messageModalYes').hide();
        $('#messageModalNo').hide();
    }
    if (type == "YesNo") {
        functionCallBack = callBack;
        $('#messageModalOK').hide();
        $('#messageModalYes').show();
        $('#messageModalNo').show();
    }
    setTimeout("setPopupMessagePosition();", 250);
}

function setPopupMessagePosition() {
    $('#messageModalMessagePanel').each(function () {
        $(this).css("marginLeft", "-" + ($(this).outerWidth(true) / 2) + "px");
        $(this).css("marginTop", "-" + ($(this).outerHeight(true) / 2) + "px");
    });
    $('#messageModalPanel').visible();
}

function hidePopupMessage() {
    $('#messageModalPanel').invisible();
}

function popupYesClicked() {
    eval(functionCallBack + "('yes');");
}

function popupNoClicked() {
    eval(functionCallBack + "('no');");
}

//#endregion

//#region Modal Popup Message Panel EDIT

function showPopupIntMessage(text, type, callBack) {
    $('#intMessageModalText').html(text);
    if (type == "OK") {
        $('#intMessageModalOK').show();
        $('#intMessageModalYes').hide();
        $('#intMessageModalNo').hide();
    }
    if (type == "YesNo") {
        functionCallBack = callBack;
        $('#intMessageModalOK').hide();
        $('#intMessageModalYes').show();
        $('#intMessageModalNo').show();
    }
    setTimeout("setPopupIntMessagePosition();", 250);
}

function setPopupIntMessagePosition() {
    $('#intMessageModalMessagePanel').each(function () {
        $(this).css("marginLeft", "-" + ($(this).outerWidth(true) / 2) + "px");
        $(this).css("marginTop", "-" + ($(this).outerHeight(true) / 2) + "px");
    });
    $('#intMessageModalPanel').visible();
}

function hidePopupIntMessage() {
    $('#intMessageModalPanel').invisible();
}

//#endregion

// #region Build Advanced Navigation

function setEcomMenu(elem, ecomNavdir, navori, navanim, navspeed) {
    if (navori == "ver") {
        ecomNavdir = "ver";
    }
    if (!isMobileV2) {
        $(elem).find('.ecomNavLvl1Link').each(function () {
            var testWidth = this.parentNode.style.width;
            this.style.width = "100%";
            if (navori == "ver") {
                this.parentNode.style.width = "100%";
            }
        });
    }
    if (ecomNavdir == "hor") {
        $(elem).find('.ecomNavLvl2List').each(function () {
            this.style.top = this.parentNode.offsetHeight + "px";
        });
    }
    else {
        var left = 0;
        var right = 0;
        if (isMobileV2) {
            mobiV2AdvNavRootWidth = document.getElementById('mobiNavWrapper').offsetWidth;
            $(elem).find('.ecomNavLvl1Wrapper').each(function () {
                mobiV2AdvNavSubElemWidth = this.firstChild.offsetWidth;
                this.style.top = "0px";
                this.style.left = mobiV2AdvNavSubElemWidth + "px";
                this.style.overflow = "visible";
            });
            $(elem).find('.ecomNavLvl2Wrapper').each(function () {
                this.style.top = "0px";
                this.style.left = mobiV2AdvNavSubElemWidth + "px";
                this.style.overflow = "visible";
            });
            $(elem).find('.ecomNavLvl3Wrapper').each(function () {
                this.style.top = "0px";
                this.style.left = mobiV2AdvNavSubElemWidth + "px";
                this.style.overflow = "visible";
            });
            $(elem).find('.advNavMobiRightArrow').each(function () {
                var divs = this.parentNode.childNodes;
                for (var di = 0; di < divs.length; di++) {
                    if (divs[di].className.indexOf("Wrapper") > -1) {
                        this.style.visibility = "visible";
                        this.style.left = (this.parentNode.offsetWidth - this.offsetWidth) + "px";
                    }
                }
            });
        }
        else {
            if (isTouchScreen) {
                $(elem).find('.ecomNavLvl1Link').each(function () {
                    if (this.parentNode.getElementsByTagName("ul").length > 0) {
                        var linkTxt = this.getAttribute("href");
                        this.removeAttribute("href");
                        this.parentNode.onclick = function () { setFirstClick(linkTxt); };
                    }
                });
                $(elem).find('.ecomNavLvl2Link').each(function () {
                    if (this.parentNode.getElementsByTagName("ul").length > 0) {
                        var linkTxt = this.getAttribute("href");
                        this.removeAttribute("href");
                        this.parentNode.onclick = function () { setFirstClick(linkTxt); };
                    }
                });
            }
            $(elem).find('.ecomNavLvl2Wrapper').each(function () {
                this.style.height = "0px";
                var lvl2ItemWidth = 0;
                var lvl2LinkWidth = 0;
                $(this).children('ul').each(function () {
                    $(this).children('li').each(function () {
                        var link2 = this.getElementsByTagName("a")[0];
                        if (this.style.width.indexOf("px") > -1) {
                            lvl2ItemWidth = this.offsetWidth;
                            lvl2LinkWidth = lvl2ItemWidth;
                            return false;
                        }
                        else {
                            this.parentNode.style.width = "2000px";
                            var t = getFullWidth(link2);
                            if (t > lvl2ItemWidth) {
                                lvl2ItemWidth = t;
                            }
                            if (link2.offsetWidth > lvl2LinkWidth) {
                                lvl2LinkWidth = link2.offsetWidth;
                            }
                            this.parentNode.style.width = "";
                        }
                    });
                    $(this).children('li').each(function () {
                        this.style.width = lvl2ItemWidth + "px";
                        this.parentNode.style.width = lvl2ItemWidth + "px";
                        this.firstChild.style.width = lvl2LinkWidth + "px";
                    });
                });
                if (navori == "hor") {
                    if (lvl2ItemWidth > 980) {
                        this.style.right = "0px";
                    }
                    else {
                        this.style.top = this.parentNode.offsetHeight + "px";
                    }
                }
                else {
                    this.style.top = "0px";
                    if (lvl2ItemWidth > 980) {
                        this.style.right = this.parentNode.offsetWidth + "px";
                    }
                    else {
                        this.style.left = this.parentNode.offsetWidth + "px";
                    }
                }
            });
            $(elem).find('.ecomNavLvl3Wrapper').each(function () {
                this.style.width = "0px";
                var lvl3ItemWidth = 0;
                var lvl3LinkWidth = 0;
                $(this).children('ul').each(function () {
                    $(this).children('li').each(function () {
                        var link3 = this.getElementsByTagName("a")[0];
                        if (this.style.width.indexOf("px") > -1) {
                            lvl3ItemWidth = this.offsetWidth;
                            lvl3LinkWidth = lvl3ItemWidth;
                            return false;
                        }
                        else {
                            this.parentNode.style.width = "2000px";
                            var t = getFullWidth(link3);
                            if (t > lvl3ItemWidth) {
                                lvl3ItemWidth = t;
                            }
                            if (link3.offsetWidth > lvl3LinkWidth) {
                                lvl3LinkWidth = link3.offsetWidth;
                            }
                            this.parentNode.style.width = "";
                        }
                    });
                    $(this).children('li').each(function () {
                        this.style.width = lvl3ItemWidth + "px";
                        this.parentNode.style.width = lvl3ItemWidth + "px";
                        this.firstChild.style.width = lvl3LinkWidth + "px";
                    });
                });
                this.style.top = "0px";
                if (lvl3ItemWidth > 980) {
                    this.style.right = this.parentNode.offsetWidth + "px";
                }
                else {
                    this.style.left = this.parentNode.offsetWidth + "px";
                }
            });
        }
    }
    $(elem).find('.ecomNav').each(function () {
        this.style.visibility = "visible";
    });

    if (!isMobileV2) {
        $('.ecomNavLvl1Item').hover(
        function () {
            var elem = $(this).children('div')[0];
            if (elem) {
                if (navanim == "yes") {
                    if (elem.offsetTop == 0) {
                        $(elem).stop().animate({ width: this.firstChild.offsetWidth + 'px' }, navspeed, function () {
                            elem.style.overflow = "visible";
                        });
                    }
                    else {
                        $(elem).stop().animate({ height: this.firstChild.offsetHeight + 'px' }, navspeed, function () {
                            elem.style.overflow = "visible";
                        });
                    }
                }
                else {
                    elem.style.overflow = "visible";
                }
            }
        },
        function () {
            var elem = $(this).children('div')[0];
            if (elem) {
                if (navanim == "yes") {
                    if (elem.offsetTop == 0) {
                        elem.style.overflow = "hidden";
                        $(elem).stop().animate({ width: '0px' }, 100);
                    }
                    else {
                        elem.style.overflow = "hidden";
                        $(elem).stop().animate({ height: '0px' }, 100);
                    }
                }
                else {
                    elem.style.overflow = "hidden";
                }
            }
        });

        $('.ecomNavLvl2Item').hover(
        function () {
            var elem = $(this).children('div')[0];
            if (elem) {
                if (navanim == "yes") {
                    $(elem).stop().animate({ width: this.firstChild.offsetWidth + 'px' }, navspeed, function () {
                        elem.style.overflow = "visible";
                    });
                }
                else {
                    elem.style.overflow = "visible";
                }
            }
        },
        function () {
            var elem = $(this).children('div')[0];
            if (elem) {
                if (navanim == "yes") {
                    elem.style.overflow = "hidden";
                    $(elem, this).stop().animate({ width: '0px' }, 100);
                }
                else {
                    elem.style.overflow = "hidden";
                }
            }
        });
    }
}

// #endregion

// #region Main Menu

function setMenu() {
    if (!isMobileV2) {
        $('.newMenuRoot').each(function () {
            hasNav = true;
            if (navDir == null || navDir == "") {
                navDir = this.parentNode.parentNode.parentNode.getAttribute('orient');
            }
            if (navDir == null || navDir == "") {
                navDir = "horizontal";
            }
            if (navDir == "horizontal") {
                $('.menuBar').each(function () {
                    navFloat = $(this).css("float");
                });
            }
            else {
                $(this).css("float", "left");
                this.style.width = "100%";
                $('.menuBar').each(function () {
                    this.style.width = "100%";
                    this.style.margin = "0";
                });
                for (var k = 0; k < this.childNodes.length; k++) {
                    if (this.childNodes[k].tagName) {
                        if (this.childNodes[k].tagName.toLowerCase() == "li") {
                            this.childNodes[k].style.width = "100%";
                        }
                    }
                }
            }
            var navULs = this.getElementsByTagName("ul");
            for (var i = 0; i < navULs.length; i++) {
                if (navDir == "horizontal") {
                    if (navULs[i].parentNode.parentNode == this) {
                        navULs[i].style.top = navULs[i].parentNode.offsetHeight + "px";
                        if (navFloat == "right") {
                            var navLeft = navULs[i].offsetWidth - navULs[i].parentNode.offsetWidth;
                            navULs[i].style.left = "-" + navLeft + "px";
                            for (var j = 0; j < navULs[i].childNodes.length; j++) {
                                if (navULs[i].childNodes[j].tagName) {
                                    if (navULs[i].childNodes[j].tagName.toLowerCase() == "li") {
                                        $(navULs[i].childNodes[j]).css("float", "right");
                                    }
                                }
                            }
                        }
                        else {
                            navULs[i].style.left = "0px";
                        }
                    }
                    else {
                        navULs[i].style.width = "100%";
                        navULs[i].style.top = "0px";
                        if (navFloat == "right") {
                            navULs[i].style.left = "-" + navULs[i].parentNode.offsetWidth + "px";
                        }
                        else {
                            navULs[i].style.left = navULs[i].parentNode.offsetWidth + "px";
                        }
                    }
                }
                else {
                    navULs[i].style.top = "0px";
                    navULs[i].style.left = navULs[i].parentNode.offsetWidth + "px";
                }
            }
            this.style.visibility = "visible";
        });
    }
}

// #endregion

// #region Animated Image Widget

function setAllAnimatedTextWidgets() {
    $(document).find('.animatedImageWidgetWrapper').each(function () {
        var elem = this.parentNode;
        if (elem.tagName.toLowerCase() == "a") {
            elem = elem.parentNode;
        }
        initAnimatedImageWidget(elem);
        setAnimatedImageWidget(elem);
    });
}

function initAnimatedImageWidget(elem) {
    
    var trans = "";
    if (elem.getAttribute('trans')) {
        trans = elem.getAttribute('trans');
    }
    else {
        trans = getMyAttribute(elem.id, "trans");
    }
    if (trans == "fade") {
        $(elem).find(".animatedImageWidgetImage2").each(function () {
            this.style.opacity = "0";
            this.style.top = "0px";
            this.style.left = "0px";
        });
    }
    else {
        var animDir = "";
        if (elem.getAttribute('animdir')) {
            animDir = elem.getAttribute('animdir');
        }
        else {
            animDir = getMyAttribute(elem.id, "animdir");
        }
        if (animDir == "bottom") {
            $(elem).find(".animatedImageWidgetImage2").each(function () {
                this.style.top = elem.offsetHeight + "px";
                this.style.left = "0px";
                this.style.opacity = "1";
            });
        }
        else if (animDir == "top") {
            $(elem).find(".animatedImageWidgetImage2").each(function () {
                this.style.top = "-" + elem.offsetHeight + "px";
                this.style.left = "0px";
                this.style.opacity = "1";
            });
        }
        else if (animDir == "left") {
            $(elem).find(".animatedImageWidgetImage2").each(function () {
                this.style.top = "0px";
                this.style.left = "-" + elem.offsetWidth + "px";
                this.style.opacity = "1";
            });
        }
        else if (animDir == "right") {
            $(elem).find(".animatedImageWidgetImage2").each(function () {
                this.style.top = "0px";
                this.style.left = elem.offsetWidth + "px";
                this.style.opacity = "1";
            });
        }
    }
}

function setAnimatedImageWidget(elem) {
    $(elem).find('.animatedImageWidgetWrapper').each(function () {
        $(this).hover(function () {
            var speed = "";
            if (elem.getAttribute('speed')) {
                speed = parseInt(elem.getAttribute('speed'), 10);
            }
            else {
                speed = parseInt(getMyAttribute(elem.id, "speed"), 10);
            }
            var to = "";
            if (elem.getAttribute('opacto')) {
                to = parseFloat(elem.getAttribute('opacto'));
            }
            else {
                to = parseFloat(getMyAttribute(elem.id, "opacto"));
            }
            var trans = "";
            if (elem.getAttribute('trans')) {
                trans = elem.getAttribute('trans');
            }
            else {
                trans = getMyAttribute(elem.id, "trans");
            }
            if (trans == "fade") {
                $(".animatedImageWidgetImage2", this).stop().fadeTo(speed, to);
            }
            else {
                var animDir = "";
                if (elem.getAttribute('animdir')) {
                    animDir = elem.getAttribute('animdir');
                }
                else {
                    animDir = getMyAttribute(elem.id, "animdir");
                }
                if (animDir == "bottom") {
                    $(".animatedImageWidgetImage2", this).stop().animate({ top: '0px', opacity: to }, speed);
                }
                else if (animDir == "top") {
                    $(".animatedImageWidgetImage2", this).stop().animate({ top: '0px', opacity: to }, speed);
                }
                else if (animDir == "left") {
                    $(".animatedImageWidgetImage2", this).stop().animate({ left: '0px', opacity: to }, speed);
                }
                else if (animDir == "right") {
                    $(".animatedImageWidgetImage2", this).stop().animate({ left: '0px', opacity: to }, speed);
                }
            }
        }, function () {
            var speed = "";
            if (elem.getAttribute('speed')) {
                speed = parseInt(elem.getAttribute('speed'), 10);
            }
            else {
                speed = parseInt(getMyAttribute(elem.id, "speed"), 10);
            }
            var from = "";
            if (elem.getAttribute('opacfrom')) {
                from = parseFloat(elem.getAttribute('opacfrom'));
            }
            else {
                from = parseFloat(getMyAttribute(elem.id, "opacfrom"));
            }
            var trans = "";
            if (elem.getAttribute('trans')) {
                trans = elem.getAttribute('trans');
            }
            else {
                trans = getMyAttribute(elem.id, "trans");
            }
            if (trans == "fade") {
                $(".animatedImageWidgetImage2", this).stop().fadeTo(speed, from);
            }
            else {
                var animDir = "";
                if (elem.getAttribute('animdir')) {
                    animDir = elem.getAttribute('animdir');
                }
                else {
                    animDir = getMyAttribute(elem.id, "animdir");
                }
                if (animDir == "bottom") {
                    $(".animatedImageWidgetImage2", this).stop().animate({ top: this.parentNode.offsetHeight + 'px', opacity: from }, speed);
                }
                else if (animDir == "top") {
                    $(".animatedImageWidgetImage2", this).stop().animate({ top: "-" + this.parentNode.offsetHeight + 'px', opacity: from }, speed);
                }
                else if (animDir == "left") {
                    $(".animatedImageWidgetImage2", this).stop().animate({ left: "-" + this.parentNode.offsetWidth + "px", opacity: from }, speed);
                }
                else if (animDir == "right") {
                    $(".animatedImageWidgetImage2", this).stop().animate({ left: this.parentNode.offsetWidth + "px", opacity: from }, speed);
                }
            }
        });
    });
}

// #endregion

function PopUpNotify(title, text) {

    $("#Notify").notify();
    $("#Notify").notify("create", {
        title: title,
        text: text
    });
}


function addScript(src, onload) {

	var p = new Promise();

	if (!src || !(typeof src === 'string')) { return };
	var script = document.createElement('script');
	//if this is IE8 and below, handle onload differently
	if (typeof document.attachEvent === "object") {
		script.onreadystatechange = function () {
			//once the script is loaded, run the callback
			if (script.readyState === 'loaded') {
				if (onload) { onload() };
			};
		};
	} else {
		//this is not IE8 and below, so we can actually use onload
		script.onload = function () {
			p.fulfill(src + " loaded");
			//once the script is loaded, run the callback
			if (onload) { onload() };
		};
	};

	if (src.indexOf("?") == -1)
		src += "?dt=" + (typeof verident != "undefined" ? verident : Math.random());

	//create the script and add it to the DOM
	script.src = src;
	document.getElementsByTagName('head')[0].appendChild(script);

	return p;

}

function addStyle(src) {

	var p = new Promise();

	elid = src.split("/")[src.split("/").length - 1].split(".")[0];

	if (!src || !(typeof src === 'string') || document.getElementById("css_runtime_loaded_" + elid) != null) { return };
	var link = document.createElement('link');
	link.id = "css_runtime_loaded_" + elid;
	link.rel = 'stylesheet';
	link.type = 'text/css';
	link.href = src;
	link.media = 'all';

	if (src.indexOf("?") == -1)
		src += "?dt=" + (typeof verident != "undefined" ? verident : Math.random());

	//create the script and add it to the DOM
	link.src = src;
	document.getElementsByTagName('head')[0].appendChild(link);

	p.fulfill();

	return p;

}

/* debugging */

window.logtoconsole = function (message, type) {
	if (window.request_is_local) {
		if (type == "table") {
			console.table(message);
		}
		else {
			console.log(message);
		}

	}
}

/* end debugging */

/* --- AutoComplete */
var Backend = Backend || {};
Backend.Global = Backend.Global || {};
var AutoComplete = (function () {

	var AutoComplete = function () {
		this.libLoaded = false;
		this.Selected = null;
		this.newValue = true;
		this.autocomplete = null;
		this.lastInput = "";
	};
	AutoComplete.prototype = {
		prepare: function () {
			var p = new Promise();
			var self = this;
			if (this.libLoaded == false) {
				addStyle("/Css/awesomplete.css");
				addScript("/Scripts/libs/awesomplete.js", function () { self.libLoaded = true; p.fulfill("loaded"); });
			}
			return p;
		},
		apply: function (element, data, options) {

			var ac = new AutoComplete();

			var self = ac;
			this.prepare();

			if (data == undefined || data.length == 0)
				return undefined;

			if (options == undefined) {
				options = { nameParameter: "Name" };
			}

			var nameParameter = options.nameParameter;
			var valueParameter = options.valueParameter;

			if (typeof (data[0]) == "object" && nameParameter == undefined)
				nameParameter = "Name";

			if (valueParameter == undefined)
				valueParameter = nameParameter;

			var datalist = [];
			if (data != null)
				for (var i = 0; i < data.length; i++) {
					var d = data[i];
					if (typeof (d) == "object")
						datalist.push({
							label: (typeof (nameParameter) == "function" ? nameParameter(d) : d[nameParameter]),
							value: (typeof (valueParameter) == "function" ? valueParameter(d) : d[valueParameter])
						});
					else
						datalist.push({ label: d, value: d });
				}
			//if (typeof (options.onSelect) != "undefined") {
			element.addEventListener("keyup", function (event) {
				if (element.value != self.lastInput) {
					self.newValue = true;
					self.Selected = null;
					if (typeof (options.onNewValue) != "undefined") {
						options.onNewValue(element.value);
					}
				}
				self.lastInput = element.value;
			});

			element.addEventListener("awesomplete-selectcomplete", function (event) {
				self.newValue = false;
				self.Selected = event.text;
				logtoconsole("select complete");
			});
			//}


			var awesome = new Awesomplete(element,
                {
                	list: datalist,
                	replace: function (text) {
                		var enteredText = this.input.value;
                		logtoconsole("replace");
                		self.Selected = text;
                		self.newValue = false;
                		self.lastInput = text.label;
                		this.input.value = text.label;
                		if (typeof (options.onSelect) != "undefined") {
                			options.onSelect(text, this.input, enteredText);
                		}
                	}
                });

			ac.autocomplete = awesome;

			return ac;
		}
	};

	return AutoComplete;

})();
Backend.Global.AutoComplete = new AutoComplete;

/* Promises */

var Promise = (function () {

	var State = {
		PENDING: 'pending',
		FULFILLED: 'fulfilled',
		REJECTED: 'rejected'
	};

	function Promise(config) {
		this.state = State.PENDING;
		this.cache = [];
		this.onDone = function () { };
		this.onAlways = function () { };
	}

	Promise.prototype = {
		changeState: function (state, value) {
			// not allowed if we're moving to the same state
			// or if we're fulfilled/rejected
			// or if we're moving to fulfilled and the value is undefined/null
			if (this.state === state ||
            this.state === State.REJECTED ||
            this.state === State.FULFILLED ||
            state === State.FULFILLED && arguments.length < 2 ||
            state === State.FULFILLED && value == null) {
				return;
			} else {
				this.state = state;
				this.value = value;
				this.resolve();
				return this.state;
			}
		},
		async: function (fn) {
			var t = setTimeout(fn, 1);
		},
		fulfill: function (value) {
			this.changeState(State.FULFILLED, value);
		},
		reject: function (reason) {
			this.changeState(State.REJECTED, reason);
		},
		done: function (fn) {
			this.onDone = fn;
		},
		always: function (fn) {
			this.onAlways = fn;
		},
		then: function (onFulfilled, onRejected) {
			var self = this;
			// create new promise and push to cache
			var promise = new Promise();
			this.async(function () {
				self.cache.push({
					fulfil: onFulfilled,
					reject: onRejected,
					promise: promise
				});
				self.resolve();
			});
			return promise;
		},
		resolve: function () {
			if (this.state === State.PENDING) {
				return false;
			}
			// try to resolve all promises in cache
			while (this.cache.length) {
				var cacheObj = this.cache.shift();
				// get relevant function
				var fn = (this.state === State.FULFILLED ? cacheObj.fulfil : cacheObj.reject);
				// if there's no function, move along
				if (!fn) {
					cacheObj.promise.changeState(this.state, this.value);
				} else {
					try {
						// exec function to get value
						var result = fn(this.value);
						// try to resolve if function is a promise
						if (result && result instanceof Promise) {
							result.then(function (value) {
								cacheObj.promise.changeState(State.FULFILLED, value);
							}, function (reason) {
								cacheObj.promise.changeState(State.REJECTED, reason);
							});
						} else {
							// otherwise, resolve
							cacheObj.promise.changeState(State.FULFILLED, result);
						}
					} catch (e) {
						// reject exceptions
						cacheObj.promise.changeState(State.REJECTED, e);
					}
				}
			}
			if (this.state === State.FULFILLED) {
				this.onDone(this.value);
			}
			this.onAlways(this.value);
		}
	}
	return Promise;
}());




}
/*
     FILE ARCHIVED ON 20:29:32 Feb 21, 2019 AND RETRIEVED FROM THE
     INTERNET ARCHIVE ON 19:24:51 Jan 18, 2024.
     JAVASCRIPT APPENDED BY WAYBACK MACHINE, COPYRIGHT INTERNET ARCHIVE.

     ALL OTHER CONTENT MAY ALSO BE PROTECTED BY COPYRIGHT (17 U.S.C.
     SECTION 108(a)(3)).
*/
/*
playback timings (ms):
  captures_list: 97.535
  exclusion.robots: 0.129
  exclusion.robots.policy: 0.12
  cdx.remote: 0.056
  esindex: 0.01
  LoadShardBlock: 71.382 (3)
  PetaboxLoader3.datanode: 196.031 (5)
  load_resource: 514.509 (2)
  PetaboxLoader3.resolve: 329.722 (2)
*/